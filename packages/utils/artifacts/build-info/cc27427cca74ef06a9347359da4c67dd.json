{"id":"cc27427cca74ef06a9347359da4c67dd","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./Helpers.sol\";\n\n/**\n * Basic account implementation.\n * this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n * specific account implementation should inherit it and provide the account-specific logic\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for UserOperation;\n\n    //return value in case of signature failure, with no time-range.\n    // equivalent to _packValidationData(true,0,0);\n    uint256 constant internal SIG_VALIDATION_FAILED = 1;\n\n    /**\n     * return the account nonce.\n     * subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)\n     */\n    function nonce() public view virtual returns (uint256);\n\n    /**\n     * return the entryPoint used by this account.\n     * subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * Validate user's signature and nonce.\n     * subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds)\n    external override virtual returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        if (userOp.initCode.length == 0) {\n            _validateAndUpdateNonce(userOp);\n        }\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal virtual view {\n        require(msg.sender == address(entryPoint()), \"account: not from EntryPoint\");\n    }\n\n    /**\n     * validate the signature is valid for this message.\n     * @param userOp validate the userOp.signature field\n     * @param userOpHash convenient field: the hash of the request, to check the signature against\n     *          (also hashes the entrypoint and chain id)\n     * @return validationData signature and time-range of this operation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash)\n    internal virtual returns (uint256 validationData);\n\n    /**\n     * validate the current nonce matches the UserOperation nonce.\n     * then it should update the account's state to prevent replay of this UserOperation.\n     * called only if initCode is empty (since \"nonce\" field is used as \"salt\" on account creation)\n     * @param userOp the op to validate.\n     */\n    function _validateAndUpdateNonce(UserOperation calldata userOp) internal virtual;\n\n    /**\n     * sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * subclass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again)\n     * @param missingAccountFunds the minimum value this method should send the entrypoint.\n     *  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{value : missingAccountFunds, gas : type(uint256).max}(\"\");\n            (success);\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}\n"},"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n"},"@account-abstraction/contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\ninterface IAccount {\n\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp the operation that is about to be executed.\n     * @param userOpHash hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n     *      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n     *      The excess is left as a deposit in the entrypoint, for future calls.\n     *      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n     *      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n     * @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 missingAccountFunds)\n    external returns (uint256 validationData);\n}\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp)\n    external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\n\ninterface IEntryPoint is IStakeManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}\n"},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n    /**\n     * User Operation struct\n     * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call.\n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        //lighter signature scheme. must match UserOp.ts#packUserOp\n        bytes calldata sig = userOp.signature;\n        // copy directly the userOp from calldata up to (but not including) the signature.\n        // this encoding depends on the ABI encoding of calldata, but is much lighter to copy\n        // than referencing each field separately.\n        assembly {\n            let ofs := userOp\n            let len := sub(sub(sig.offset, ofs), 32)\n            ret := mload(0x40)\n            mstore(0x40, add(ret, add(len, 32)))\n            mstore(ret, len)\n            calldatacopy(add(ret, 32), ofs, len)\n        }\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"@account-abstraction/contracts/samples/SimpleAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\n\nimport \"../core/BaseAccount.sol\";\n\n/**\n  * minimal account.\n  *  this is sample minimal account.\n  *  has execute, eth handling methods\n  *  has a single signer that can send requests through the entryPoint.\n  */\ncontract SimpleAccount is BaseAccount, UUPSUpgradeable, Initializable {\n    using ECDSA for bytes32;\n\n    //filler member, to push the nonce and owner to the same slot\n    // the \"Initializeble\" class takes 2 bytes in the first slot\n    bytes28 private _filler;\n\n    //explicit sizes of nonce, to fit a single storage cell with \"owner\"\n    uint96 private _nonce;\n    address public owner;\n\n    IEntryPoint private immutable _entryPoint;\n\n    event SimpleAccountInitialized(IEntryPoint indexed entryPoint, address indexed owner);\n\n    modifier onlyOwner() {\n        _onlyOwner();\n        _;\n    }\n\n    /// @inheritdoc BaseAccount\n    function nonce() public view virtual override returns (uint256) {\n        return _nonce;\n    }\n\n    /// @inheritdoc BaseAccount\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _entryPoint;\n    }\n\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n\n    constructor(IEntryPoint anEntryPoint) {\n        _entryPoint = anEntryPoint;\n        _disableInitializers();\n    }\n\n    function _onlyOwner() internal view {\n        //directly from EOA owner, or through the account itself (which gets redirected through execute())\n        require(msg.sender == owner || msg.sender == address(this), \"only owner\");\n    }\n\n    /**\n     * execute a transaction (called directly from owner, or by entryPoint)\n     */\n    function execute(address dest, uint256 value, bytes calldata func) external {\n        _requireFromEntryPointOrOwner();\n        _call(dest, value, func);\n    }\n\n    /**\n     * execute a sequence of transactions\n     */\n    function executeBatch(address[] calldata dest, bytes[] calldata func) external {\n        _requireFromEntryPointOrOwner();\n        require(dest.length == func.length, \"wrong array lengths\");\n        for (uint256 i = 0; i < dest.length; i++) {\n            _call(dest[i], 0, func[i]);\n        }\n    }\n\n    /**\n     * @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n     * a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n      * the implementation by calling `upgradeTo()`\n     */\n    function initialize(address anOwner) public virtual initializer {\n        _initialize(anOwner);\n    }\n\n    function _initialize(address anOwner) internal virtual {\n        owner = anOwner;\n        emit SimpleAccountInitialized(_entryPoint, owner);\n    }\n\n    // Require the function call went through EntryPoint or owner\n    function _requireFromEntryPointOrOwner() internal view {\n        require(msg.sender == address(entryPoint()) || msg.sender == owner, \"account: not Owner or EntryPoint\");\n    }\n\n    /// implement template method of BaseAccount\n    function _validateAndUpdateNonce(UserOperation calldata userOp) internal override {\n        require(_nonce++ == userOp.nonce, \"account: invalid nonce\");\n    }\n\n    /// implement template method of BaseAccount\n    function _validateSignature(UserOperation calldata userOp, bytes32 userOpHash)\n    internal override virtual returns (uint256 validationData) {\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\n        if (owner != hash.recover(userOp.signature))\n            return SIG_VALIDATION_FAILED;\n        return 0;\n    }\n\n    function _call(address target, uint256 value, bytes memory data) internal {\n        (bool success, bytes memory result) = target.call{value : value}(data);\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    /**\n     * check current account deposit in the entryPoint\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /**\n     * deposit more funds for this account in the entryPoint\n     */\n    function addDeposit() public payable {\n        entryPoint().depositTo{value : msg.value}(address(this));\n    }\n\n    /**\n     * withdraw value from the account's deposit\n     * @param withdrawAddress target to send to\n     * @param amount to withdraw\n     */\n    function withdrawDepositTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n        entryPoint().withdrawTo(withdrawAddress, amount);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override {\n        (newImplementation);\n        _onlyOwner();\n    }\n}\n\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable, ERC1967Upgrade {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/test/SampleRecipient.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// TODO: get hardhat types from '@account-abstraction' package directly\n// only to import the file in hardhat compilation\nimport \"@account-abstraction/contracts/samples/SimpleAccount.sol\";\n\ncontract SampleRecipient {\n\n    SimpleAccount wallet;\n\n    event Sender(address txOrigin, address msgSender, string message);\n\n    function something(string memory message) public {\n        emit Sender(tx.origin, msg.sender, message);\n    }\n\n    // solhint-disable-next-line\n    function reverting() public {\n        revert( \"test revert\");\n    }\n}\n"},"contracts/test/SingletonFactory.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.15;\n\n/**\n * @title Singleton Factory (EIP-2470)\n * @notice Exposes CREATE2 (EIP-1014) to deploy bytecode on deterministic addresses based on initialization code and salt.\n * @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)\n */\ncontract SingletonFactory {\n    /**\n     * @notice Deploys `_initCode` using `_salt` for defining the deterministic address.\n     * @param _initCode Initialization code.\n     * @param _salt Arbitrary value to modify resulting address.\n     * @return createdContract Created contract address.\n     */\n    function deploy(bytes memory _initCode, bytes32 _salt)\n    public\n    returns (address payable createdContract)\n    {\n        assembly {\n            createdContract := create2(0, add(_initCode, 0x20), mload(_initCode), _salt)\n        }\n    }\n}\n// IV is a value changed to generate the vanity address.\n// IV: 6583047\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/test/SampleRecipient.sol:19:5:\n   |\n19 |     function reverting() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":592,"file":"contracts/test/SampleRecipient.sol","start":525},"type":"Warning"}],"sources":{"@account-abstraction/contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[136],"IAccount":[381],"IAggregator":[415],"IEntryPoint":[613],"IStakeManager":[718],"UserOperation":[743],"UserOperationLib":[848],"ValidationData":[145],"_intersectTimeRange":[289],"_packValidationData":[326,364],"_parseValidationData":[204]},"id":137,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:0"},{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":382,"src":"184:36:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":614,"src":"221:39:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":365,"src":"261:23:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"IAccount","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"552:8:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"552:8:0"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"286:232:0","text":" Basic account implementation.\n this contract provides the basic logic for implementing the IAccount interface  - validateUserOp\n specific account implementation should inherit it and provide the account-specific logic"},"fullyImplemented":false,"id":136,"linearizedBaseContracts":[136,381],"name":"BaseAccount","nameLocation":"537:11:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":11,"libraryName":{"id":8,"name":"UserOperationLib","nodeType":"IdentifierPath","referencedDeclaration":848,"src":"573:16:0"},"nodeType":"UsingForDirective","src":"567:41:0","typeName":{"id":10,"nodeType":"UserDefinedTypeName","pathNode":{"id":9,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"594:13:0"},"referencedDeclaration":743,"src":"594:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}}},{"constant":true,"id":14,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"761:21:0","nodeType":"VariableDeclaration","scope":136,"src":"735:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"785:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"793:191:0","text":" return the account nonce.\n subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)"},"functionSelector":"affed0e0","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"998:5:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"1003:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"1035:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1034:9:0"},"scope":136,"src":"989:55:0","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"1050:137:0","text":" return the entryPoint used by this account.\n subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":27,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1201:10:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1211:2:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":27,"src":"1243:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},"typeName":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"IEntryPoint","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1243:11:0"},"referencedDeclaration":613,"src":"1243:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1242:13:0"},"scope":136,"src":"1192:64:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[380],"body":{"id":66,"nodeType":"Block","src":"1613:246:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1623:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1623:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1623:24:0"},{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":44,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"1657:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":46,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1693:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},{"id":47,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1701:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":45,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1674:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$743_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct UserOperation calldata,bytes32) returns (uint256)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1674:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1657:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"1657:55:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":51,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1726:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":726,"src":"1726:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1726:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1752:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1726:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61,"nodeType":"IfStatement","src":"1722:89:0","trueBody":{"id":60,"nodeType":"Block","src":"1755:56:0","statements":[{"expression":{"arguments":[{"id":57,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1793:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":56,"name":"_validateAndUpdateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"1769:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UserOperation_$743_calldata_ptr_$returns$__$","typeString":"function (struct UserOperation calldata)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1769:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"ExpressionStatement","src":"1769:31:0"}]}},{"expression":{"arguments":[{"id":63,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1832:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"1820:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1820:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65,"nodeType":"ExpressionStatement","src":"1820:32:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"1262:179:0","text":" Validate user's signature and nonce.\n subclass doesn't need to override this method. Instead, it should override the specific internal validation methods."},"functionSelector":"3a871cdd","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1455:14:0","nodeType":"FunctionDefinition","overrides":{"id":37,"nodeType":"OverrideSpecifier","overrides":[],"src":"1563:8:0"},"parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"userOp","nameLocation":"1493:6:0","nodeType":"VariableDeclaration","scope":67,"src":"1470:29:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":30,"nodeType":"UserDefinedTypeName","pathNode":{"id":29,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"1470:13:0"},"referencedDeclaration":743,"src":"1470:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"userOpHash","nameLocation":"1509:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1501:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1501:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1529:19:0","nodeType":"VariableDeclaration","scope":67,"src":"1521:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"1521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1469:80:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"validationData","nameLocation":"1597:14:0","nodeType":"VariableDeclaration","scope":67,"src":"1589:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1588:24:0"},"scope":136,"src":"1446:413:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":83,"nodeType":"Block","src":"1996:93:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":72,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2014:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2014:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":76,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2036:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$613_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2036:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}],"id":75,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"2028:7:0","typeDescriptions":{}}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2028:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2014:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2051:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":71,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2006:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2006:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":82,"nodeType":"ExpressionStatement","src":"2006:76:0"}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1865:70:0","text":" ensure the request comes from the known entrypoint."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"1949:22:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1971:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1996:0:0"},"scope":136,"src":"1940:149:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2095:904:0","text":" validate the signature is valid for this message.\n @param userOp validate the userOp.signature field\n @param userOpHash convenient field: the hash of the request, to check the signature against\n          (also hashes the entrypoint and chain id)\n @return validationData signature and time-range of this operation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If the account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":95,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3013:18:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"userOp","nameLocation":"3055:6:0","nodeType":"VariableDeclaration","scope":95,"src":"3032:29:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":87,"nodeType":"UserDefinedTypeName","pathNode":{"id":86,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"3032:13:0"},"referencedDeclaration":743,"src":"3032:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"userOpHash","nameLocation":"3071:10:0","nodeType":"VariableDeclaration","scope":95,"src":"3063:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3031:51:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"validationData","nameLocation":"3121:14:0","nodeType":"VariableDeclaration","scope":95,"src":"3113:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3112:24:0"},"scope":136,"src":"3004:133:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"3143:309:0","text":" validate the current nonce matches the UserOperation nonce.\n then it should update the account's state to prevent replay of this UserOperation.\n called only if initCode is empty (since \"nonce\" field is used as \"salt\" on account creation)\n @param userOp the op to validate."},"id":102,"implemented":false,"kind":"function","modifiers":[],"name":"_validateAndUpdateNonce","nameLocation":"3466:23:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"userOp","nameLocation":"3513:6:0","nodeType":"VariableDeclaration","scope":102,"src":"3490:29:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":98,"nodeType":"UserDefinedTypeName","pathNode":{"id":97,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"3490:13:0"},"referencedDeclaration":743,"src":"3490:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3489:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3537:0:0"},"scope":136,"src":"3457:81:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"4113:270:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":108,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"4127:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4150:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4127:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":133,"nodeType":"IfStatement","src":"4123:254:0","trueBody":{"id":132,"nodeType":"Block","src":"4153:224:0","statements":[{"assignments":[112,null],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"success","nameLocation":"4173:7:0","nodeType":"VariableDeclaration","scope":132,"src":"4168:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4168:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":128,"initialValue":{"arguments":[{"hexValue":"","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4264:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4193:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4193:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4185:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"4185:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4185:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4185:24:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":119,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"4218:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4250:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4250:7:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":120,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4245:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4245:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4245:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4185:78:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4185:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4167:100:0"},{"expression":{"components":[{"id":129,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"4282:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4281:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":131,"nodeType":"ExpressionStatement","src":"4281:9:0"}]}}]},"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"3544:497:0","text":" sends to the entrypoint (msg.sender) the missing funds for this transaction.\n subclass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again)\n @param missingAccountFunds the minimum value this method should send the entrypoint.\n  this value MAY be zero, in case there is enough deposit, or the userOp has a paymaster."},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"4055:11:0","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"4075:19:0","nodeType":"VariableDeclaration","scope":135,"src":"4067:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4067:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4066:29:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"4113:0:0"},"scope":136,"src":"4046:337:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":137,"src":"519:3866:0","usedErrors":[]}],"src":"36:4350:0"},"id":0},"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[145],"_intersectTimeRange":[289],"_packValidationData":[326,364],"_parseValidationData":[204]},"id":365,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:1"},{"canonicalName":"ValidationData","id":145,"members":[{"constant":false,"id":140,"mutability":"mutable","name":"aggregator","nameLocation":"688:10:1","nodeType":"VariableDeclaration","scope":145,"src":"680:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":139,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"validAfter","nameLocation":"715:10:1","nodeType":"VariableDeclaration","scope":145,"src":"708:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":141,"name":"uint48","nodeType":"ElementaryTypeName","src":"708:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"validUntil","nameLocation":"742:10:1","nodeType":"VariableDeclaration","scope":145,"src":"735:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":143,"name":"uint48","nodeType":"ElementaryTypeName","src":"735:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"655:14:1","nodeType":"StructDefinition","scope":365,"src":"648:111:1","visibility":"public"},{"body":{"id":203,"nodeType":"Block","src":"955:346:1","statements":[{"assignments":[154],"declarations":[{"constant":false,"id":154,"mutability":"mutable","name":"aggregator","nameLocation":"973:10:1","nodeType":"VariableDeclaration","scope":203,"src":"965:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":162,"initialValue":{"arguments":[{"arguments":[{"id":159,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1002:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"994:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":157,"name":"uint160","nodeType":"ElementaryTypeName","src":"994:7:1","typeDescriptions":{}}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"994:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"986:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"986:7:1","typeDescriptions":{}}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"986:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"965:53:1"},{"assignments":[164],"declarations":[{"constant":false,"id":164,"mutability":"mutable","name":"validUntil","nameLocation":"1035:10:1","nodeType":"VariableDeclaration","scope":203,"src":"1028:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":163,"name":"uint48","nodeType":"ElementaryTypeName","src":"1028:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":171,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":167,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1055:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1073:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1055:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1048:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":165,"name":"uint48","nodeType":"ElementaryTypeName","src":"1048:6:1","typeDescriptions":{}}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1028:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":172,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1091:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1091:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":184,"nodeType":"IfStatement","src":"1087:75:1","trueBody":{"id":183,"nodeType":"Block","src":"1108:54:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":175,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1122:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1140:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":177,"name":"uint48","nodeType":"ElementaryTypeName","src":"1140:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":176,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1135:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1135:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1135:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1122:29:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":182,"nodeType":"ExpressionStatement","src":"1122:29:1"}]}},{"assignments":[186],"declarations":[{"constant":false,"id":186,"mutability":"mutable","name":"validAfter","nameLocation":"1178:10:1","nodeType":"VariableDeclaration","scope":203,"src":"1171:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":185,"name":"uint48","nodeType":"ElementaryTypeName","src":"1171:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":196,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":189,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1198:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1217:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1217:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1216:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1198:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1191:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":187,"name":"uint48","nodeType":"ElementaryTypeName","src":"1191:6:1","typeDescriptions":{}}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1191:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1171:56:1"},{"expression":{"arguments":[{"id":198,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1259:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":199,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"1271:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":200,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1283:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":197,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1244:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$145_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1244:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":152,"id":202,"nodeType":"Return","src":"1237:57:1"}]},"id":204,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"871:20:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"validationData","nameLocation":"897:14:1","nodeType":"VariableDeclaration","scope":204,"src":"892:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint","nodeType":"ElementaryTypeName","src":"892:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:21:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"data","nameLocation":"949:4:1","nodeType":"VariableDeclaration","scope":204,"src":"927:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":150,"nodeType":"UserDefinedTypeName","pathNode":{"id":149,"name":"ValidationData","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"927:14:1"},"referencedDeclaration":145,"src":"927:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"926:28:1"},"scope":365,"src":"862:439:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":288,"nodeType":"Block","src":"1473:804:1","statements":[{"assignments":[216],"declarations":[{"constant":false,"id":216,"mutability":"mutable","name":"accountValidationData","nameLocation":"1505:21:1","nodeType":"VariableDeclaration","scope":288,"src":"1483:43:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":215,"nodeType":"UserDefinedTypeName","pathNode":{"id":214,"name":"ValidationData","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"1483:14:1"},"referencedDeclaration":145,"src":"1483:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":220,"initialValue":{"arguments":[{"id":218,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"1550:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":217,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1529:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$145_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1529:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1483:82:1"},{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"pmValidationData","nameLocation":"1597:16:1","nodeType":"VariableDeclaration","scope":288,"src":"1575:38:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":222,"nodeType":"UserDefinedTypeName","pathNode":{"id":221,"name":"ValidationData","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"1575:14:1"},"referencedDeclaration":145,"src":"1575:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[{"id":225,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1637:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":224,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1616:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$145_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1616:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1575:86:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"aggregator","nameLocation":"1679:10:1","nodeType":"VariableDeclaration","scope":288,"src":"1671:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"1671:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":232,"initialValue":{"expression":{"id":230,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"1692:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":140,"src":"1692:32:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1671:53:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":233,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1738:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1760:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{}}},"id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1752:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1738:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":245,"nodeType":"IfStatement","src":"1734:95:1","trueBody":{"id":244,"nodeType":"Block","src":"1764:65:1","statements":[{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":239,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1778:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":240,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1791:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":140,"src":"1791:27:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1778:40:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":243,"nodeType":"ExpressionStatement","src":"1778:40:1"}]}},{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"validAfter","nameLocation":"1845:10:1","nodeType":"VariableDeclaration","scope":288,"src":"1838:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":246,"name":"uint48","nodeType":"ElementaryTypeName","src":"1838:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":250,"initialValue":{"expression":{"id":248,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"1858:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":142,"src":"1858:32:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1838:52:1"},{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"validUntil","nameLocation":"1907:10:1","nodeType":"VariableDeclaration","scope":288,"src":"1900:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":251,"name":"uint48","nodeType":"ElementaryTypeName","src":"1900:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":255,"initialValue":{"expression":{"id":253,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"1920:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":144,"src":"1920:32:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1900:52:1"},{"assignments":[257],"declarations":[{"constant":false,"id":257,"mutability":"mutable","name":"pmValidAfter","nameLocation":"1969:12:1","nodeType":"VariableDeclaration","scope":288,"src":"1962:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":256,"name":"uint48","nodeType":"ElementaryTypeName","src":"1962:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":260,"initialValue":{"expression":{"id":258,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1984:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":142,"src":"1984:27:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1962:49:1"},{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2028:12:1","nodeType":"VariableDeclaration","scope":288,"src":"2021:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":261,"name":"uint48","nodeType":"ElementaryTypeName","src":"2021:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":265,"initialValue":{"expression":{"id":263,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2043:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":264,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":144,"src":"2043:27:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2021:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2085:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":267,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2098:12:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2085:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":273,"nodeType":"IfStatement","src":"2081:56:1","trueBody":{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":269,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2112:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":270,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2125:12:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2112:25:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":272,"nodeType":"ExpressionStatement","src":"2112:25:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":274,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2151:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":275,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2164:12:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2151:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"2147:56:1","trueBody":{"expression":{"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":277,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2178:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":278,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"2191:12:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2178:25:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":280,"nodeType":"ExpressionStatement","src":"2178:25:1"}},{"expression":{"arguments":[{"id":283,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2235:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":284,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2247:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":285,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2259:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":282,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2220:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$145_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2220:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":213,"id":287,"nodeType":"Return","src":"2213:57:1"}]},"id":289,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1359:19:1","nodeType":"FunctionDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"validationData","nameLocation":"1387:14:1","nodeType":"VariableDeclaration","scope":289,"src":"1379:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1411:23:1","nodeType":"VariableDeclaration","scope":289,"src":"1403:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1403:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1378:57:1"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"1450:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":211,"nodeType":"UserDefinedTypeName","pathNode":{"id":210,"name":"ValidationData","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"1450:14:1"},"referencedDeclaration":145,"src":"1450:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1449:23:1"},"scope":365,"src":"1350:927:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":325,"nodeType":"Block","src":"2469:127:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":300,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2494:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":140,"src":"2494:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":298,"name":"uint160","nodeType":"ElementaryTypeName","src":"2486:7:1","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":305,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2522:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":144,"src":"2522:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2514:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"2514:7:1","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2514:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2514:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2513:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2486:60:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2558:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData memory"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":142,"src":"2558:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2550:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:1","typeDescriptions":{}}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2550:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2579:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2579:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2578:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2550:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2549:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2486:103:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":297,"id":324,"nodeType":"Return","src":"2479:110:1"}]},"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"2279:105:1","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":326,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2398:19:1","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"data","nameLocation":"2440:4:1","nodeType":"VariableDeclaration","scope":326,"src":"2418:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"ValidationData","nodeType":"IdentifierPath","referencedDeclaration":145,"src":"2418:14:1"},"referencedDeclaration":145,"src":"2418:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$145_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2417:28:1"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":326,"src":"2460:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2459:9:1"},"scope":365,"src":"2389:207:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":363,"nodeType":"Block","src":"3020:112:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":338,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3038:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3054:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3038:17:1","trueExpression":{"hexValue":"31","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3050:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3037:19:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":345,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3068:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:1","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3060:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3060:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3059:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3037:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":353,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"3099:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3091:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3091:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3091:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3115:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3115:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3114:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3091:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":360,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3090:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3037:88:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":337,"id":362,"nodeType":"Return","src":"3030:95:1"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"2598:311:1","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":364,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2923:19:1","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"sigFailed","nameLocation":"2948:9:1","nodeType":"VariableDeclaration","scope":364,"src":"2943:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":328,"name":"bool","nodeType":"ElementaryTypeName","src":"2943:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"validUntil","nameLocation":"2966:10:1","nodeType":"VariableDeclaration","scope":364,"src":"2959:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":330,"name":"uint48","nodeType":"ElementaryTypeName","src":"2959:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"validAfter","nameLocation":"2985:10:1","nodeType":"VariableDeclaration","scope":364,"src":"2978:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":332,"name":"uint48","nodeType":"ElementaryTypeName","src":"2978:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2942:54:1"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":364,"src":"3011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3010:9:1"},"scope":365,"src":"2914:218:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3097:1"},"id":1},"@account-abstraction/contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[381],"UserOperation":[743],"UserOperationLib":[848]},"id":382,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":382,"sourceUnit":849,"src":"62:29:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":381,"linearizedBaseContracts":[381],"name":"IAccount","nameLocation":"103:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"119:1861:2","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp the operation that is about to be executed.\n @param userOpHash hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds missing funds on the account's deposit in the entrypoint.\n      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.\n      The excess is left as a deposit in the entrypoint, for future calls.\n      can be withdrawn anytime using \"entryPoint.withdrawTo()\"\n      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\n @return validationData packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"3a871cdd","id":380,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1994:14:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"userOp","nameLocation":"2032:6:2","nodeType":"VariableDeclaration","scope":380,"src":"2009:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":370,"nodeType":"UserDefinedTypeName","pathNode":{"id":369,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"2009:13:2"},"referencedDeclaration":743,"src":"2009:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"userOpHash","nameLocation":"2048:10:2","nodeType":"VariableDeclaration","scope":380,"src":"2040:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2040:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2068:19:2","nodeType":"VariableDeclaration","scope":380,"src":"2060:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2060:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2008:80:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"validationData","nameLocation":"2119:14:2","nodeType":"VariableDeclaration","scope":380,"src":"2111:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:24:2"},"scope":381,"src":"1985:150:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":382,"src":"93:2044:2","usedErrors":[]}],"src":"36:2102:2"},"id":2},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[415],"UserOperation":[743],"UserOperationLib":[848]},"id":416,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":383,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":416,"sourceUnit":849,"src":"62:29:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"93:43:3","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":415,"linearizedBaseContracts":[415],"name":"IAggregator","nameLocation":"147:11:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"166:136:3","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"316:18:3","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"userOps","nameLocation":"360:7:3","nodeType":"VariableDeclaration","scope":395,"src":"335:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":388,"nodeType":"UserDefinedTypeName","pathNode":{"id":387,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"335:13:3"},"referencedDeclaration":743,"src":"335:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"id":389,"nodeType":"ArrayTypeName","src":"335:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"signature","nameLocation":"384:9:3","nodeType":"VariableDeclaration","scope":395,"src":"369:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":391,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"334:60:3"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"408:0:3"},"scope":415,"src":"307:102:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"415:576:3","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":404,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1005:23:3","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"userOp","nameLocation":"1052:6:3","nodeType":"VariableDeclaration","scope":404,"src":"1029:29:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":398,"nodeType":"UserDefinedTypeName","pathNode":{"id":397,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"1029:13:3"},"referencedDeclaration":743,"src":"1029:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1028:31:3"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1100:12:3","nodeType":"VariableDeclaration","scope":404,"src":"1087:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1087:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1086:27:3"},"scope":415,"src":"996:118:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1120:368:3","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":414,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1502:19:3","nodeType":"FunctionDefinition","parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"userOps","nameLocation":"1547:7:3","nodeType":"VariableDeclaration","scope":414,"src":"1522:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":407,"nodeType":"UserDefinedTypeName","pathNode":{"id":406,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"1522:13:3"},"referencedDeclaration":743,"src":"1522:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"id":408,"nodeType":"ArrayTypeName","src":"1522:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1521:34:3"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1592:19:3","nodeType":"VariableDeclaration","scope":414,"src":"1579:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1579:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1578:34:3"},"scope":415,"src":"1493:120:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":416,"src":"137:1478:3","usedErrors":[]}],"src":"36:1580:3"},"id":3},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[415],"IEntryPoint":[613],"IStakeManager":[718],"UserOperation":[743],"UserOperationLib":[848]},"id":614,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":417,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"163:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":614,"sourceUnit":849,"src":"311:29:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":614,"sourceUnit":719,"src":"341:29:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":614,"sourceUnit":416,"src":"371:27:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":421,"name":"IStakeManager","nodeType":"IdentifierPath","referencedDeclaration":718,"src":"425:13:4"},"id":422,"nodeType":"InheritanceSpecifier","src":"425:13:4"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":613,"linearizedBaseContracts":[613,718],"name":"IEntryPoint","nameLocation":"410:11:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":438,"name":"UserOperationEvent","nameLocation":"1146:18:4","nodeType":"EventDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1181:10:4","nodeType":"VariableDeclaration","scope":438,"src":"1165:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1165:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":426,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1209:6:4","nodeType":"VariableDeclaration","scope":438,"src":"1193:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":428,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1233:9:4","nodeType":"VariableDeclaration","scope":438,"src":"1217:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":438,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":432,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1264:7:4","nodeType":"VariableDeclaration","scope":438,"src":"1259:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":431,"name":"bool","nodeType":"ElementaryTypeName","src":"1259:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":434,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1281:13:4","nodeType":"VariableDeclaration","scope":438,"src":"1273:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":436,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1304:13:4","nodeType":"VariableDeclaration","scope":438,"src":"1296:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1164:154:4"},"src":"1140:179:4"},{"anonymous":false,"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1325:333:4","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":449,"name":"AccountDeployed","nameLocation":"1669:15:4","nodeType":"EventDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1701:10:4","nodeType":"VariableDeclaration","scope":449,"src":"1685:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1685:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":443,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1729:6:4","nodeType":"VariableDeclaration","scope":449,"src":"1713:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1745:7:4","nodeType":"VariableDeclaration","scope":449,"src":"1737:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"1737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1762:9:4","nodeType":"VariableDeclaration","scope":449,"src":"1754:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1684:88:4"},"src":"1663:110:4"},{"anonymous":false,"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"1779:337:4","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":460,"name":"UserOperationRevertReason","nameLocation":"2127:25:4","nodeType":"EventDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2169:10:4","nodeType":"VariableDeclaration","scope":460,"src":"2153:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2197:6:4","nodeType":"VariableDeclaration","scope":460,"src":"2181:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2213:5:4","nodeType":"VariableDeclaration","scope":460,"src":"2205:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2226:12:4","nodeType":"VariableDeclaration","scope":460,"src":"2220:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2220:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:87:4"},"src":"2121:119:4"},{"anonymous":false,"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"2246:101:4","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":465,"name":"SignatureAggregatorChanged","nameLocation":"2358:26:4","nodeType":"EventDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2401:10:4","nodeType":"VariableDeclaration","scope":465,"src":"2385:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"2385:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2384:28:4"},"src":"2352:61:4"},{"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"2419:756:4","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":472,"name":"FailedOp","nameLocation":"3186:8:4","nodeType":"ErrorDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"opIndex","nameLocation":"3203:7:4","nodeType":"VariableDeclaration","scope":472,"src":"3195:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"3195:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"reason","nameLocation":"3219:6:4","nodeType":"VariableDeclaration","scope":472,"src":"3212:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":469,"name":"string","nodeType":"ElementaryTypeName","src":"3212:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3194:32:4"},"src":"3180:47:4"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"3233:114:4","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":477,"name":"SignatureValidationFailed","nameLocation":"3358:25:4","nodeType":"ErrorDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"aggregator","nameLocation":"3392:10:4","nodeType":"VariableDeclaration","scope":477,"src":"3384:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"3384:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3383:20:4"},"src":"3352:52:4"},{"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"3410:327:4","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":492,"name":"ValidationResult","nameLocation":"3748:16:4","nodeType":"ErrorDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"returnInfo","nameLocation":"3776:10:4","nodeType":"VariableDeclaration","scope":492,"src":"3765:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$589_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":480,"nodeType":"UserDefinedTypeName","pathNode":{"id":479,"name":"ReturnInfo","nodeType":"IdentifierPath","referencedDeclaration":589,"src":"3765:10:4"},"referencedDeclaration":589,"src":"3765:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$589_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"senderInfo","nameLocation":"3806:10:4","nodeType":"VariableDeclaration","scope":492,"src":"3796:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":483,"nodeType":"UserDefinedTypeName","pathNode":{"id":482,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"3796:9:4"},"referencedDeclaration":670,"src":"3796:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"factoryInfo","nameLocation":"3828:11:4","nodeType":"VariableDeclaration","scope":492,"src":"3818:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":486,"nodeType":"UserDefinedTypeName","pathNode":{"id":485,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"3818:9:4"},"referencedDeclaration":670,"src":"3818:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"paymasterInfo","nameLocation":"3851:13:4","nodeType":"VariableDeclaration","scope":492,"src":"3841:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":489,"nodeType":"UserDefinedTypeName","pathNode":{"id":488,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"3841:9:4"},"referencedDeclaration":670,"src":"3841:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"3764:101:4"},"src":"3742:124:4"},{"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"3872:561:4","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":510,"name":"ValidationResultWithAggregation","nameLocation":"4444:31:4","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"returnInfo","nameLocation":"4487:10:4","nodeType":"VariableDeclaration","scope":510,"src":"4476:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$589_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":495,"nodeType":"UserDefinedTypeName","pathNode":{"id":494,"name":"ReturnInfo","nodeType":"IdentifierPath","referencedDeclaration":589,"src":"4476:10:4"},"referencedDeclaration":589,"src":"4476:10:4","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$589_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"senderInfo","nameLocation":"4517:10:4","nodeType":"VariableDeclaration","scope":510,"src":"4507:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":498,"nodeType":"UserDefinedTypeName","pathNode":{"id":497,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"4507:9:4"},"referencedDeclaration":670,"src":"4507:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"factoryInfo","nameLocation":"4539:11:4","nodeType":"VariableDeclaration","scope":510,"src":"4529:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":501,"nodeType":"UserDefinedTypeName","pathNode":{"id":500,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"4529:9:4"},"referencedDeclaration":670,"src":"4529:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4562:13:4","nodeType":"VariableDeclaration","scope":510,"src":"4552:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"4552:9:4"},"referencedDeclaration":670,"src":"4552:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4605:14:4","nodeType":"VariableDeclaration","scope":510,"src":"4585:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$595_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":507,"nodeType":"UserDefinedTypeName","pathNode":{"id":506,"name":"AggregatorStakeInfo","nodeType":"IdentifierPath","referencedDeclaration":595,"src":"4585:19:4"},"referencedDeclaration":595,"src":"4585:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$595_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4475:145:4"},"src":"4438:183:4"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"4627:51:4","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":515,"name":"SenderAddressResult","nameLocation":"4689:19:4","nodeType":"ErrorDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"sender","nameLocation":"4717:6:4","nodeType":"VariableDeclaration","scope":515,"src":"4709:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"4709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4708:16:4"},"src":"4683:42:4"},{"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"4731:51:4","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":530,"name":"ExecutionResult","nameLocation":"4793:15:4","nodeType":"ErrorDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"preOpGas","nameLocation":"4817:8:4","nodeType":"VariableDeclaration","scope":530,"src":"4809:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"paid","nameLocation":"4835:4:4","nodeType":"VariableDeclaration","scope":530,"src":"4827:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"4827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"validAfter","nameLocation":"4848:10:4","nodeType":"VariableDeclaration","scope":530,"src":"4841:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":521,"name":"uint48","nodeType":"ElementaryTypeName","src":"4841:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"validUntil","nameLocation":"4867:10:4","nodeType":"VariableDeclaration","scope":530,"src":"4860:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":523,"name":"uint48","nodeType":"ElementaryTypeName","src":"4860:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"targetSuccess","nameLocation":"4884:13:4","nodeType":"VariableDeclaration","scope":530,"src":"4879:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":525,"name":"bool","nodeType":"ElementaryTypeName","src":"4879:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"targetResult","nameLocation":"4905:12:4","nodeType":"VariableDeclaration","scope":530,"src":"4899:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"4899:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4808:110:4"},"src":"4787:132:4"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":540,"members":[{"constant":false,"id":534,"mutability":"mutable","name":"userOps","nameLocation":"5017:7:4","nodeType":"VariableDeclaration","scope":540,"src":"5001:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":532,"nodeType":"UserDefinedTypeName","pathNode":{"id":531,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"5001:13:4"},"referencedDeclaration":743,"src":"5001:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"id":533,"nodeType":"ArrayTypeName","src":"5001:15:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"aggregator","nameLocation":"5077:10:4","nodeType":"VariableDeclaration","scope":540,"src":"5065:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$415","typeString":"contract IAggregator"},"typeName":{"id":536,"nodeType":"UserDefinedTypeName","pathNode":{"id":535,"name":"IAggregator","nodeType":"IdentifierPath","referencedDeclaration":415,"src":"5065:11:4"},"referencedDeclaration":415,"src":"5065:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$415","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"signature","nameLocation":"5135:9:4","nodeType":"VariableDeclaration","scope":540,"src":"5129:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"5129:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"4970:20:4","nodeType":"StructDefinition","scope":613,"src":"4963:188:4","visibility":"public"},{"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"5157:368:4","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":550,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5539:9:4","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"ops","nameLocation":"5574:3:4","nodeType":"VariableDeclaration","scope":550,"src":"5549:28:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":543,"nodeType":"UserDefinedTypeName","pathNode":{"id":542,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"5549:13:4"},"referencedDeclaration":743,"src":"5549:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"id":544,"nodeType":"ArrayTypeName","src":"5549:15:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$743_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"beneficiary","nameLocation":"5595:11:4","nodeType":"VariableDeclaration","scope":550,"src":"5579:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"5579:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5548:59:4"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"5616:0:4"},"scope":613,"src":"5530:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"5623:249:4","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":560,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"5886:19:4","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"5947:16:4","nodeType":"VariableDeclaration","scope":560,"src":"5915:48:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$540_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":553,"nodeType":"UserDefinedTypeName","pathNode":{"id":552,"name":"UserOpsPerAggregator","nodeType":"IdentifierPath","referencedDeclaration":540,"src":"5915:20:4"},"referencedDeclaration":540,"src":"5915:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$540_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":554,"nodeType":"ArrayTypeName","src":"5915:22:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$540_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"beneficiary","nameLocation":"5989:11:4","nodeType":"VariableDeclaration","scope":560,"src":"5973:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"5973:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5905:101:4"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"6015:0:4"},"scope":613,"src":"5877:139:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"6022:197:4","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6233:13:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"userOp","nameLocation":"6270:6:4","nodeType":"VariableDeclaration","scope":569,"src":"6247:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":563,"nodeType":"UserDefinedTypeName","pathNode":{"id":562,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"6247:13:4"},"referencedDeclaration":743,"src":"6247:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6246:31:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":569,"src":"6301:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6301:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6300:9:4"},"scope":613,"src":"6224:86:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"6316:398:4","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6728:18:4","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"userOp","nameLocation":"6770:6:4","nodeType":"VariableDeclaration","scope":576,"src":"6747:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":572,"nodeType":"UserDefinedTypeName","pathNode":{"id":571,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"6747:13:4"},"referencedDeclaration":743,"src":"6747:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6746:31:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"6786:0:4"},"scope":613,"src":"6719:68:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","id":589,"members":[{"constant":false,"id":578,"mutability":"mutable","name":"preOpGas","nameLocation":"7422:8:4","nodeType":"VariableDeclaration","scope":589,"src":"7414:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"7414:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"prefund","nameLocation":"7448:7:4","nodeType":"VariableDeclaration","scope":589,"src":"7440:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"7440:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"sigFailed","nameLocation":"7470:9:4","nodeType":"VariableDeclaration","scope":589,"src":"7465:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":581,"name":"bool","nodeType":"ElementaryTypeName","src":"7465:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"validAfter","nameLocation":"7496:10:4","nodeType":"VariableDeclaration","scope":589,"src":"7489:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":583,"name":"uint48","nodeType":"ElementaryTypeName","src":"7489:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"validUntil","nameLocation":"7523:10:4","nodeType":"VariableDeclaration","scope":589,"src":"7516:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":585,"name":"uint48","nodeType":"ElementaryTypeName","src":"7516:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"paymasterContext","nameLocation":"7549:16:4","nodeType":"VariableDeclaration","scope":589,"src":"7543:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"7543:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7393:10:4","nodeType":"StructDefinition","scope":613,"src":"7386:186:4","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","id":595,"members":[{"constant":false,"id":591,"mutability":"mutable","name":"aggregator","nameLocation":"7752:10:4","nodeType":"VariableDeclaration","scope":595,"src":"7744:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"stakeInfo","nameLocation":"7782:9:4","nodeType":"VariableDeclaration","scope":595,"src":"7772:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"StakeInfo","nodeType":"IdentifierPath","referencedDeclaration":670,"src":"7772:9:4"},"referencedDeclaration":670,"src":"7772:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$670_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7714:19:4","nodeType":"StructDefinition","scope":613,"src":"7707:91:4","visibility":"public"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"7804:337:4","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":601,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8155:16:4","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"initCode","nameLocation":"8185:8:4","nodeType":"VariableDeclaration","scope":601,"src":"8172:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":597,"name":"bytes","nodeType":"ElementaryTypeName","src":"8172:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8171:23:4"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"8203:0:4"},"scope":613,"src":"8146:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"8211:847:4","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":612,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9072:16:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"op","nameLocation":"9112:2:4","nodeType":"VariableDeclaration","scope":612,"src":"9089:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":604,"nodeType":"UserDefinedTypeName","pathNode":{"id":603,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"9089:13:4"},"referencedDeclaration":743,"src":"9089:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"target","nameLocation":"9124:6:4","nodeType":"VariableDeclaration","scope":612,"src":"9116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"9116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"targetCallData","nameLocation":"9147:14:4","nodeType":"VariableDeclaration","scope":612,"src":"9132:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":608,"name":"bytes","nodeType":"ElementaryTypeName","src":"9132:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9088:74:4"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"9171:0:4"},"scope":613,"src":"9063:109:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":614,"src":"400:8774:4","usedErrors":[472,477,492,510,515,530]}],"src":"163:9013:4"},"id":4},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[718]},"id":719,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":615,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"67:211:5","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":718,"linearizedBaseContracts":[718],"name":"IStakeManager","nameLocation":"289:13:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":622,"name":"Deposited","nameLocation":"316:9:5","nodeType":"EventDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:5","nodeType":"VariableDeclaration","scope":622,"src":"335:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"376:12:5","nodeType":"VariableDeclaration","scope":622,"src":"368:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:69:5"},"src":"310:85:5"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":630,"name":"Withdrawn","nameLocation":"407:9:5","nodeType":"EventDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"442:7:5","nodeType":"VariableDeclaration","scope":630,"src":"426:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"467:15:5","nodeType":"VariableDeclaration","scope":630,"src":"459:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"459:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"500:6:5","nodeType":"VariableDeclaration","scope":630,"src":"492:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:96:5"},"src":"401:112:5"},{"anonymous":false,"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"519:52:5","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":639,"name":"StakeLocked","nameLocation":"582:11:5","nodeType":"EventDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"619:7:5","nodeType":"VariableDeclaration","scope":639,"src":"603:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":635,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"644:11:5","nodeType":"VariableDeclaration","scope":639,"src":"636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":637,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"673:15:5","nodeType":"VariableDeclaration","scope":639,"src":"665:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"593:101:5"},"src":"576:119:5"},{"anonymous":false,"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"701:52:5","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":646,"name":"StakeUnlocked","nameLocation":"764:13:5","nodeType":"EventDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"803:7:5","nodeType":"VariableDeclaration","scope":646,"src":"787:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"828:12:5","nodeType":"VariableDeclaration","scope":646,"src":"820:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:69:5"},"src":"758:89:5"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":654,"name":"StakeWithdrawn","nameLocation":"859:14:5","nodeType":"EventDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"899:7:5","nodeType":"VariableDeclaration","scope":654,"src":"883:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"924:15:5","nodeType":"VariableDeclaration","scope":654,"src":"916:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"957:6:5","nodeType":"VariableDeclaration","scope":654,"src":"949:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:96:5"},"src":"853:117:5"},{"canonicalName":"IStakeManager.DepositInfo","id":665,"members":[{"constant":false,"id":656,"mutability":"mutable","name":"deposit","nameLocation":"1650:7:5","nodeType":"VariableDeclaration","scope":665,"src":"1642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":655,"name":"uint112","nodeType":"ElementaryTypeName","src":"1642:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"staked","nameLocation":"1672:6:5","nodeType":"VariableDeclaration","scope":665,"src":"1667:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":657,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"stake","nameLocation":"1696:5:5","nodeType":"VariableDeclaration","scope":665,"src":"1688:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":659,"name":"uint112","nodeType":"ElementaryTypeName","src":"1688:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1718:15:5","nodeType":"VariableDeclaration","scope":665,"src":"1711:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":661,"name":"uint32","nodeType":"ElementaryTypeName","src":"1711:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"withdrawTime","nameLocation":"1750:12:5","nodeType":"VariableDeclaration","scope":665,"src":"1743:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":663,"name":"uint48","nodeType":"ElementaryTypeName","src":"1743:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1620:11:5","nodeType":"StructDefinition","scope":718,"src":"1613:156:5","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":670,"members":[{"constant":false,"id":667,"mutability":"mutable","name":"stake","nameLocation":"1871:5:5","nodeType":"VariableDeclaration","scope":670,"src":"1863:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1894:15:5","nodeType":"VariableDeclaration","scope":670,"src":"1886:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1843:9:5","nodeType":"StructDefinition","scope":718,"src":"1836:80:5","visibility":"public"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"1922:60:5","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":679,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1996:14:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"account","nameLocation":"2019:7:5","nodeType":"VariableDeclaration","scope":679,"src":"2011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2010:17:5"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"info","nameLocation":"2070:4:5","nodeType":"VariableDeclaration","scope":679,"src":"2051:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$665_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":676,"nodeType":"UserDefinedTypeName","pathNode":{"id":675,"name":"DepositInfo","nodeType":"IdentifierPath","referencedDeclaration":665,"src":"2051:11:5"},"referencedDeclaration":665,"src":"2051:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$665_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2050:25:5"},"scope":718,"src":"1987:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"2082:56:5","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2152:9:5","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"account","nameLocation":"2170:7:5","nodeType":"VariableDeclaration","scope":687,"src":"2162:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2161:17:5"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"2202:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:9:5"},"scope":718,"src":"2143:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"2217:58:5","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":693,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2289:9:5","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"account","nameLocation":"2307:7:5","nodeType":"VariableDeclaration","scope":693,"src":"2299:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:17:5"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[],"src":"2332:0:5"},"scope":718,"src":"2280:53:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"2339:201:5","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":699,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2554:8:5","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2570:16:5","nodeType":"VariableDeclaration","scope":699,"src":"2563:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":695,"name":"uint32","nodeType":"ElementaryTypeName","src":"2563:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2562:25:5"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"2604:0:5"},"scope":718,"src":"2545:60:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"2611:128:5","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":703,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2753:11:5","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"2764:2:5"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"2775:0:5"},"scope":718,"src":"2744:32:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"2782:194:5","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":709,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2990:13:5","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3020:15:5","nodeType":"VariableDeclaration","scope":709,"src":"3004:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"3004:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3003:33:5"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"3045:0:5"},"scope":718,"src":"2981:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"3052:165:5","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":717,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3231:10:5","nodeType":"FunctionDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3258:15:5","nodeType":"VariableDeclaration","scope":717,"src":"3242:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"3242:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3283:14:5","nodeType":"VariableDeclaration","scope":717,"src":"3275:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3241:57:5"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[],"src":"3307:0:5"},"scope":718,"src":"3222:86:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":719,"src":"279:3031:5","usedErrors":[]}],"src":"41:3270:5"},"id":5},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[743],"UserOperationLib":[848]},"id":849,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":720,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:6"},{"canonicalName":"UserOperation","id":743,"members":[{"constant":false,"id":722,"mutability":"mutable","name":"sender","nameLocation":"1196:6:6","nodeType":"VariableDeclaration","scope":743,"src":"1188:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"1188:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"nonce","nameLocation":"1220:5:6","nodeType":"VariableDeclaration","scope":743,"src":"1212:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"initCode","nameLocation":"1241:8:6","nodeType":"VariableDeclaration","scope":743,"src":"1235:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"1235:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"callData","nameLocation":"1265:8:6","nodeType":"VariableDeclaration","scope":743,"src":"1259:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":727,"name":"bytes","nodeType":"ElementaryTypeName","src":"1259:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"callGasLimit","nameLocation":"1291:12:6","nodeType":"VariableDeclaration","scope":743,"src":"1283:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1321:20:6","nodeType":"VariableDeclaration","scope":743,"src":"1313:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1359:18:6","nodeType":"VariableDeclaration","scope":743,"src":"1351:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1395:12:6","nodeType":"VariableDeclaration","scope":743,"src":"1387:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1425:20:6","nodeType":"VariableDeclaration","scope":743,"src":"1417:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1461:16:6","nodeType":"VariableDeclaration","scope":743,"src":"1455:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"1455:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"signature","nameLocation":"1493:9:6","nodeType":"VariableDeclaration","scope":743,"src":"1487:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":741,"name":"bytes","nodeType":"ElementaryTypeName","src":"1487:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1163:13:6","nodeType":"StructDefinition","scope":849,"src":"1156:353:6","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"1511:77:6","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":848,"linearizedBaseContracts":[848],"name":"UserOperationLib","nameLocation":"1597:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":764,"nodeType":"Block","src":"1703:199:6","statements":[{"assignments":[753],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"data","nameLocation":"1721:4:6","nodeType":"VariableDeclaration","scope":764,"src":"1713:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":754,"nodeType":"VariableDeclarationStatement","src":"1713:12:6"},{"AST":{"nodeType":"YulBlock","src":"1827:30:6","statements":[{"nodeType":"YulAssignment","src":"1828:28:6","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1849:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1836:12:6"},"nodeType":"YulFunctionCall","src":"1836:20:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1828:4:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":753,"isOffset":false,"isSlot":false,"src":"1828:4:6","valueSize":1},{"declaration":747,"isOffset":false,"isSlot":false,"src":"1849:6:6","valueSize":1}],"id":755,"nodeType":"InlineAssembly","src":"1818:39:6"},{"expression":{"arguments":[{"arguments":[{"id":760,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"1889:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":758,"name":"uint160","nodeType":"ElementaryTypeName","src":"1881:7:6","typeDescriptions":{}}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1881:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1873:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"1873:7:6","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1873:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":751,"id":763,"nodeType":"Return","src":"1866:29:6"}]},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1630:9:6","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"userOp","nameLocation":"1663:6:6","nodeType":"VariableDeclaration","scope":765,"src":"1640:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":746,"nodeType":"UserDefinedTypeName","pathNode":{"id":745,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"1640:13:6"},"referencedDeclaration":743,"src":"1640:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1639:31:6"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"1694:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"1694:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1693:9:6"},"scope":848,"src":"1621:281:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"2123:391:6","statements":[{"id":798,"nodeType":"UncheckedBlock","src":"2129:379:6","statements":[{"assignments":[774],"declarations":[{"constant":false,"id":774,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2157:12:6","nodeType":"VariableDeclaration","scope":798,"src":"2149:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":777,"initialValue":{"expression":{"id":775,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2172:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":736,"src":"2172:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2149:42:6"},{"assignments":[779],"declarations":[{"constant":false,"id":779,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2209:20:6","nodeType":"VariableDeclaration","scope":798,"src":"2201:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":782,"initialValue":{"expression":{"id":780,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2232:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":738,"src":"2232:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2201:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"2273:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":784,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2289:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2273:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":789,"nodeType":"IfStatement","src":"2269:161:6","trueBody":{"id":788,"nodeType":"Block","src":"2311:119:6","statements":[{"expression":{"id":786,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"2407:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":787,"nodeType":"Return","src":"2400:19:6"}]}},{"expression":{"arguments":[{"id":791,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"2450:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2464:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":793,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2487:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"basefee","nodeType":"MemberAccess","src":"2487:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2464:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2446:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2446:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":797,"nodeType":"Return","src":"2439:62:6"}]}]},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2051:8:6","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"userOp","nameLocation":"2083:6:6","nodeType":"VariableDeclaration","scope":800,"src":"2060:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"2060:13:6"},"referencedDeclaration":743,"src":"2060:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2059:31:6"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"2114:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2114:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2113:9:6"},"scope":848,"src":"2042:472:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"2606:628:6","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"sig","nameLocation":"2699:3:6","nodeType":"VariableDeclaration","scope":814,"src":"2684:18:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"2684:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":812,"initialValue":{"expression":{"id":810,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"2705:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":742,"src":"2705:16:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"2684:37:6"},{"AST":{"nodeType":"YulBlock","src":"2976:252:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2990:17:6","value":{"name":"userOp","nodeType":"YulIdentifier","src":"3001:6:6"},"variables":[{"name":"ofs","nodeType":"YulTypedName","src":"2994:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3020:40:6","value":{"arguments":[{"arguments":[{"name":"sig.offset","nodeType":"YulIdentifier","src":"3039:10:6"},{"name":"ofs","nodeType":"YulIdentifier","src":"3051:3:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3035:3:6"},"nodeType":"YulFunctionCall","src":"3035:20:6"},{"kind":"number","nodeType":"YulLiteral","src":"3057:2:6","type":"","value":"32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3031:3:6"},"nodeType":"YulFunctionCall","src":"3031:29:6"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3024:3:6","type":""}]},{"nodeType":"YulAssignment","src":"3073:18:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3086:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3080:5:6"},"nodeType":"YulFunctionCall","src":"3080:11:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3073:3:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3111:4:6","type":"","value":"0x40"},{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"3121:3:6"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3130:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3135:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3126:3:6"},"nodeType":"YulFunctionCall","src":"3126:12:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3117:3:6"},"nodeType":"YulFunctionCall","src":"3117:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3104:6:6"},"nodeType":"YulFunctionCall","src":"3104:36:6"},"nodeType":"YulExpressionStatement","src":"3104:36:6"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"3160:3:6"},{"name":"len","nodeType":"YulIdentifier","src":"3165:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3153:6:6"},"nodeType":"YulFunctionCall","src":"3153:16:6"},"nodeType":"YulExpressionStatement","src":"3153:16:6"},{"expression":{"arguments":[{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"3199:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:6"},"nodeType":"YulFunctionCall","src":"3195:12:6"},{"name":"ofs","nodeType":"YulIdentifier","src":"3209:3:6"},{"name":"len","nodeType":"YulIdentifier","src":"3214:3:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3182:12:6"},"nodeType":"YulFunctionCall","src":"3182:36:6"},"nodeType":"YulExpressionStatement","src":"3182:36:6"}]},"evmVersion":"london","externalReferences":[{"declaration":806,"isOffset":false,"isSlot":false,"src":"3073:3:6","valueSize":1},{"declaration":806,"isOffset":false,"isSlot":false,"src":"3121:3:6","valueSize":1},{"declaration":806,"isOffset":false,"isSlot":false,"src":"3160:3:6","valueSize":1},{"declaration":806,"isOffset":false,"isSlot":false,"src":"3199:3:6","valueSize":1},{"declaration":809,"isOffset":true,"isSlot":false,"src":"3039:10:6","suffix":"offset","valueSize":1},{"declaration":803,"isOffset":false,"isSlot":false,"src":"3001:6:6","valueSize":1}],"id":813,"nodeType":"InlineAssembly","src":"2967:261:6"}]},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2529:4:6","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"userOp","nameLocation":"2557:6:6","nodeType":"VariableDeclaration","scope":815,"src":"2534:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":802,"nodeType":"UserDefinedTypeName","pathNode":{"id":801,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"2534:13:6"},"referencedDeclaration":743,"src":"2534:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2533:31:6"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"ret","nameLocation":"2601:3:6","nodeType":"VariableDeclaration","scope":815,"src":"2588:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"2588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2587:18:6"},"scope":848,"src":"2520:714:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"3317:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":825,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3349:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":824,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3344:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$743_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3344:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3334:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3334:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":822,"id":828,"nodeType":"Return","src":"3327:30:6"}]},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3249:4:6","nodeType":"FunctionDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"userOp","nameLocation":"3277:6:6","nodeType":"VariableDeclaration","scope":830,"src":"3254:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":817,"nodeType":"UserDefinedTypeName","pathNode":{"id":816,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"3254:13:6"},"referencedDeclaration":743,"src":"3254:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3253:31:6"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"3308:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3308:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3307:9:6"},"scope":848,"src":"3240:124:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"3437:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3454:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3458:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3454:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"3466:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3454:13:6","trueExpression":{"id":842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3462:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":838,"id":845,"nodeType":"Return","src":"3447:20:6"}]},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3379:3:6","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"a","nameLocation":"3391:1:6","nodeType":"VariableDeclaration","scope":847,"src":"3383:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"3383:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"b","nameLocation":"3402:1:6","nodeType":"VariableDeclaration","scope":847,"src":"3394:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3394:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3382:22:6"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"3428:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3427:9:6"},"scope":848,"src":"3370:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":849,"src":"1589:1887:6","usedErrors":[]}],"src":"36:3441:6"},"id":6},"@account-abstraction/contracts/samples/SimpleAccount.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/samples/SimpleAccount.sol","exportedSymbols":{"Address":[2154],"BaseAccount":[136],"ECDSA":[2750],"ERC1967Upgrade":[1529],"IAccount":[381],"IAggregator":[415],"IBeacon":[1539],"IERC1822Proxiable":[1211],"IEntryPoint":[613],"IStakeManager":[718],"Initializable":[1708],"Math":[3615],"SimpleAccount":[1201],"StorageSlot":[2214],"Strings":[2389],"UUPSUpgradeable":[1824],"UserOperation":[743],"UserOperationLib":[848],"ValidationData":[145],"_intersectTimeRange":[289],"_packValidationData":[326,364],"_parseValidationData":[204]},"id":1202,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":850,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":2751,"src":"184:62:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":852,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1709,"src":"247:63:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":853,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1825,"src":"311:65:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/BaseAccount.sol","file":"../core/BaseAccount.sol","id":854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":137,"src":"378:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":856,"name":"BaseAccount","nodeType":"IdentifierPath","referencedDeclaration":136,"src":"617:11:7"},"id":857,"nodeType":"InheritanceSpecifier","src":"617:11:7"},{"baseName":{"id":858,"name":"UUPSUpgradeable","nodeType":"IdentifierPath","referencedDeclaration":1824,"src":"630:15:7"},"id":859,"nodeType":"InheritanceSpecifier","src":"630:15:7"},{"baseName":{"id":860,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"647:13:7"},"id":861,"nodeType":"InheritanceSpecifier","src":"647:13:7"}],"canonicalName":"SimpleAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"413:177:7","text":" minimal account.\n  this is sample minimal account.\n  has execute, eth handling methods\n  has a single signer that can send requests through the entryPoint."},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,1708,1824,1529,1211,136,381],"name":"SimpleAccount","nameLocation":"600:13:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":864,"libraryName":{"id":862,"name":"ECDSA","nodeType":"IdentifierPath","referencedDeclaration":2750,"src":"673:5:7"},"nodeType":"UsingForDirective","src":"667:24:7","typeName":{"id":863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"683:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"id":866,"mutability":"mutable","name":"_filler","nameLocation":"844:7:7","nodeType":"VariableDeclaration","scope":1201,"src":"828:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes28","typeString":"bytes28"},"typeName":{"id":865,"name":"bytes28","nodeType":"ElementaryTypeName","src":"828:7:7","typeDescriptions":{"typeIdentifier":"t_bytes28","typeString":"bytes28"}},"visibility":"private"},{"constant":false,"id":868,"mutability":"mutable","name":"_nonce","nameLocation":"946:6:7","nodeType":"VariableDeclaration","scope":1201,"src":"931:21:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":867,"name":"uint96","nodeType":"ElementaryTypeName","src":"931:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"constant":false,"functionSelector":"8da5cb5b","id":870,"mutability":"mutable","name":"owner","nameLocation":"973:5:7","nodeType":"VariableDeclaration","scope":1201,"src":"958:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":873,"mutability":"immutable","name":"_entryPoint","nameLocation":"1015:11:7","nodeType":"VariableDeclaration","scope":1201,"src":"985:41:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},"typeName":{"id":872,"nodeType":"UserDefinedTypeName","pathNode":{"id":871,"name":"IEntryPoint","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"985:11:7"},"referencedDeclaration":613,"src":"985:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"visibility":"private"},{"anonymous":false,"eventSelector":"47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de","id":880,"name":"SimpleAccountInitialized","nameLocation":"1039:24:7","nodeType":"EventDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"1084:10:7","nodeType":"VariableDeclaration","scope":880,"src":"1064:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},"typeName":{"id":875,"nodeType":"UserDefinedTypeName","pathNode":{"id":874,"name":"IEntryPoint","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1064:11:7"},"referencedDeclaration":613,"src":"1064:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":878,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1112:5:7","nodeType":"VariableDeclaration","scope":880,"src":"1096:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1063:55:7"},"src":"1033:86:7"},{"body":{"id":886,"nodeType":"Block","src":"1146:40:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":882,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"1156:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1156:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"1156:12:7"},{"id":885,"nodeType":"PlaceholderStatement","src":"1178:1:7"}]},"id":887,"name":"onlyOwner","nameLocation":"1134:9:7","nodeType":"ModifierDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"1143:2:7"},"src":"1125:61:7","virtual":false,"visibility":"internal"},{"baseFunctions":[20],"body":{"id":896,"nodeType":"Block","src":"1288:30:7","statements":[{"expression":{"id":894,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1305:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":893,"id":895,"nodeType":"Return","src":"1298:13:7"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"1192:27:7","text":"@inheritdoc BaseAccount"},"functionSelector":"affed0e0","id":897,"implemented":true,"kind":"function","modifiers":[],"name":"nonce","nameLocation":"1233:5:7","nodeType":"FunctionDefinition","overrides":{"id":890,"nodeType":"OverrideSpecifier","overrides":[],"src":"1261:8:7"},"parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"1238:2:7"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":897,"src":"1279:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1278:9:7"},"scope":1201,"src":"1224:94:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[27],"body":{"id":907,"nodeType":"Block","src":"1429:35:7","statements":[{"expression":{"id":905,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"1446:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"functionReturnParameters":904,"id":906,"nodeType":"Return","src":"1439:18:7"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"1324:27:7","text":"@inheritdoc BaseAccount"},"functionSelector":"b0d691fe","id":908,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1365:10:7","nodeType":"FunctionDefinition","overrides":{"id":900,"nodeType":"OverrideSpecifier","overrides":[],"src":"1398:8:7"},"parameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"1375:2:7"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"1416:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},"typeName":{"id":902,"nodeType":"UserDefinedTypeName","pathNode":{"id":901,"name":"IEntryPoint","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1416:11:7"},"referencedDeclaration":613,"src":"1416:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1415:13:7"},"scope":1201,"src":"1356:108:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":911,"nodeType":"Block","src":"1547:2:7","statements":[]},"id":912,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[],"src":"1527:2:7"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"1547:0:7"},"scope":1201,"src":"1520:29:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":925,"nodeType":"Block","src":"1593:75:7","statements":[{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":918,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"1603:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":919,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1617:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"src":"1603:26:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"id":921,"nodeType":"ExpressionStatement","src":"1603:26:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":922,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"1639:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1639:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"1639:22:7"}]},"id":926,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"anEntryPoint","nameLocation":"1579:12:7","nodeType":"VariableDeclaration","scope":926,"src":"1567:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},"typeName":{"id":914,"nodeType":"UserDefinedTypeName","pathNode":{"id":913,"name":"IEntryPoint","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"1567:11:7"},"referencedDeclaration":613,"src":"1567:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1566:26:7"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[],"src":"1593:0:7"},"scope":1201,"src":"1555:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":945,"nodeType":"Block","src":"1710:197:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1835:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1835:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":932,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1849:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1835:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1858:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1858:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":938,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1880:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1872:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:7","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1872:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1858:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1835:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1887:12:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""},"value":"only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1827:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"1827:73:7"}]},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"1683:10:7","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"1693:2:7"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"1710:0:7"},"scope":1201,"src":"1674:233:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":965,"nodeType":"Block","src":"2081:82:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":956,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2091:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"2091:31:7"},{"expression":{"arguments":[{"id":960,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"2138:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"2144:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"2151:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":959,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2132:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2132:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"ExpressionStatement","src":"2132:24:7"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"1913:87:7","text":" execute a transaction (called directly from owner, or by entryPoint)"},"functionSelector":"b61d27f6","id":966,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"2014:7:7","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"dest","nameLocation":"2030:4:7","nodeType":"VariableDeclaration","scope":966,"src":"2022:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"value","nameLocation":"2044:5:7","nodeType":"VariableDeclaration","scope":966,"src":"2036:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"func","nameLocation":"2066:4:7","nodeType":"VariableDeclaration","scope":966,"src":"2051:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"2051:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2021:50:7"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"2081:0:7"},"scope":1201,"src":"2005:158:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1011,"nodeType":"Block","src":"2306:218:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":976,"name":"_requireFromEntryPointOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"2316:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2316:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"2316:31:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":980,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2365:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2365:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":982,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2380:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2380:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2365:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77726f6e67206172726179206c656e67746873","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2393:21:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""},"value":"wrong array lengths"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e","typeString":"literal_string \"wrong array lengths\""}],"id":979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2357:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2357:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"2357:58:7"},{"body":{"id":1009,"nodeType":"Block","src":"2467:51:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1000,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2487:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1002,"indexExpression":{"id":1001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2492:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2487:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2496:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"baseExpression":{"id":1004,"name":"func","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"2499:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":1006,"indexExpression":{"id":1005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2504:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2499:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":999,"name":"_call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2481:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2481:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"2481:26:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2445:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":993,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2449:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2449:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2445:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1010,"initializationExpression":{"assignments":[989],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"i","nameLocation":"2438:1:7","nodeType":"VariableDeclaration","scope":1010,"src":"2430:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":991,"initialValue":{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2442:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2430:13:7"},"loopExpression":{"expression":{"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2462:3:7","subExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"2462:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":998,"nodeType":"ExpressionStatement","src":"2462:3:7"},"nodeType":"ForStatement","src":"2425:93:7"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"2169:53:7","text":" execute a sequence of transactions"},"functionSelector":"18dfb3c7","id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"2236:12:7","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"dest","nameLocation":"2268:4:7","nodeType":"VariableDeclaration","scope":1012,"src":"2249:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":969,"nodeType":"ArrayTypeName","src":"2249:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"func","nameLocation":"2291:4:7","nodeType":"VariableDeclaration","scope":1012,"src":"2274:21:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"2274:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":972,"nodeType":"ArrayTypeName","src":"2274:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2248:48:7"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"2306:0:7"},"scope":1201,"src":"2227:297:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1024,"nodeType":"Block","src":"2872:37:7","statements":[{"expression":{"arguments":[{"id":1021,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2894:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1020,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"2882:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2882:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"ExpressionStatement","src":"2882:20:7"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"2530:273:7","text":" @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n the implementation by calling `upgradeTo()`"},"functionSelector":"c4d66de8","id":1025,"implemented":true,"kind":"function","modifiers":[{"id":1018,"kind":"modifierInvocation","modifierName":{"id":1017,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":1610,"src":"2860:11:7"},"nodeType":"ModifierInvocation","src":"2860:11:7"}],"name":"initialize","nameLocation":"2817:10:7","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"anOwner","nameLocation":"2836:7:7","nodeType":"VariableDeclaration","scope":1025,"src":"2828:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"2828:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2827:17:7"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2872:0:7"},"scope":1201,"src":"2808:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1039,"nodeType":"Block","src":"2970:91:7","statements":[{"expression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2980:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1031,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2988:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2980:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1033,"nodeType":"ExpressionStatement","src":"2980:15:7"},{"eventCall":{"arguments":[{"id":1035,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3035:11:7","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},{"id":1036,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3048:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"SimpleAccountInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"3010:24:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$613_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3010:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"EmitStatement","src":"3005:49:7"}]},"id":1040,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nameLocation":"2924:11:7","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"anOwner","nameLocation":"2944:7:7","nodeType":"VariableDeclaration","scope":1040,"src":"2936:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"2936:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2935:17:7"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"2970:0:7"},"scope":1201,"src":"2915:146:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"3188:120:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3206:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3206:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1048,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[908],"referencedDeclaration":908,"src":"3228:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$613_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}],"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3220:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"3220:7:7","typeDescriptions":{}}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3206:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3245:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3245:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3259:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3245:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3206:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3266:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""},"value":"account: not Owner or EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""}],"id":1043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3198:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3198:103:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"ExpressionStatement","src":"3198:103:7"}]},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"3142:29:7","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"3171:2:7"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"3188:0:7"},"scope":1201,"src":"3133:175:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[102],"body":{"id":1078,"nodeType":"Block","src":"3445:76:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3463:8:7","subExpression":{"id":1070,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"3463:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1072,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3475:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":724,"src":"3475:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a20696e76616c6964206e6f6e6365","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3489:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_470b5eb05ad46a916385e8f3d185e571bb4498eea99276dfa63667e9faf43873","typeString":"literal_string \"account: invalid nonce\""},"value":"account: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_470b5eb05ad46a916385e8f3d185e571bb4498eea99276dfa63667e9faf43873","typeString":"literal_string \"account: invalid nonce\""}],"id":1069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3455:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3455:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"3455:59:7"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"3314:44:7","text":"implement template method of BaseAccount"},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndUpdateNonce","nameLocation":"3372:23:7","nodeType":"FunctionDefinition","overrides":{"id":1067,"nodeType":"OverrideSpecifier","overrides":[],"src":"3436:8:7"},"parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"userOp","nameLocation":"3419:6:7","nodeType":"VariableDeclaration","scope":1079,"src":"3396:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1064,"nodeType":"UserDefinedTypeName","pathNode":{"id":1063,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"3396:13:7"},"referencedDeclaration":743,"src":"3396:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3395:31:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[],"src":"3445:0:7"},"scope":1201,"src":"3363:158:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[95],"body":{"id":1109,"nodeType":"Block","src":"3718:180:7","statements":[{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"hash","nameLocation":"3736:4:7","nodeType":"VariableDeclaration","scope":1109,"src":"3728:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3728:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1096,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1093,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"3743:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2707,"src":"3743:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3743:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3728:50:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3792:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"expression":{"id":1100,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"3814:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":742,"src":"3814:16:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1098,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3801:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2516,"src":"3801:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3801:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3792:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"3788:85:7","trueBody":{"expression":{"id":1104,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3852:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1090,"id":1105,"nodeType":"Return","src":"3845:28:7"}},{"expression":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3890:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1090,"id":1108,"nodeType":"Return","src":"3883:8:7"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"3527:44:7","text":"implement template method of BaseAccount"},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"3585:18:7","nodeType":"FunctionDefinition","overrides":{"id":1087,"nodeType":"OverrideSpecifier","overrides":[],"src":"3668:8:7"},"parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"userOp","nameLocation":"3627:6:7","nodeType":"VariableDeclaration","scope":1110,"src":"3604:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":1082,"nodeType":"UserDefinedTypeName","pathNode":{"id":1081,"name":"UserOperation","nodeType":"IdentifierPath","referencedDeclaration":743,"src":"3604:13:7"},"referencedDeclaration":743,"src":"3604:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$743_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"userOpHash","nameLocation":"3643:10:7","nodeType":"VariableDeclaration","scope":1110,"src":"3635:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3635:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3603:51:7"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"validationData","nameLocation":"3702:14:7","nodeType":"VariableDeclaration","scope":1110,"src":"3694:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"3694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3693:24:7"},"scope":1201,"src":"3576:322:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"3978:213:7","statements":[{"assignments":[1120,1122],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"success","nameLocation":"3994:7:7","nodeType":"VariableDeclaration","scope":1135,"src":"3989:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1119,"name":"bool","nodeType":"ElementaryTypeName","src":"3989:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"result","nameLocation":"4016:6:7","nodeType":"VariableDeclaration","scope":1135,"src":"4003:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1121,"name":"bytes","nodeType":"ElementaryTypeName","src":"4003:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1129,"initialValue":{"arguments":[{"id":1127,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4053:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1123,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4026:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4026:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"4046:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4026:26:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4026:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3988:70:7"},{"condition":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4072:8:7","subExpression":{"id":1130,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4073:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1134,"nodeType":"IfStatement","src":"4068:117:7","trueBody":{"id":1133,"nodeType":"Block","src":"4082:103:7","statements":[{"AST":{"nodeType":"YulBlock","src":"4105:70:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4134:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"4142:2:7","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:7"},"nodeType":"YulFunctionCall","src":"4130:15:7"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4153:6:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4147:5:7"},"nodeType":"YulFunctionCall","src":"4147:13:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4123:6:7"},"nodeType":"YulFunctionCall","src":"4123:38:7"},"nodeType":"YulExpressionStatement","src":"4123:38:7"}]},"evmVersion":"london","externalReferences":[{"declaration":1122,"isOffset":false,"isSlot":false,"src":"4134:6:7","valueSize":1},{"declaration":1122,"isOffset":false,"isSlot":false,"src":"4153:6:7","valueSize":1}],"id":1132,"nodeType":"InlineAssembly","src":"4096:79:7"}]}}]},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"3913:5:7","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"target","nameLocation":"3927:6:7","nodeType":"VariableDeclaration","scope":1136,"src":"3919:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"value","nameLocation":"3943:5:7","nodeType":"VariableDeclaration","scope":1136,"src":"3935:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"data","nameLocation":"3963:4:7","nodeType":"VariableDeclaration","scope":1136,"src":"3950:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"3950:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3918:50:7"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"3978:0:7"},"scope":1201,"src":"3904:287:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"4320:61:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1147,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4368:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4360:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"4360:7:7","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4360:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1142,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[908],"referencedDeclaration":908,"src":"4337:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$613_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4337:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":687,"src":"4337:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4337:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1141,"id":1150,"nodeType":"Return","src":"4330:44:7"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"4197:66:7","text":" check current account deposit in the entryPoint"},"functionSelector":"c399ec88","id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"4277:10:7","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"4287:2:7"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"4311:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4310:9:7"},"scope":1201,"src":"4268:113:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1168,"nodeType":"Block","src":"4501:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1164,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4561:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4553:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"4553:7:7","typeDescriptions":{}}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4553:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1156,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[908],"referencedDeclaration":908,"src":"4511:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$613_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4511:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":693,"src":"4511:22:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1159,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4542:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4542:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4511:41:7","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4511:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"4511:56:7"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"4387:72:7","text":" deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"4473:10:7","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[],"src":"4483:2:7"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"4501:0:7"},"scope":1201,"src":"4464:110:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1186,"nodeType":"Block","src":"4819:65:7","statements":[{"expression":{"arguments":[{"id":1182,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"4853:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1183,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"4870:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1179,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[908],"referencedDeclaration":908,"src":"4829:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$613_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4829:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$613","typeString":"contract IEntryPoint"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":717,"src":"4829:23:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4829:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"4829:48:7"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"4580:141:7","text":" withdraw value from the account's deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"},"functionSelector":"4d44560d","id":1187,"implemented":true,"kind":"function","modifiers":[{"id":1177,"kind":"modifierInvocation","modifierName":{"id":1176,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":887,"src":"4809:9:7"},"nodeType":"ModifierInvocation","src":"4809:9:7"}],"name":"withdrawDepositTo","nameLocation":"4735:17:7","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4769:15:7","nodeType":"VariableDeclaration","scope":1187,"src":"4753:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"4753:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"amount","nameLocation":"4794:6:7","nodeType":"VariableDeclaration","scope":1187,"src":"4786:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"4786:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4752:49:7"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"4819:0:7"},"scope":1201,"src":"4726:158:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1823],"body":{"id":1199,"nodeType":"Block","src":"4967:58:7","statements":[{"expression":{"components":[{"id":1193,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"4978:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4977:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1195,"nodeType":"ExpressionStatement","src":"4977:19:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1196,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5006:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5006:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"5006:12:7"}]},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4899:17:7","nodeType":"FunctionDefinition","overrides":{"id":1191,"nodeType":"OverrideSpecifier","overrides":[],"src":"4958:8:7"},"parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"newImplementation","nameLocation":"4925:17:7","nodeType":"VariableDeclaration","scope":1200,"src":"4917:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"4917:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4916:27:7"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"4967:0:7"},"scope":1201,"src":"4890:135:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1202,"src":"591:4436:7","usedErrors":[]}],"src":"36:4993:7"},"id":7},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1211]},"id":1212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"138:203:8","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1211,"linearizedBaseContracts":[1211],"name":"IERC1822Proxiable","nameLocation":"352:17:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"376:438:8","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1210,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:8","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"841:2:8"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1210,"src":"867:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:8"},"scope":1211,"src":"819:57:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1212,"src":"342:536:8","usedErrors":[]}],"src":"113:766:8"},"id":8},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[2154],"ERC1967Upgrade":[1529],"IBeacon":[1539],"IERC1822Proxiable":[1211],"StorageSlot":[2214]},"id":1530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1213,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:9"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":1540,"src":"141:31:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":1212,"src":"173:45:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":2155,"src":"219:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1530,"sourceUnit":2215,"src":"253:37:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"292:236:9","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"},"fullyImplemented":true,"id":1529,"linearizedBaseContracts":[1529],"name":"ERC1967Upgrade","nameLocation":"547:14:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1221,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:9","nodeType":"VariableDeclaration","scope":1529,"src":"647:108:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:9","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"762:214:9","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":1225,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:9","nodeType":"VariableDeclaration","scope":1529,"src":"981:115:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:9","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"1103:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1230,"name":"Upgraded","nameLocation":"1182:8:9","nodeType":"EventDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"1207:14:9","nodeType":"VariableDeclaration","scope":1230,"src":"1191:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1190:32:9"},"src":"1176:47:9"},{"body":{"id":1242,"nodeType":"Block","src":"1363:78:9","statements":[{"expression":{"expression":{"arguments":[{"id":1238,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1407:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1236,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1380:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"1380:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1380:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"1380:54:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1235,"id":1241,"nodeType":"Return","src":"1373:61:9"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"1229:67:9","text":" @dev Returns the current implementation address."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1310:18:9","nodeType":"FunctionDefinition","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[],"src":"1328:2:9"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"1354:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1354:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1353:9:9"},"scope":1529,"src":"1301:140:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"1595:196:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1252,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"1632:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1250,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"1613:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"1613:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1613:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1652:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":1249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1605:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1605:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"ExpressionStatement","src":"1605:95:9"},{"expression":{"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1260,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1737:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1257,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1710:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"1710:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1710:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"1710:54:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1263,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"1767:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1710:74:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ExpressionStatement","src":"1710:74:9"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"1447:80:9","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1541:18:9","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"newImplementation","nameLocation":"1568:17:9","nodeType":"VariableDeclaration","scope":1267,"src":"1560:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1559:27:9"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[],"src":"1595:0:9"},"scope":1529,"src":"1532:259:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1281,"nodeType":"Block","src":"1953:96:9","statements":[{"expression":{"arguments":[{"id":1274,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1982:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"1963:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1963:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"1963:37:9"},{"eventCall":{"arguments":[{"id":1278,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2024:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2015:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2015:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"EmitStatement","src":"2010:32:9"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"1797:95:9","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1906:10:9","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"newImplementation","nameLocation":"1925:17:9","nodeType":"VariableDeclaration","scope":1282,"src":"1917:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1916:27:9"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"1953:0:9"},"scope":1529,"src":"1897:152:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1311,"nodeType":"Block","src":"2311:167:9","statements":[{"expression":{"arguments":[{"id":1293,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"2332:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1292,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2321:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"2321:29:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1296,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"2364:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2364:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1300,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"2383:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2364:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1310,"nodeType":"IfStatement","src":"2360:112:9","trueBody":{"id":1309,"nodeType":"Block","src":"2394:78:9","statements":[{"expression":{"arguments":[{"id":1305,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"2437:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"2456:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1302,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"2408:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2041,"src":"2408:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1308,"nodeType":"ExpressionStatement","src":"2408:53:9"}]}}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"2055:123:9","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2192:17:9","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"newImplementation","nameLocation":"2227:17:9","nodeType":"VariableDeclaration","scope":1312,"src":"2219:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"2219:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"data","nameLocation":"2267:4:9","nodeType":"VariableDeclaration","scope":1312,"src":"2254:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1286,"name":"bytes","nodeType":"ElementaryTypeName","src":"2254:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"forceCall","nameLocation":"2286:9:9","nodeType":"VariableDeclaration","scope":1312,"src":"2281:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1288,"name":"bool","nodeType":"ElementaryTypeName","src":"2281:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2209:92:9"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"2311:0:9"},"scope":1529,"src":"2183:295:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1364,"nodeType":"Block","src":"2782:820:9","statements":[{"condition":{"expression":{"arguments":[{"id":1324,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"3123:14:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1322,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3096:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":2191,"src":"3096:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2163_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3096:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2163_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2162,"src":"3096:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1362,"nodeType":"Block","src":"3214:382:9","statements":[{"clauses":[{"block":{"id":1347,"nodeType":"Block","src":"3308:115:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3334:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1342,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3342:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3334:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3364:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":1340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3326:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3326:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"3326:82:9"}]},"errorName":"","id":1348,"nodeType":"TryCatchClause","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"slot","nameLocation":"3302:4:9","nodeType":"VariableDeclaration","scope":1348,"src":"3294:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3294:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3293:14:9"},"src":"3285:138:9"},{"block":{"id":1353,"nodeType":"Block","src":"3430:89:9","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3455:48:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":1349,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3448:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3448:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"3448:56:9"}]},"errorName":"","id":1354,"nodeType":"TryCatchClause","src":"3424:95:9"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1333,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3250:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1332,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3232:17:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1211_$","typeString":"type(contract IERC1822Proxiable)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1211","typeString":"contract IERC1822Proxiable"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1210,"src":"3232:50:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3232:52:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1355,"nodeType":"TryStatement","src":"3228:291:9"},{"expression":{"arguments":[{"id":1357,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3550:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"3569:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1359,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3575:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1356,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"3532:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3532:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"3532:53:9"}]},"id":1363,"nodeType":"IfStatement","src":"3092:504:9","trueBody":{"id":1331,"nodeType":"Block","src":"3146:62:9","statements":[{"expression":{"arguments":[{"id":1328,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"3179:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1327,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"3160:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3160:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"3160:37:9"}]}}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"2484:161:9","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":1365,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2659:21:9","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"newImplementation","nameLocation":"2698:17:9","nodeType":"VariableDeclaration","scope":1365,"src":"2690:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"2690:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"data","nameLocation":"2738:4:9","nodeType":"VariableDeclaration","scope":1365,"src":"2725:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"2725:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"forceCall","nameLocation":"2757:9:9","nodeType":"VariableDeclaration","scope":1365,"src":"2752:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1318,"name":"bool","nodeType":"ElementaryTypeName","src":"2752:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2680:92:9"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"2782:0:9"},"scope":1529,"src":"2650:952:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"3608:189:9","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":1369,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3828:11:9","nodeType":"VariableDeclaration","scope":1529,"src":"3802:106:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3802:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3842:66:9","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"3915:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1376,"name":"AdminChanged","nameLocation":"3993:12:9","nodeType":"EventDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"4014:13:9","nodeType":"VariableDeclaration","scope":1376,"src":"4006:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"4037:8:9","nodeType":"VariableDeclaration","scope":1376,"src":"4029:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"4029:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:41:9"},"src":"3987:60:9"},{"body":{"id":1388,"nodeType":"Block","src":"4161:69:9","statements":[{"expression":{"expression":{"arguments":[{"id":1384,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4205:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1382,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4178:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4178:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4178:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"4178:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1381,"id":1387,"nodeType":"Return","src":"4171:52:9"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"4053:50:9","text":" @dev Returns the current admin."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4117:9:9","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"4126:2:9"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"4152:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"4152:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4151:9:9"},"scope":1529,"src":"4108:122:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"4357:156:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1396,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4375:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4395:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4387:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1397,"name":"address","nodeType":"ElementaryTypeName","src":"4387:7:9","typeDescriptions":{}}},"id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4387:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4375:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4399:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":1395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4367:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4367:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"4367:73:9"},{"expression":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1408,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"4477:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1405,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4450:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"4450:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4450:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"4450:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1411,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4498:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4450:56:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1413,"nodeType":"ExpressionStatement","src":"4450:56:9"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"4236:71:9","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4321:9:9","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"newAdmin","nameLocation":"4339:8:9","nodeType":"VariableDeclaration","scope":1415,"src":"4331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"4331:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4330:18:9"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"4357:0:9"},"scope":1529,"src":"4312:201:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1431,"nodeType":"Block","src":"4673:86:9","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1422,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4701:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4714:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1421,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"4688:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4688:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"EmitStatement","src":"4683:40:9"},{"expression":{"arguments":[{"id":1428,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"4743:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1427,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4733:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4733:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"4733:19:9"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"4519:100:9","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4633:12:9","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"newAdmin","nameLocation":"4654:8:9","nodeType":"VariableDeclaration","scope":1432,"src":"4646:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4645:18:9"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[],"src":"4673:0:9"},"scope":1529,"src":"4624:135:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"4765:232:9","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":1436,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5028:12:9","nodeType":"VariableDeclaration","scope":1529,"src":"5002:107:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5002:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5043:66:9","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"anonymous":false,"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"5116:60:9","text":" @dev Emitted when the beacon is upgraded."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1441,"name":"BeaconUpgraded","nameLocation":"5187:14:9","nodeType":"EventDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"5218:6:9","nodeType":"VariableDeclaration","scope":1441,"src":"5202:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"5202:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5201:24:9"},"src":"5181:45:9"},{"body":{"id":1453,"nodeType":"Block","src":"5342:70:9","statements":[{"expression":{"expression":{"arguments":[{"id":1449,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"5386:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1447,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5359:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"5359:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5359:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"5359:46:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1446,"id":1452,"nodeType":"Return","src":"5352:53:9"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"5232:51:9","text":" @dev Returns the current beacon."},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5297:10:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"5307:2:9"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"5333:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5332:9:9"},"scope":1529,"src":"5288:124:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"5541:324:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1463,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"5578:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1461,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"5559:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"5559:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5559:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5590:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":1460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5551:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5551:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"ExpressionStatement","src":"5551:79:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1472,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"5688:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"5680:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1539_$","typeString":"type(contract IBeacon)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5680:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1539","typeString":"contract IBeacon"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"5680:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5680:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1469,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"5661:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"5661:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5661:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5730:50:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":1468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5640:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5640:150:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"5640:150:9"},{"expression":{"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1483,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"5827:12:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1480,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"5800:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2214_$","typeString":"type(library StorageSlot)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2180,"src":"5800:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2160_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5800:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2159,"src":"5800:46:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1486,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"5849:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5800:58:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1488,"nodeType":"ExpressionStatement","src":"5800:58:9"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"5418:71:9","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5503:10:9","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"newBeacon","nameLocation":"5522:9:9","nodeType":"VariableDeclaration","scope":1490,"src":"5514:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"5514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5513:19:9"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"5541:0:9"},"scope":1529,"src":"5494:371:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1527,"nodeType":"Block","src":"6294:217:9","statements":[{"expression":{"arguments":[{"id":1501,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6315:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1500,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"6304:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"6304:21:9"},{"eventCall":{"arguments":[{"id":1505,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6355:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1504,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"6340:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6340:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"EmitStatement","src":"6335:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6379:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6379:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6393:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6379:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1512,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"6398:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6379:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"6375:130:9","trueBody":{"id":1525,"nodeType":"Block","src":"6409:96:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1518,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"6460:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1517,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6452:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1539_$","typeString":"type(contract IBeacon)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6452:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1539","typeString":"contract IBeacon"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1538,"src":"6452:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6452:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"6489:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1514,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"6423:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2041,"src":"6423:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6423:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1524,"nodeType":"ExpressionStatement","src":"6423:71:9"}]}}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"5871:292:9","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6177:23:9","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"newBeacon","nameLocation":"6218:9:9","nodeType":"VariableDeclaration","scope":1528,"src":"6210:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"data","nameLocation":"6250:4:9","nodeType":"VariableDeclaration","scope":1528,"src":"6237:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"6237:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"forceCall","nameLocation":"6269:9:9","nodeType":"VariableDeclaration","scope":1528,"src":"6264:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1496,"name":"bool","nodeType":"ElementaryTypeName","src":"6264:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6200:84:9"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"6294:0:9"},"scope":1529,"src":"6168:343:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1530,"src":"529:5984:9","usedErrors":[]}],"src":"116:6398:9"},"id":9},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1539]},"id":1540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1531,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"118:79:10","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1539,"linearizedBaseContracts":[1539],"name":"IBeacon","nameLocation":"208:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"222:162:10","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:10","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"412:2:10"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"438:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:10"},"scope":1539,"src":"389:58:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1540,"src":"198:251:10","usedErrors":[]}],"src":"93:357:10"},"id":10},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[2154],"Initializable":[1708]},"id":1709,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1541,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1709,"sourceUnit":2155,"src":"138:33:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"173:2198:11","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1708,"linearizedBaseContracts":[1708],"name":"Initializable","nameLocation":"2390:13:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"2410:109:11","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1546,"mutability":"mutable","name":"_initialized","nameLocation":"2538:12:11","nodeType":"VariableDeclaration","scope":1708,"src":"2524:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1545,"name":"uint8","nodeType":"ElementaryTypeName","src":"2524:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"2557:91:11","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1549,"mutability":"mutable","name":"_initializing","nameLocation":"2666:13:11","nodeType":"VariableDeclaration","scope":1708,"src":"2653:26:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1548,"name":"bool","nodeType":"ElementaryTypeName","src":"2653:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"2686:90:11","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":1554,"name":"Initialized","nameLocation":"2787:11:11","nodeType":"EventDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1552,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2805:7:11","nodeType":"VariableDeclaration","scope":1554,"src":"2799:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1551,"name":"uint8","nodeType":"ElementaryTypeName","src":"2799:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2798:15:11"},"src":"2781:33:11"},{"body":{"id":1609,"nodeType":"Block","src":"3247:472:11","statements":[{"assignments":[1558],"declarations":[{"constant":false,"id":1558,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3262:14:11","nodeType":"VariableDeclaration","scope":1609,"src":"3257:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1557,"name":"bool","nodeType":"ElementaryTypeName","src":"3257:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1561,"initialValue":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3279:14:11","subExpression":{"id":1559,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3280:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3257:36:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3325:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1564,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3343:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3343:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3325:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3324:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3365:34:11","subExpression":{"arguments":[{"arguments":[{"id":1573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3393:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1708","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1708","typeString":"contract Initializable"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3385:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"3385:7:11","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3385:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1569,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3366:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2154_$","typeString":"type(library Address)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"3366:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3366:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3403:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3419:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3403:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3365:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3364:57:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3324:97:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3435:48:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3303:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3303:190:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1585,"nodeType":"ExpressionStatement","src":"3303:190:11"},{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1586,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3503:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3518:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3503:16:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1589,"nodeType":"ExpressionStatement","src":"3503:16:11"},{"condition":{"id":1590,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3533:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"IfStatement","src":"3529:65:11","trueBody":{"id":1595,"nodeType":"Block","src":"3549:45:11","statements":[{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1591,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3563:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3579:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3563:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1594,"nodeType":"ExpressionStatement","src":"3563:20:11"}]}},{"id":1597,"nodeType":"PlaceholderStatement","src":"3603:1:11"},{"condition":{"id":1598,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"3618:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"3614:99:11","trueBody":{"id":1607,"nodeType":"Block","src":"3634:79:11","statements":[{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1599,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3648:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3664:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3648:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1602,"nodeType":"ExpressionStatement","src":"3648:21:11"},{"eventCall":{"arguments":[{"hexValue":"31","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3700:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1603,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3688:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3688:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"EmitStatement","src":"3683:19:11"}]}}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"2820:399:11","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":1610,"name":"initializer","nameLocation":"3233:11:11","nodeType":"ModifierDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[],"src":"3244:2:11"},"src":"3224:495:11","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"4830:255:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4848:14:11","subExpression":{"id":1616,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4849:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"4866:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1619,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4881:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4866:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4848:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4890:48:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4840:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4840:99:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1624,"nodeType":"ExpressionStatement","src":"4840:99:11"},{"expression":{"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1625,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"4949:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1626,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4964:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4949:22:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1628,"nodeType":"ExpressionStatement","src":"4949:22:11"},{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4981:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4997:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4981:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1632,"nodeType":"ExpressionStatement","src":"4981:20:11"},{"id":1633,"nodeType":"PlaceholderStatement","src":"5011:1:11"},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1634,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5022:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5038:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5022:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1637,"nodeType":"ExpressionStatement","src":"5022:21:11"},{"eventCall":{"arguments":[{"id":1639,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"5070:7:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1638,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"5058:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5058:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"EmitStatement","src":"5053:25:11"}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"3725:1062:11","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":1643,"name":"reinitializer","nameLocation":"4801:13:11","nodeType":"ModifierDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"version","nameLocation":"4821:7:11","nodeType":"VariableDeclaration","scope":1643,"src":"4815:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1612,"name":"uint8","nodeType":"ElementaryTypeName","src":"4815:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4814:15:11"},"src":"4792:293:11","virtual":false,"visibility":"internal"},{"body":{"id":1652,"nodeType":"Block","src":"5323:97:11","statements":[{"expression":{"arguments":[{"id":1647,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5341:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5356:45:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5333:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5333:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"5333:69:11"},{"id":1651,"nodeType":"PlaceholderStatement","src":"5412:1:11"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"5091:199:11","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1653,"name":"onlyInitializing","nameLocation":"5304:16:11","nodeType":"ModifierDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"5320:2:11"},"src":"5295:125:11","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"5955:230:11","statements":[{"expression":{"arguments":[{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5973:14:11","subExpression":{"id":1658,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5974:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5989:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5965:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1662,"nodeType":"ExpressionStatement","src":"5965:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6045:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6065:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1665,"name":"uint8","nodeType":"ElementaryTypeName","src":"6065:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6060:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6060:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6060:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6045:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"6041:138:11","trueBody":{"id":1686,"nodeType":"Block","src":"6077:102:11","statements":[{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1670,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6091:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1672,"name":"uint8","nodeType":"ElementaryTypeName","src":"6111:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6106:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6106:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6091:30:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1677,"nodeType":"ExpressionStatement","src":"6091:30:11"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6157:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1680,"name":"uint8","nodeType":"ElementaryTypeName","src":"6157:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6152:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6152:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6152:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1678,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"6140:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6140:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"EmitStatement","src":"6135:33:11"}]}}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"5426:475:11","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5915:20:11","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"5935:2:11"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"5955:0:11"},"scope":1708,"src":"5906:279:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1697,"nodeType":"Block","src":"6362:36:11","statements":[{"expression":{"id":1695,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6379:12:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1694,"id":1696,"nodeType":"Return","src":"6372:19:11"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"6191:102:11","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6307:22:11","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[],"src":"6329:2:11"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1698,"src":"6355:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1692,"name":"uint8","nodeType":"ElementaryTypeName","src":"6355:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6354:7:11"},"scope":1708,"src":"6298:100:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"6568:37:11","statements":[{"expression":{"id":1704,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"6585:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1703,"id":1705,"nodeType":"Return","src":"6578:20:11"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"6404:103:11","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6521:15:11","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"6536:2:11"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"6562:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1701,"name":"bool","nodeType":"ElementaryTypeName","src":"6562:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6561:6:11"},"scope":1708,"src":"6512:93:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1709,"src":"2372:4235:11","usedErrors":[]}],"src":"113:6495:11"},"id":11},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"Address":[2154],"ERC1967Upgrade":[1529],"IBeacon":[1539],"IERC1822Proxiable":[1211],"StorageSlot":[2214],"UUPSUpgradeable":[1824]},"id":1825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1710,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:12"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":1711,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1825,"sourceUnit":1212,"src":"140:45:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":1712,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1825,"sourceUnit":1530,"src":"186:39:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1714,"name":"IERC1822Proxiable","nodeType":"IdentifierPath","referencedDeclaration":1211,"src":"913:17:12"},"id":1715,"nodeType":"InheritanceSpecifier","src":"913:17:12"},{"baseName":{"id":1716,"name":"ERC1967Upgrade","nodeType":"IdentifierPath","referencedDeclaration":1529,"src":"932:14:12"},"id":1717,"nodeType":"InheritanceSpecifier","src":"932:14:12"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"227:648:12","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":1824,"linearizedBaseContracts":[1824,1529,1211],"name":"UUPSUpgradeable","nameLocation":"894:15:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"953:87:12","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":1724,"mutability":"immutable","name":"__self","nameLocation":"1071:6:12","nodeType":"VariableDeclaration","scope":1824,"src":"1045:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"1045:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":1722,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1088:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}],"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{}}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1080:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":1746,"nodeType":"Block","src":"1619:205:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1645:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}],"id":1729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:12","typeDescriptions":{}}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1637:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1732,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1654:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1662:46:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":1727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1629:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1629:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1736,"nodeType":"ExpressionStatement","src":"1629:80:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1738,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1727:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1727:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1740,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1751:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1727:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:46:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":1737,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1719:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1719:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"1719:87:12"},{"id":1745,"nodeType":"PlaceholderStatement","src":"1816:1:12"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"1100:493:12","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":1747,"name":"onlyProxy","nameLocation":"1607:9:12","nodeType":"ModifierDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"1616:2:12"},"src":"1598:226:12","virtual":false,"visibility":"internal"},{"body":{"id":1761,"nodeType":"Block","src":"2054:120:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1753,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2080:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$1824","typeString":"contract UUPSUpgradeable"}],"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:12","typeDescriptions":{}}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1755,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2089:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2072:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2097:58:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":1750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2064:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2064:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"ExpressionStatement","src":"2064:92:12"},{"id":1760,"nodeType":"PlaceholderStatement","src":"2166:1:12"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"1830:195:12","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":1762,"name":"notDelegated","nameLocation":"2039:12:12","nodeType":"ModifierDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[],"src":"2051:2:12"},"src":"2030:144:12","virtual":false,"visibility":"internal"},{"baseFunctions":[1210],"body":{"id":1773,"nodeType":"Block","src":"2849:44:12","statements":[{"expression":{"id":1771,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2866:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1770,"id":1772,"nodeType":"Return","src":"2859:27:12"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"2180:577:12","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":1774,"implemented":true,"kind":"function","modifiers":[{"id":1767,"kind":"modifierInvocation","modifierName":{"id":1766,"name":"notDelegated","nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"2818:12:12"},"nodeType":"ModifierInvocation","src":"2818:12:12"}],"name":"proxiableUUID","nameLocation":"2771:13:12","nodeType":"FunctionDefinition","overrides":{"id":1765,"nodeType":"OverrideSpecifier","overrides":[],"src":"2809:8:12"},"parameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"2784:2:12"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"2840:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2840:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2839:9:12"},"scope":1824,"src":"2762:131:12","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":1795,"nodeType":"Block","src":"3146:124:12","statements":[{"expression":{"arguments":[{"id":1783,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3174:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1782,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3156:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3156:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1785,"nodeType":"ExpressionStatement","src":"3156:36:12"},{"expression":{"arguments":[{"id":1787,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3224:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3243:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1788,"name":"bytes","nodeType":"ElementaryTypeName","src":"3247:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3243:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3257:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1786,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3202:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3202:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"ExpressionStatement","src":"3202:61:12"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"2899:169:12","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"3659cfe6","id":1796,"implemented":true,"kind":"function","modifiers":[{"id":1780,"kind":"modifierInvocation","modifierName":{"id":1779,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"3136:9:12"},"nodeType":"ModifierInvocation","src":"3136:9:12"}],"name":"upgradeTo","nameLocation":"3082:9:12","nodeType":"FunctionDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"newImplementation","nameLocation":"3100:17:12","nodeType":"VariableDeclaration","scope":1796,"src":"3092:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"3092:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3091:27:12"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"3146:0:12"},"scope":1824,"src":"3073:197:12","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":1816,"nodeType":"Block","src":"3626:115:12","statements":[{"expression":{"arguments":[{"id":1807,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3654:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1806,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3636:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3636:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"3636:36:12"},{"expression":{"arguments":[{"id":1811,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3704:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3723:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3729:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1810,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"3682:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3682:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"ExpressionStatement","src":"3682:52:12"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"3276:238:12","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."},"functionSelector":"4f1ef286","id":1817,"implemented":true,"kind":"function","modifiers":[{"id":1804,"kind":"modifierInvocation","modifierName":{"id":1803,"name":"onlyProxy","nodeType":"IdentifierPath","referencedDeclaration":1747,"src":"3616:9:12"},"nodeType":"ModifierInvocation","src":"3616:9:12"}],"name":"upgradeToAndCall","nameLocation":"3528:16:12","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"newImplementation","nameLocation":"3553:17:12","nodeType":"VariableDeclaration","scope":1817,"src":"3545:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"data","nameLocation":"3585:4:12","nodeType":"VariableDeclaration","scope":1817,"src":"3572:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1800,"name":"bytes","nodeType":"ElementaryTypeName","src":"3572:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3544:46:12"},"returnParameters":{"id":1805,"nodeType":"ParameterList","parameters":[],"src":"3626:0:12"},"scope":1824,"src":"3519:222:12","stateMutability":"payable","virtual":true,"visibility":"external"},{"documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"3747:397:12","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":1823,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4158:17:12","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"newImplementation","nameLocation":"4184:17:12","nodeType":"VariableDeclaration","scope":1823,"src":"4176:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:27:12"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"4219:0:12"},"scope":1824,"src":"4149:71:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1825,"src":"876:3346:12","usedErrors":[]}],"src":"115:4108:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2154]},"id":2155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1826,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2154,"linearizedBaseContracts":[2154],"name":"Address","nameLocation":"202:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1841,"nodeType":"Block","src":"1241:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1835,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1465:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1834,"id":1840,"nodeType":"Return","src":"1458:30:13"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"216:954:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1842,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:13","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"account","nameLocation":"1203:7:13","nodeType":"VariableDeclaration","scope":1842,"src":"1195:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:13"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"1235:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1832,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:13"},"scope":2154,"src":"1175:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"2483:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1853,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2154","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2154","typeString":"library Address"}],"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:13","typeDescriptions":{}}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2526:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"2493:73:13"},{"assignments":[1862,null],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"success","nameLocation":"2583:7:13","nodeType":"VariableDeclaration","scope":1875,"src":"2578:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1861,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1869,"initialValue":{"arguments":[{"hexValue":"","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1863,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2596:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1865,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2618:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:13"},{"expression":{"arguments":[{"id":1871,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"2647:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1874,"nodeType":"ExpressionStatement","src":"2639:78:13"}]},"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"1501:906:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:13","nodeType":"FunctionDefinition","parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:13","nodeType":"VariableDeclaration","scope":1876,"src":"2431:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"amount","nameLocation":"2466:6:13","nodeType":"VariableDeclaration","scope":1876,"src":"2458:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:13"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[],"src":"2483:0:13"},"scope":2154,"src":"2412:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1893,"nodeType":"Block","src":"3555:96:13","statements":[{"expression":{"arguments":[{"id":1887,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"3594:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1888,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"3602:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1886,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1934,1978],"referencedDeclaration":1978,"src":"3572:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1885,"id":1892,"nodeType":"Return","src":"3565:79:13"}]},"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"2730:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:13","nodeType":"FunctionDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"target","nameLocation":"3496:6:13","nodeType":"VariableDeclaration","scope":1894,"src":"3488:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1878,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"data","nameLocation":"3517:4:13","nodeType":"VariableDeclaration","scope":1894,"src":"3504:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1880,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:13"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1894,"src":"3541:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1883,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:13"},"scope":2154,"src":"3466:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"4020:76:13","statements":[{"expression":{"arguments":[{"id":1907,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"4059:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1908,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"4067:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1910,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"4076:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1906,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1934,1978],"referencedDeclaration":1978,"src":"4037:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1905,"id":1912,"nodeType":"Return","src":"4030:59:13"}]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"3657:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:13","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"target","nameLocation":"3912:6:13","nodeType":"VariableDeclaration","scope":1914,"src":"3904:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"data","nameLocation":"3941:4:13","nodeType":"VariableDeclaration","scope":1914,"src":"3928:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1898,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:13","nodeType":"VariableDeclaration","scope":1914,"src":"3955:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1900,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:13"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"4006:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1903,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:13"},"scope":2154,"src":"3873:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1933,"nodeType":"Block","src":"4601:111:13","statements":[{"expression":{"arguments":[{"id":1927,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"4640:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"4648:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"4654:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1926,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1934,1978],"referencedDeclaration":1978,"src":"4618:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1925,"id":1932,"nodeType":"Return","src":"4611:94:13"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"4102:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:13","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"target","nameLocation":"4506:6:13","nodeType":"VariableDeclaration","scope":1934,"src":"4498:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"data","nameLocation":"4535:4:13","nodeType":"VariableDeclaration","scope":1934,"src":"4522:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1918,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"value","nameLocation":"4557:5:13","nodeType":"VariableDeclaration","scope":1934,"src":"4549:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:13"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1934,"src":"4587:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:13"},"scope":2154,"src":"4458:254:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"5139:267:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1951,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2154","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2154","typeString":"library Address"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:13","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"5182:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1958,"nodeType":"ExpressionStatement","src":"5149:81:13"},{"assignments":[1960,1962],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"success","nameLocation":"5246:7:13","nodeType":"VariableDeclaration","scope":1977,"src":"5241:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:13","nodeType":"VariableDeclaration","scope":1977,"src":"5255:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1961,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1969,"initialValue":{"arguments":[{"id":1967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5308:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1963,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"5282:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"5301:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:13"},{"expression":{"arguments":[{"id":1971,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"5357:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1972,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5365:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1973,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5374:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1974,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"5386:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1970,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5330:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1947,"id":1976,"nodeType":"Return","src":"5323:76:13"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"4718:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:13","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"target","nameLocation":"5008:6:13","nodeType":"VariableDeclaration","scope":1978,"src":"5000:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"data","nameLocation":"5037:4:13","nodeType":"VariableDeclaration","scope":1978,"src":"5024:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"value","nameLocation":"5059:5:13","nodeType":"VariableDeclaration","scope":1978,"src":"5051:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:13","nodeType":"VariableDeclaration","scope":1978,"src":"5074:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1942,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:13"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"5125:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:13"},"scope":2154,"src":"4960:446:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"5683:97:13","statements":[{"expression":{"arguments":[{"id":1989,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"5719:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1990,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"5727:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1988,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1995,2024],"referencedDeclaration":2024,"src":"5700:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1987,"id":1993,"nodeType":"Return","src":"5693:80:13"}]},"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"5412:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:13","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"target","nameLocation":"5619:6:13","nodeType":"VariableDeclaration","scope":1995,"src":"5611:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"data","nameLocation":"5640:4:13","nodeType":"VariableDeclaration","scope":1995,"src":"5627:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1982,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:13"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1995,"src":"5669:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1985,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:13"},"scope":2154,"src":"5583:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"6122:168:13","statements":[{"assignments":[2008,2010],"declarations":[{"constant":false,"id":2008,"mutability":"mutable","name":"success","nameLocation":"6138:7:13","nodeType":"VariableDeclaration","scope":2023,"src":"6133:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2007,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:13","nodeType":"VariableDeclaration","scope":2023,"src":"6147:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2009,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2015,"initialValue":{"arguments":[{"id":2013,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6192:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2011,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6174:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:13"},{"expression":{"arguments":[{"id":2017,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6241:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2018,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6249:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2019,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"6258:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2020,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6270:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2016,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6214:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2006,"id":2022,"nodeType":"Return","src":"6207:76:13"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"5786:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:13","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"target","nameLocation":"6009:6:13","nodeType":"VariableDeclaration","scope":2024,"src":"6001:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"data","nameLocation":"6038:4:13","nodeType":"VariableDeclaration","scope":2024,"src":"6025:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2002,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:13","nodeType":"VariableDeclaration","scope":2024,"src":"6052:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2001,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:13"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"6108:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2004,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:13"},"scope":2154,"src":"5964:326:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2040,"nodeType":"Block","src":"6566:101:13","statements":[{"expression":{"arguments":[{"id":2035,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"6604:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2036,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"6612:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2034,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2041,2070],"referencedDeclaration":2070,"src":"6583:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2033,"id":2039,"nodeType":"Return","src":"6576:84:13"}]},"documentation":{"id":2025,"nodeType":"StructuredDocumentation","src":"6296:168:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:13","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"target","nameLocation":"6507:6:13","nodeType":"VariableDeclaration","scope":2041,"src":"6499:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"data","nameLocation":"6528:4:13","nodeType":"VariableDeclaration","scope":2041,"src":"6515:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:13"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2041,"src":"6552:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2031,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:13"},"scope":2154,"src":"6469:198:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"7008:170:13","statements":[{"assignments":[2054,2056],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"success","nameLocation":"7024:7:13","nodeType":"VariableDeclaration","scope":2069,"src":"7019:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2053,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:13","nodeType":"VariableDeclaration","scope":2069,"src":"7033:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2055,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2061,"initialValue":{"arguments":[{"id":2059,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"7080:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2057,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7060:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:13"},{"expression":{"arguments":[{"id":2063,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7129:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2064,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7137:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2065,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"7146:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2066,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"7158:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2062,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7102:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2052,"id":2068,"nodeType":"Return","src":"7095:76:13"}]},"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"6673:175:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:13","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"target","nameLocation":"6900:6:13","nodeType":"VariableDeclaration","scope":2070,"src":"6892:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"data","nameLocation":"6929:4:13","nodeType":"VariableDeclaration","scope":2070,"src":"6916:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2045,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:13","nodeType":"VariableDeclaration","scope":2070,"src":"6943:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2047,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:13"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2070,"src":"6994:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:13"},"scope":2154,"src":"6853:325:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"7660:434:13","statements":[{"condition":{"id":2084,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"7674:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2106,"nodeType":"Block","src":"8030:58:13","statements":[{"expression":{"arguments":[{"id":2102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"8052:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2103,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"8064:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2101,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8044:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"8044:33:13"}]},"id":2107,"nodeType":"IfStatement","src":"7670:418:13","trueBody":{"id":2100,"nodeType":"Block","src":"7683:341:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2085,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"7701:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2097,"nodeType":"IfStatement","src":"7697:286:13","trueBody":{"id":2096,"nodeType":"Block","src":"7725:258:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2091,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"7927:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2090,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"7916:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2095,"nodeType":"ExpressionStatement","src":"7908:60:13"}]}},{"expression":{"id":2098,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"8003:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2083,"id":2099,"nodeType":"Return","src":"7996:17:13"}]}}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"7184:277:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:13","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"target","nameLocation":"7519:6:13","nodeType":"VariableDeclaration","scope":2109,"src":"7511:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"success","nameLocation":"7540:7:13","nodeType":"VariableDeclaration","scope":2109,"src":"7535:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2074,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:13","nodeType":"VariableDeclaration","scope":2109,"src":"7557:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2076,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:13","nodeType":"VariableDeclaration","scope":2109,"src":"7590:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2078,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:13"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"7646:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:13"},"scope":2154,"src":"7466:628:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2132,"nodeType":"Block","src":"8475:135:13","statements":[{"condition":{"id":2121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"8489:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2130,"nodeType":"Block","src":"8546:58:13","statements":[{"expression":{"arguments":[{"id":2126,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"8568:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2127,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"8580:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2125,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8560:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2129,"nodeType":"ExpressionStatement","src":"8560:33:13"}]},"id":2131,"nodeType":"IfStatement","src":"8485:119:13","trueBody":{"id":2124,"nodeType":"Block","src":"8498:42:13","statements":[{"expression":{"id":2122,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"8519:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2120,"id":2123,"nodeType":"Return","src":"8512:17:13"}]}}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"8100:210:13","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:13","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"success","nameLocation":"8355:7:13","nodeType":"VariableDeclaration","scope":2133,"src":"8350:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2111,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:13","nodeType":"VariableDeclaration","scope":2133,"src":"8372:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2113,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:13","nodeType":"VariableDeclaration","scope":2133,"src":"8405:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2115,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:13"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2133,"src":"8461:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2118,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:13"},"scope":2154,"src":"8315:295:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"8699:457:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2140,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"8775:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2150,"nodeType":"Block","src":"9105:45:13","statements":[{"expression":{"arguments":[{"id":2147,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"9126:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2146,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2149,"nodeType":"ExpressionStatement","src":"9119:20:13"}]},"id":2151,"nodeType":"IfStatement","src":"8771:379:13","trueBody":{"id":2145,"nodeType":"Block","src":"8798:301:13","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:13"},"nodeType":"YulFunctionCall","src":"8997:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:13"},"nodeType":"YulFunctionCall","src":"9038:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:13"},"nodeType":"YulFunctionCall","src":"9031:44:13"},"nodeType":"YulExpressionStatement","src":"9031:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":false,"src":"9003:10:13","valueSize":1},{"declaration":2135,"isOffset":false,"isSlot":false,"src":"9046:10:13","valueSize":1}],"id":2144,"nodeType":"InlineAssembly","src":"8947:142:13"}]}}]},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:13","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:13","nodeType":"VariableDeclaration","scope":2153,"src":"8633:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2134,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2137,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:13","nodeType":"VariableDeclaration","scope":2153,"src":"8658:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2136,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:13"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[],"src":"8699:0:13"},"scope":2154,"src":"8616:540:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2155,"src":"194:8964:13","usedErrors":[]}],"src":"101:9058:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2214]},"id":2215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2156,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"130:1148:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"},"fullyImplemented":true,"id":2214,"linearizedBaseContracts":[2214],"name":"StorageSlot","nameLocation":"1287:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2160,"members":[{"constant":false,"id":2159,"mutability":"mutable","name":"value","nameLocation":"1342:5:14","nodeType":"VariableDeclaration","scope":2160,"src":"1334:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"1334:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1312:11:14","nodeType":"StructDefinition","scope":2214,"src":"1305:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2163,"members":[{"constant":false,"id":2162,"mutability":"mutable","name":"value","nameLocation":"1394:5:14","nodeType":"VariableDeclaration","scope":2163,"src":"1389:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"1389:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1367:11:14","nodeType":"StructDefinition","scope":2214,"src":"1360:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2166,"members":[{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"1449:5:14","nodeType":"VariableDeclaration","scope":2166,"src":"1441:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1441:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1419:11:14","nodeType":"StructDefinition","scope":2214,"src":"1412:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2169,"members":[{"constant":false,"id":2168,"mutability":"mutable","name":"value","nameLocation":"1504:5:14","nodeType":"VariableDeclaration","scope":2169,"src":"1496:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1474:11:14","nodeType":"StructDefinition","scope":2214,"src":"1467:49:14","visibility":"public"},{"body":{"id":2179,"nodeType":"Block","src":"1698:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1760:38:14","statements":[{"nodeType":"YulAssignment","src":"1774:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"1784:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1774:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2176,"isOffset":false,"isSlot":true,"src":"1774:6:14","suffix":"slot","valueSize":1},{"declaration":2172,"isOffset":false,"isSlot":false,"src":"1784:4:14","valueSize":1}],"id":2178,"nodeType":"InlineAssembly","src":"1751:47:14"}]},"documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"1522:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1623:14:14","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"slot","nameLocation":"1646:4:14","nodeType":"VariableDeclaration","scope":2180,"src":"1638:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1638:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1637:14:14"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"r","nameLocation":"1695:1:14","nodeType":"VariableDeclaration","scope":2180,"src":"1675:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2175,"nodeType":"UserDefinedTypeName","pathNode":{"id":2174,"name":"AddressSlot","nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"1675:11:14"},"referencedDeclaration":2160,"src":"1675:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2160_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1674:23:14"},"scope":2214,"src":"1614:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"1986:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2048:38:14","statements":[{"nodeType":"YulAssignment","src":"2062:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2072:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2062:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2187,"isOffset":false,"isSlot":true,"src":"2062:6:14","suffix":"slot","valueSize":1},{"declaration":2183,"isOffset":false,"isSlot":false,"src":"2072:4:14","valueSize":1}],"id":2189,"nodeType":"InlineAssembly","src":"2039:47:14"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"1810:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1911:14:14","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"slot","nameLocation":"1934:4:14","nodeType":"VariableDeclaration","scope":2191,"src":"1926:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1926:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1925:14:14"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"r","nameLocation":"1983:1:14","nodeType":"VariableDeclaration","scope":2191,"src":"1963:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2163_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2186,"nodeType":"UserDefinedTypeName","pathNode":{"id":2185,"name":"BooleanSlot","nodeType":"IdentifierPath","referencedDeclaration":2163,"src":"1963:11:14"},"referencedDeclaration":2163,"src":"1963:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2163_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"1962:23:14"},"scope":2214,"src":"1902:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2201,"nodeType":"Block","src":"2274:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2336:38:14","statements":[{"nodeType":"YulAssignment","src":"2350:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2360:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2350:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2198,"isOffset":false,"isSlot":true,"src":"2350:6:14","suffix":"slot","valueSize":1},{"declaration":2194,"isOffset":false,"isSlot":false,"src":"2360:4:14","valueSize":1}],"id":2200,"nodeType":"InlineAssembly","src":"2327:47:14"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"2098:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2202,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2199:14:14","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"slot","nameLocation":"2222:4:14","nodeType":"VariableDeclaration","scope":2202,"src":"2214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:14:14"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"r","nameLocation":"2271:1:14","nodeType":"VariableDeclaration","scope":2202,"src":"2251:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2166_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2197,"nodeType":"UserDefinedTypeName","pathNode":{"id":2196,"name":"Bytes32Slot","nodeType":"IdentifierPath","referencedDeclaration":2166,"src":"2251:11:14"},"referencedDeclaration":2166,"src":"2251:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2166_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2250:23:14"},"scope":2214,"src":"2190:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"2562:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2624:38:14","statements":[{"nodeType":"YulAssignment","src":"2638:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2648:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2638:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2209,"isOffset":false,"isSlot":true,"src":"2638:6:14","suffix":"slot","valueSize":1},{"declaration":2205,"isOffset":false,"isSlot":false,"src":"2648:4:14","valueSize":1}],"id":2211,"nodeType":"InlineAssembly","src":"2615:47:14"}]},"documentation":{"id":2203,"nodeType":"StructuredDocumentation","src":"2386:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2487:14:14","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"slot","nameLocation":"2510:4:14","nodeType":"VariableDeclaration","scope":2213,"src":"2502:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:14"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"r","nameLocation":"2559:1:14","nodeType":"VariableDeclaration","scope":2213,"src":"2539:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2169_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2208,"nodeType":"UserDefinedTypeName","pathNode":{"id":2207,"name":"Uint256Slot","nodeType":"IdentifierPath","referencedDeclaration":2169,"src":"2539:11:14"},"referencedDeclaration":2169,"src":"2539:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2169_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2538:23:14"},"scope":2214,"src":"2478:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2215,"src":"1279:1391:14","usedErrors":[]}],"src":"105:2566:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3615],"Strings":[2389]},"id":2390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2216,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2390,"sourceUnit":3616,"src":"126:25:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"153:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2389,"linearizedBaseContracts":[2389],"name":"Strings","nameLocation":"196:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2221,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:15","nodeType":"VariableDeclaration","scope":2389,"src":"210:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2219,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2224,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:15","nodeType":"VariableDeclaration","scope":2389,"src":"270:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2222,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2271,"nodeType":"Block","src":"486:625:15","statements":[{"id":2270,"nodeType":"UncheckedBlock","src":"496:609:15","statements":[{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"length","nameLocation":"528:6:15","nodeType":"VariableDeclaration","scope":2270,"src":"520:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2240,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"548:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2234,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"537:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3615_$","typeString":"type(library Math)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3452,"src":"537:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:15"},{"assignments":[2242],"declarations":[{"constant":false,"id":2242,"mutability":"mutable","name":"buffer","nameLocation":"586:6:15","nodeType":"VariableDeclaration","scope":2270,"src":"572:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2241,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2247,"initialValue":{"arguments":[{"id":2245,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"606:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:15"},{"assignments":[2249],"declarations":[{"constant":false,"id":2249,"mutability":"mutable","name":"ptr","nameLocation":"635:3:15","nodeType":"VariableDeclaration","scope":2270,"src":"627:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2250,"nodeType":"VariableDeclarationStatement","src":"627:11:15"},{"AST":{"nodeType":"YulBlock","src":"708:67:15","statements":[{"nodeType":"YulAssignment","src":"726:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:15"},"nodeType":"YulFunctionCall","src":"745:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:15"},"nodeType":"YulFunctionCall","src":"733:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2242,"isOffset":false,"isSlot":false,"src":"737:6:15","valueSize":1},{"declaration":2233,"isOffset":false,"isSlot":false,"src":"753:6:15","valueSize":1},{"declaration":2249,"isOffset":false,"isSlot":false,"src":"726:3:15","valueSize":1}],"id":2251,"nodeType":"InlineAssembly","src":"699:76:15"},{"body":{"id":2266,"nodeType":"Block","src":"801:267:15","statements":[{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:15","subExpression":{"id":2253,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"819:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ExpressionStatement","src":"819:5:15"},{"AST":{"nodeType":"YulBlock","src":"902:84:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:15"},"nodeType":"YulFunctionCall","src":"942:14:15"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:15"},"nodeType":"YulFunctionCall","src":"937:30:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:15"},"nodeType":"YulFunctionCall","src":"924:44:15"},"nodeType":"YulExpressionStatement","src":"924:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2221,"isOffset":false,"isSlot":false,"src":"958:8:15","valueSize":1},{"declaration":2249,"isOffset":false,"isSlot":false,"src":"932:3:15","valueSize":1},{"declaration":2227,"isOffset":false,"isSlot":false,"src":"946:5:15","valueSize":1}],"id":2256,"nodeType":"InlineAssembly","src":"893:93:15"},{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"1003:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"1003:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"1036:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2265,"nodeType":"IfStatement","src":"1032:21:15","trueBody":{"id":2264,"nodeType":"Break","src":"1048:5:15"}}]},"condition":{"hexValue":"74727565","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2267,"nodeType":"WhileStatement","src":"788:280:15"},{"expression":{"id":2268,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"1088:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2231,"id":2269,"nodeType":"Return","src":"1081:13:15"}]}]},"documentation":{"id":2225,"nodeType":"StructuredDocumentation","src":"320:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:15","nodeType":"FunctionDefinition","parameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"value","nameLocation":"441:5:15","nodeType":"VariableDeclaration","scope":2272,"src":"433:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2226,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:15"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"471:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2229,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:15"},"scope":2389,"src":"415:696:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2291,"nodeType":"Block","src":"1290:100:15","statements":[{"id":2290,"nodeType":"UncheckedBlock","src":"1300:84:15","statements":[{"expression":{"arguments":[{"id":2281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2282,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"1350:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3615_$","typeString":"type(library Math)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3575,"src":"1350:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2280,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2292,2368,2388],"referencedDeclaration":2368,"src":"1331:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2279,"id":2289,"nodeType":"Return","src":"1324:49:15"}]}]},"documentation":{"id":2273,"nodeType":"StructuredDocumentation","src":"1117:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2292,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:15","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"1245:5:15","nodeType":"VariableDeclaration","scope":2292,"src":"1237:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:15"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2292,"src":"1275:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:15"},"scope":2389,"src":"1216:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2367,"nodeType":"Block","src":"1603:347:15","statements":[{"assignments":[2303],"declarations":[{"constant":false,"id":2303,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:15","nodeType":"VariableDeclaration","scope":2367,"src":"1613:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2302,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2312,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2307,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"1649:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:15"},{"expression":{"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2313,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1670:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2315,"indexExpression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2318,"nodeType":"ExpressionStatement","src":"1670:15:15"},{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2319,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1695:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2321,"indexExpression":{"hexValue":"31","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2324,"nodeType":"ExpressionStatement","src":"1695:15:15"},{"body":{"id":2353,"nodeType":"Block","src":"1765:83:15","statements":[{"expression":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1779:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2341,"indexExpression":{"id":2340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"1786:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2342,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1791:8:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2346,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1800:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2348,"nodeType":"ExpressionStatement","src":"1779:33:15"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1826:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2352,"nodeType":"ExpressionStatement","src":"1826:11:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"1753:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2354,"initializationExpression":{"assignments":[2326],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"i","nameLocation":"1733:1:15","nodeType":"VariableDeclaration","scope":2354,"src":"1725:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2332,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2328,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"1741:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:15"},"loopExpression":{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:15","subExpression":{"id":2336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"1762:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ExpressionStatement","src":"1760:3:15"},"nodeType":"ForStatement","src":"1720:128:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"1865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"1857:55:15"},{"expression":{"arguments":[{"id":2364,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1936:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2362,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:15","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2301,"id":2366,"nodeType":"Return","src":"1922:21:15"}]},"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"1396:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2368,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:15","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"value","nameLocation":"1542:5:15","nodeType":"VariableDeclaration","scope":2368,"src":"1534:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2297,"mutability":"mutable","name":"length","nameLocation":"1557:6:15","nodeType":"VariableDeclaration","scope":2368,"src":"1549:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:15"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2368,"src":"1588:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2299,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:15"},"scope":2389,"src":"1513:437:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"2175:76:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2381,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2220:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2379,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:15","typeDescriptions":{}}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:15","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2384,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2228:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2376,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2292,2368,2388],"referencedDeclaration":2368,"src":"2192:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2375,"id":2386,"nodeType":"Return","src":"2185:59:15"}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"1956:141:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:15","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"addr","nameLocation":"2131:4:15","nodeType":"VariableDeclaration","scope":2388,"src":"2123:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:15"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"2160:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2373,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:15"},"scope":2389,"src":"2102:149:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2390,"src":"188:2065:15","usedErrors":[]}],"src":"101:2153:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2750],"Math":[3615],"Strings":[2389]},"id":2751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2391,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2751,"sourceUnit":2390,"src":"137:24:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"163:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2750,"linearizedBaseContracts":[2750],"name":"ECDSA","nameLocation":"377:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2399,"members":[{"id":2394,"name":"NoError","nameLocation":"417:7:16","nodeType":"EnumValue","src":"417:7:16"},{"id":2395,"name":"InvalidSignature","nameLocation":"434:16:16","nodeType":"EnumValue","src":"434:16:16"},{"id":2396,"name":"InvalidSignatureLength","nameLocation":"460:22:16","nodeType":"EnumValue","src":"460:22:16"},{"id":2397,"name":"InvalidSignatureS","nameLocation":"492:17:16","nodeType":"EnumValue","src":"492:17:16"},{"id":2398,"name":"InvalidSignatureV","nameLocation":"519:17:16","nodeType":"EnumValue","src":"519:17:16"}],"name":"RecoverError","nameLocation":"394:12:16","nodeType":"EnumDefinition","src":"389:175:16"},{"body":{"id":2442,"nodeType":"Block","src":"624:457:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"638:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2406,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"647:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"647:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"734:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2412,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"743:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"743:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2420,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"843:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2421,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"852:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"852:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"965:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2430,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"974:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"974:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2438,"nodeType":"IfStatement","src":"961:114:16","trueBody":{"id":2437,"nodeType":"Block","src":"1006:69:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2433,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2436,"nodeType":"ExpressionStatement","src":"1020:44:16"}]}},"id":2439,"nodeType":"IfStatement","src":"839:236:16","trueBody":{"id":2428,"nodeType":"Block","src":"889:66:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2424,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2427,"nodeType":"ExpressionStatement","src":"903:41:16"}]}},"id":2440,"nodeType":"IfStatement","src":"730:345:16","trueBody":{"id":2419,"nodeType":"Block","src":"774:59:16","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2415,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"788:34:16"}]}},"id":2441,"nodeType":"IfStatement","src":"634:441:16","trueBody":{"id":2410,"nodeType":"Block","src":"669:55:16","statements":[{"functionReturnParameters":2404,"id":2409,"nodeType":"Return","src":"683:7:16"}]}}]},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:16","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"error","nameLocation":"604:5:16","nodeType":"VariableDeclaration","scope":2443,"src":"591:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2401,"nodeType":"UserDefinedTypeName","pathNode":{"id":2400,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"591:12:16"},"referencedDeclaration":2399,"src":"591:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:16"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"624:0:16"},"scope":2750,"src":"570:511:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2488,"nodeType":"Block","src":"2249:626:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2456,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2263:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2486,"nodeType":"Block","src":"2788:81:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:16","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2482,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"2822:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"2822:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2455,"id":2485,"nodeType":"Return","src":"2802:56:16"}]},"id":2487,"nodeType":"IfStatement","src":"2259:610:16","trueBody":{"id":2477,"nodeType":"Block","src":"2287:495:16","statements":[{"assignments":[2461],"declarations":[{"constant":false,"id":2461,"mutability":"mutable","name":"r","nameLocation":"2309:1:16","nodeType":"VariableDeclaration","scope":2477,"src":"2301:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2462,"nodeType":"VariableDeclarationStatement","src":"2301:9:16"},{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"s","nameLocation":"2332:1:16","nodeType":"VariableDeclaration","scope":2477,"src":"2324:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2463,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2465,"nodeType":"VariableDeclarationStatement","src":"2324:9:16"},{"assignments":[2467],"declarations":[{"constant":false,"id":2467,"mutability":"mutable","name":"v","nameLocation":"2353:1:16","nodeType":"VariableDeclaration","scope":2477,"src":"2347:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2466,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2468,"nodeType":"VariableDeclarationStatement","src":"2347:7:16"},{"AST":{"nodeType":"YulBlock","src":"2555:171:16","statements":[{"nodeType":"YulAssignment","src":"2573:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:16"},"nodeType":"YulFunctionCall","src":"2584:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:16"},"nodeType":"YulFunctionCall","src":"2578:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:16"}]},{"nodeType":"YulAssignment","src":"2622:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:16"},"nodeType":"YulFunctionCall","src":"2633:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:16"},"nodeType":"YulFunctionCall","src":"2627:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:16"}]},{"nodeType":"YulAssignment","src":"2671:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:16"},"nodeType":"YulFunctionCall","src":"2690:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:16"},"nodeType":"YulFunctionCall","src":"2684:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:16"},"nodeType":"YulFunctionCall","src":"2676:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2461,"isOffset":false,"isSlot":false,"src":"2573:1:16","valueSize":1},{"declaration":2464,"isOffset":false,"isSlot":false,"src":"2622:1:16","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"2588:9:16","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"2637:9:16","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"2694:9:16","valueSize":1},{"declaration":2467,"isOffset":false,"isSlot":false,"src":"2671:1:16","valueSize":1}],"id":2469,"nodeType":"InlineAssembly","src":"2546:180:16"},{"expression":{"arguments":[{"id":2471,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"2757:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2472,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2763:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2473,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2766:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2474,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"2769:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2470,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2489,2563,2657],"referencedDeclaration":2657,"src":"2746:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2455,"id":2476,"nodeType":"Return","src":"2739:32:16"}]}}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"1087:1053:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:16","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"hash","nameLocation":"2173:4:16","nodeType":"VariableDeclaration","scope":2489,"src":"2165:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"signature","nameLocation":"2192:9:16","nodeType":"VariableDeclaration","scope":2489,"src":"2179:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2447,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:16"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"2226:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2450,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"2235:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"2235:12:16"},"referencedDeclaration":2399,"src":"2235:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:16"},"scope":2750,"src":"2145:730:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"3748:140:16","statements":[{"assignments":[2500,2503],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:16","nodeType":"VariableDeclaration","scope":2515,"src":"3759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"error","nameLocation":"3791:5:16","nodeType":"VariableDeclaration","scope":2515,"src":"3778:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2502,"nodeType":"UserDefinedTypeName","pathNode":{"id":2501,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"3778:12:16"},"referencedDeclaration":2399,"src":"3778:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2508,"initialValue":{"arguments":[{"id":2505,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"3811:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2506,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"3817:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2504,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2489,2563,2657],"referencedDeclaration":2489,"src":"3800:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:16"},{"expression":{"arguments":[{"id":2510,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3849:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}],"id":2509,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"3837:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2399_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2512,"nodeType":"ExpressionStatement","src":"3837:18:16"},{"expression":{"id":2513,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3872:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2498,"id":2514,"nodeType":"Return","src":"3865:16:16"}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"2881:775:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:16","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"hash","nameLocation":"3686:4:16","nodeType":"VariableDeclaration","scope":2516,"src":"3678:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"signature","nameLocation":"3705:9:16","nodeType":"VariableDeclaration","scope":2516,"src":"3692:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2493,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:16"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2516,"src":"3739:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:16"},"scope":2750,"src":"3661:227:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"4275:203:16","statements":[{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"s","nameLocation":"4293:1:16","nodeType":"VariableDeclaration","scope":2562,"src":"4285:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2539,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4297:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:16","typeDescriptions":{}}},"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:16"},{"assignments":[2541],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"v","nameLocation":"4393:1:16","nodeType":"VariableDeclaration","scope":2562,"src":"4387:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2540,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2554,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2546,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"4412:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:16","typeDescriptions":{}}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2542,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:16","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:16"},{"expression":{"arguments":[{"id":2556,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4457:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2557,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"4463:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2558,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"4466:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2559,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"4469:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2555,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2489,2563,2657],"referencedDeclaration":2657,"src":"4446:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2530,"id":2561,"nodeType":"Return","src":"4439:32:16"}]},"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"3894:243:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:16","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"hash","nameLocation":"4179:4:16","nodeType":"VariableDeclaration","scope":2563,"src":"4171:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"r","nameLocation":"4201:1:16","nodeType":"VariableDeclaration","scope":2563,"src":"4193:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"vs","nameLocation":"4220:2:16","nodeType":"VariableDeclaration","scope":2563,"src":"4212:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:16"},"returnParameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"4252:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"4261:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2528,"nodeType":"UserDefinedTypeName","pathNode":{"id":2527,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"4261:12:16"},"referencedDeclaration":2399,"src":"4261:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:16"},"scope":2750,"src":"4142:336:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2592,"nodeType":"Block","src":"4759:136:16","statements":[{"assignments":[2576,2579],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:16","nodeType":"VariableDeclaration","scope":2592,"src":"4770:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2575,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"error","nameLocation":"4802:5:16","nodeType":"VariableDeclaration","scope":2592,"src":"4789:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2578,"nodeType":"UserDefinedTypeName","pathNode":{"id":2577,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"4789:12:16"},"referencedDeclaration":2399,"src":"4789:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2585,"initialValue":{"arguments":[{"id":2581,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"4822:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2582,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"4828:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2583,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"4831:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2580,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2489,2563,2657],"referencedDeclaration":2563,"src":"4811:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:16"},{"expression":{"arguments":[{"id":2587,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"4856:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}],"id":2586,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"4844:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2399_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2589,"nodeType":"ExpressionStatement","src":"4844:18:16"},{"expression":{"id":2590,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"4879:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2574,"id":2591,"nodeType":"Return","src":"4872:16:16"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"4484:154:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2593,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:16","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"hash","nameLocation":"4677:4:16","nodeType":"VariableDeclaration","scope":2593,"src":"4669:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"r","nameLocation":"4699:1:16","nodeType":"VariableDeclaration","scope":2593,"src":"4691:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"vs","nameLocation":"4718:2:16","nodeType":"VariableDeclaration","scope":2593,"src":"4710:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:16"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2593,"src":"4750:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:16"},"scope":2750,"src":"4643:252:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"5218:1345:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2612,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6114:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:16","typeDescriptions":{}}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"nodeType":"IfStatement","src":"6102:161:16","trueBody":{"id":2624,"nodeType":"Block","src":"6187:76:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:16","typeDescriptions":{}}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2620,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"6221:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2397,"src":"6221:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"id":2622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2609,"id":2623,"nodeType":"Return","src":"6201:51:16"}]}},{"assignments":[2627],"declarations":[{"constant":false,"id":2627,"mutability":"mutable","name":"signer","nameLocation":"6365:6:16","nodeType":"VariableDeclaration","scope":2656,"src":"6357:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2626,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"id":2629,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"6384:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2630,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6390:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2631,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6393:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2632,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6396:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2628,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6412:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2636,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:16","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"IfStatement","src":"6408:101:16","trueBody":{"id":2649,"nodeType":"Block","src":"6434:75:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:16","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2645,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"6468:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2395,"src":"6468:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2609,"id":2648,"nodeType":"Return","src":"6448:50:16"}]}},{"expression":{"components":[{"id":2651,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"6527:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2652,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"6535:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2399_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"6535:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"id":2654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2609,"id":2655,"nodeType":"Return","src":"6519:37:16"}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"4901:163:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:16","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"hash","nameLocation":"5106:4:16","nodeType":"VariableDeclaration","scope":2657,"src":"5098:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"v","nameLocation":"5126:1:16","nodeType":"VariableDeclaration","scope":2657,"src":"5120:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2597,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"r","nameLocation":"5145:1:16","nodeType":"VariableDeclaration","scope":2657,"src":"5137:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"s","nameLocation":"5164:1:16","nodeType":"VariableDeclaration","scope":2657,"src":"5156:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:16"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"5195:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"5204:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2607,"nodeType":"UserDefinedTypeName","pathNode":{"id":2606,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"5204:12:16"},"referencedDeclaration":2399,"src":"5204:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:16"},"scope":2750,"src":"5069:1494:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"6828:138:16","statements":[{"assignments":[2672,2675],"declarations":[{"constant":false,"id":2672,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:16","nodeType":"VariableDeclaration","scope":2689,"src":"6839:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"error","nameLocation":"6871:5:16","nodeType":"VariableDeclaration","scope":2689,"src":"6858:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2399,"src":"6858:12:16"},"referencedDeclaration":2399,"src":"6858:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2682,"initialValue":{"arguments":[{"id":2677,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6891:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2678,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"6897:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2679,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"6900:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2680,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6903:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2676,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2489,2563,2657],"referencedDeclaration":2657,"src":"6880:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2399_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:16"},{"expression":{"arguments":[{"id":2684,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"6927:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2399","typeString":"enum ECDSA.RecoverError"}],"id":2683,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"6915:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2399_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2686,"nodeType":"ExpressionStatement","src":"6915:18:16"},{"expression":{"id":2687,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"6950:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2670,"id":2688,"nodeType":"Return","src":"6943:16:16"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"6569:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:16","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"hash","nameLocation":"6730:4:16","nodeType":"VariableDeclaration","scope":2690,"src":"6722:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"v","nameLocation":"6750:1:16","nodeType":"VariableDeclaration","scope":2690,"src":"6744:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2661,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"r","nameLocation":"6769:1:16","nodeType":"VariableDeclaration","scope":2690,"src":"6761:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"s","nameLocation":"6788:1:16","nodeType":"VariableDeclaration","scope":2690,"src":"6780:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:16"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2690,"src":"6819:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:16"},"scope":2750,"src":"6696:270:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2706,"nodeType":"Block","src":"7334:187:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2702,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"7508:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2699,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2698,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2697,"id":2705,"nodeType":"Return","src":"7438:76:16"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"6972:279:16","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:16","nodeType":"FunctionDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"hash","nameLocation":"7296:4:16","nodeType":"VariableDeclaration","scope":2707,"src":"7288:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:16"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2707,"src":"7325:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:16"},"scope":2750,"src":"7256:265:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"7886:116:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2721,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7981:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2719,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"7964:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2389_$","typeString":"type(library Strings)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2272,"src":"7964:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2724,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7992:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2716,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2715,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2714,"id":2727,"nodeType":"Return","src":"7896:99:16"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"7527:274:16","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:16","nodeType":"FunctionDefinition","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"s","nameLocation":"7851:1:16","nodeType":"VariableDeclaration","scope":2729,"src":"7838:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2709,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:16"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"7877:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:16"},"scope":2750,"src":"7806:196:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"8443:92:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2743,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"8499:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2744,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"8516:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2740,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2739,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2738,"id":2747,"nodeType":"Return","src":"8453:75:16"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"8008:328:16","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2749,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:16","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:16","nodeType":"VariableDeclaration","scope":2749,"src":"8366:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:16","nodeType":"VariableDeclaration","scope":2749,"src":"8391:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:16"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2749,"src":"8434:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:16"},"scope":2750,"src":"8341:194:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2751,"src":"369:8168:16","usedErrors":[]}],"src":"112:8426:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3615]},"id":3616,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2752,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3615,"linearizedBaseContracts":[3615],"name":"Math","nameLocation":"210:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2757,"members":[{"id":2754,"name":"Down","nameLocation":"245:4:17","nodeType":"EnumValue","src":"245:4:17"},{"id":2755,"name":"Up","nameLocation":"287:2:17","nodeType":"EnumValue","src":"287:2:17"},{"id":2756,"name":"Zero","nameLocation":"318:4:17","nodeType":"EnumValue","src":"318:4:17"}],"name":"Rounding","nameLocation":"226:8:17","nodeType":"EnumDefinition","src":"221:122:17"},{"body":{"id":2774,"nodeType":"Block","src":"480:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"497:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2768,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"501:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"509:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:17","trueExpression":{"id":2770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"505:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2766,"id":2773,"nodeType":"Return","src":"490:20:17"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"349:59:17","text":" @dev Returns the largest of two numbers."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:17","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"a","nameLocation":"434:1:17","nodeType":"VariableDeclaration","scope":2775,"src":"426:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"b","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":2775,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:17"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3615,"src":"413:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"655:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2785,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"672:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2786,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"676:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"684:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:17","trueExpression":{"id":2788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2784,"id":2791,"nodeType":"Return","src":"665:20:17"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"523:60:17","text":" @dev Returns the smallest of two numbers."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:17","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"a","nameLocation":"609:1:17","nodeType":"VariableDeclaration","scope":2793,"src":"601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"b","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":2793,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:17"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"646:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:17"},"scope":3615,"src":"588:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"876:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"935:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"941:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2802,"id":2814,"nodeType":"Return","src":"923:28:17"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"698:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:17","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"a","nameLocation":"830:1:17","nodeType":"VariableDeclaration","scope":2816,"src":"822:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"b","nameLocation":"841:1:17","nodeType":"VariableDeclaration","scope":2816,"src":"833:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:17"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"867:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:17"},"scope":3615,"src":"805:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2840,"nodeType":"Block","src":"1228:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2826,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"1316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"1330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"1339:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:17","trueExpression":{"hexValue":"30","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2825,"id":2839,"nodeType":"Return","src":"1309:35:17"}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"964:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2841,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:17","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"a","nameLocation":"1182:1:17","nodeType":"VariableDeclaration","scope":2841,"src":"1174:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"b","nameLocation":"1193:1:17","nodeType":"VariableDeclaration","scope":2841,"src":"1185:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:17"},"returnParameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2841,"src":"1219:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:17"},"scope":3615,"src":"1157:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"1795:3797:17","statements":[{"id":2961,"nodeType":"UncheckedBlock","src":"1805:3781:17","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:17","nodeType":"VariableDeclaration","scope":2961,"src":"2126:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2855,"nodeType":"VariableDeclarationStatement","src":"2126:13:17"},{"assignments":[2857],"declarations":[{"constant":false,"id":2857,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:17","nodeType":"VariableDeclaration","scope":2961,"src":"2198:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"nodeType":"VariableDeclarationStatement","src":"2198:13:17"},{"AST":{"nodeType":"YulBlock","src":"2278:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:17"},"nodeType":"YulFunctionCall","src":"2319:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:17"},"nodeType":"YulFunctionCall","src":"2306:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:17","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:17"},"nodeType":"YulFunctionCall","src":"2352:9:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:17"}]},{"nodeType":"YulAssignment","src":"2378:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:17"},"nodeType":"YulFunctionCall","src":"2391:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:17"},"nodeType":"YulFunctionCall","src":"2407:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:17"},"nodeType":"YulFunctionCall","src":"2387:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2854,"isOffset":false,"isSlot":false,"src":"2343:5:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"2399:5:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"2414:5:17","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"2378:5:17","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"2313:1:17","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"2356:1:17","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"2316:1:17","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"2359:1:17","valueSize":1}],"id":2859,"nodeType":"InlineAssembly","src":"2269:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"2516:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"nodeType":"IfStatement","src":"2512:75:17","trueBody":{"id":2867,"nodeType":"Block","src":"2528:59:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"2553:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2864,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"2561:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2852,"id":2866,"nodeType":"Return","src":"2546:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"2697:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2871,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"2711:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"ExpressionStatement","src":"2689:28:17"},{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:17","nodeType":"VariableDeclaration","scope":2961,"src":"2973:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2877,"nodeType":"VariableDeclarationStatement","src":"2973:17:17"},{"AST":{"nodeType":"YulBlock","src":"3013:291:17","statements":[{"nodeType":"YulAssignment","src":"3082:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:17"},"nodeType":"YulFunctionCall","src":"3095:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:17"}]},{"nodeType":"YulAssignment","src":"3202:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:17"},"nodeType":"YulFunctionCall","src":"3222:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:17"},"nodeType":"YulFunctionCall","src":"3211:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:17"}]},{"nodeType":"YulAssignment","src":"3260:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:17"},"nodeType":"YulFunctionCall","src":"3269:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2848,"isOffset":false,"isSlot":false,"src":"3108:11:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"3236:5:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"3260:5:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"3273:5:17","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"3202:5:17","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"3215:5:17","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"3082:9:17","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"3225:9:17","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"3280:9:17","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"3102:1:17","valueSize":1},{"declaration":2846,"isOffset":false,"isSlot":false,"src":"3105:1:17","valueSize":1}],"id":2878,"nodeType":"InlineAssembly","src":"3004:300:17"},{"assignments":[2880],"declarations":[{"constant":false,"id":2880,"mutability":"mutable","name":"twos","nameLocation":"3619:4:17","nodeType":"VariableDeclaration","scope":2961,"src":"3611:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2888,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3626:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:17","subExpression":{"id":2882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"3642:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:17"},{"AST":{"nodeType":"YulBlock","src":"3681:362:17","statements":[{"nodeType":"YulAssignment","src":"3746:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:17"},"nodeType":"YulFunctionCall","src":"3761:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:17"}]},{"nodeType":"YulAssignment","src":"3850:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:17"},"nodeType":"YulFunctionCall","src":"3859:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:17"}]},{"nodeType":"YulAssignment","src":"3990:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:17"},"nodeType":"YulFunctionCall","src":"4006:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:17"},"nodeType":"YulFunctionCall","src":"4002:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:17"},"nodeType":"YulFunctionCall","src":"3998:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2848,"isOffset":false,"isSlot":false,"src":"3746:11:17","valueSize":1},{"declaration":2848,"isOffset":false,"isSlot":false,"src":"3765:11:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"3850:5:17","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"3863:5:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"3778:4:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"3870:4:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"3990:4:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"4013:4:17","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"4020:4:17","valueSize":1}],"id":2889,"nodeType":"InlineAssembly","src":"3672:371:17"},{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4109:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"4118:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2892,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4126:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"4109:21:17"},{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:17","nodeType":"VariableDeclaration","scope":2961,"src":"4448:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2899,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4471:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:17"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4719:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2908,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4733:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"4704:36:17"},{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2913,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4773:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4788:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2916,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2920,"nodeType":"ExpressionStatement","src":"4773:36:17"},{"expression":{"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2921,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4843:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4858:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2928,"nodeType":"ExpressionStatement","src":"4843:36:17"},{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2929,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4913:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4928:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2932,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"4913:36:17"},{"expression":{"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"4983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2939,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4998:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2940,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2944,"nodeType":"ExpressionStatement","src":"4983:36:17"},{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"5069:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"5054:36:17"},{"expression":{"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"5524:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"5533:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2955,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"5541:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2958,"nodeType":"ExpressionStatement","src":"5524:24:17"},{"expression":{"id":2959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"5569:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2852,"id":2960,"nodeType":"Return","src":"5562:13:17"}]}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"1357:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:17","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"x","nameLocation":"1700:1:17","nodeType":"VariableDeclaration","scope":2963,"src":"1692:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"y","nameLocation":"1719:1:17","nodeType":"VariableDeclaration","scope":2963,"src":"1711:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:17","nodeType":"VariableDeclaration","scope":2963,"src":"1730:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:17"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"result","nameLocation":"1787:6:17","nodeType":"VariableDeclaration","scope":2963,"src":"1779:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:17"},"scope":3615,"src":"1667:3925:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"5872:189:17","statements":[{"assignments":[2979],"declarations":[{"constant":false,"id":2979,"mutability":"mutable","name":"result","nameLocation":"5890:6:17","nodeType":"VariableDeclaration","scope":3006,"src":"5882:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2985,"initialValue":{"arguments":[{"id":2981,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5906:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2982,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"5909:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2983,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"5912:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2980,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2963,3007],"referencedDeclaration":2963,"src":"5899:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"5938:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2987,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"5950:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2757_$","typeString":"type(enum Math.Rounding)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"5950:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"src":"5938:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5972:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"5975:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2993,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"5978:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2990,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"5934:98:17","trueBody":{"id":3002,"nodeType":"Block","src":"5996:36:17","statements":[{"expression":{"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"6010:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3001,"nodeType":"ExpressionStatement","src":"6010:11:17"}]}},{"expression":{"id":3004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"6048:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2977,"id":3005,"nodeType":"Return","src":"6041:13:17"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"5598:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:17","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"x","nameLocation":"5757:1:17","nodeType":"VariableDeclaration","scope":3007,"src":"5749:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"y","nameLocation":"5776:1:17","nodeType":"VariableDeclaration","scope":3007,"src":"5768:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:17","nodeType":"VariableDeclaration","scope":3007,"src":"5787:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:17","nodeType":"VariableDeclaration","scope":3007,"src":"5816:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"typeName":{"id":2972,"nodeType":"UserDefinedTypeName","pathNode":{"id":2971,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"5816:8:17"},"referencedDeclaration":2757,"src":"5816:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:17"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"5863:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:17"},"scope":3615,"src":"5724:337:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3118,"nodeType":"Block","src":"6337:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"6351:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3021,"nodeType":"IfStatement","src":"6347:45:17","trueBody":{"id":3020,"nodeType":"Block","src":"6359:33:17","statements":[{"expression":{"hexValue":"30","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3014,"id":3019,"nodeType":"Return","src":"6373:8:17"}]}},{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"result","nameLocation":"7079:6:17","nodeType":"VariableDeclaration","scope":3118,"src":"7071:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3032,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7099:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3287,3323],"referencedDeclaration":3287,"src":"7094:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:17"},{"id":3117,"nodeType":"UncheckedBlock","src":"7508:408:17","statements":[{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7532:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7542:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3036,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7555:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"7532:35:17"},{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7581:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7591:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7600:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7604:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3050,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"7581:35:17"},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7630:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7640:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7649:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3058,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"7630:35:17"},{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7689:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7698:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7702:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"7679:35:17"},{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3077,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7728:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7738:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7747:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3080,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7751:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3087,"nodeType":"ExpressionStatement","src":"7728:35:17"},{"expression":{"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7777:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7787:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7796:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7800:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3098,"nodeType":"ExpressionStatement","src":"7777:35:17"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7826:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7836:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3101,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7845:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7849:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"7826:35:17"},{"expression":{"arguments":[{"id":3111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7886:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7894:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"7898:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3110,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"7882:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3014,"id":3116,"nodeType":"Return","src":"7875:30:17"}]}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"6067:208:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:17","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"a","nameLocation":"6302:1:17","nodeType":"VariableDeclaration","scope":3119,"src":"6294:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:17"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3119,"src":"6328:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:17"},"scope":3615,"src":"6280:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3154,"nodeType":"Block","src":"8098:161:17","statements":[{"id":3153,"nodeType":"UncheckedBlock","src":"8108:145:17","statements":[{"assignments":[3131],"declarations":[{"constant":false,"id":3131,"mutability":"mutable","name":"result","nameLocation":"8140:6:17","nodeType":"VariableDeclaration","scope":3153,"src":"8132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3135,"initialValue":{"arguments":[{"id":3133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"8154:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3132,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3119,3155],"referencedDeclaration":3119,"src":"8149:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"8177:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"8187:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3138,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"8199:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2757_$","typeString":"type(enum Math.Rounding)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"8199:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"src":"8187:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"8214:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"8223:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"8232:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:17","trueExpression":{"hexValue":"31","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3129,"id":3152,"nodeType":"Return","src":"8170:72:17"}]}]},"documentation":{"id":3120,"nodeType":"StructuredDocumentation","src":"7928:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:17","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"a","nameLocation":"8044:1:17","nodeType":"VariableDeclaration","scope":3155,"src":"8036:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:17","nodeType":"VariableDeclaration","scope":3155,"src":"8047:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"typeName":{"id":3124,"nodeType":"UserDefinedTypeName","pathNode":{"id":3123,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"8047:8:17"},"referencedDeclaration":2757,"src":"8047:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:17"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3155,"src":"8089:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:17"},"scope":3615,"src":"8022:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"8444:922:17","statements":[{"assignments":[3164],"declarations":[{"constant":false,"id":3164,"mutability":"mutable","name":"result","nameLocation":"8462:6:17","nodeType":"VariableDeclaration","scope":3286,"src":"8454:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3166,"initialValue":{"hexValue":"30","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:17"},{"id":3283,"nodeType":"UncheckedBlock","src":"8482:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8510:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"nodeType":"IfStatement","src":"8506:99:17","trueBody":{"id":3180,"nodeType":"Block","src":"8528:77:17","statements":[{"expression":{"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8546:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ExpressionStatement","src":"8546:13:17"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"8577:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"8577:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8622:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3196,"nodeType":"IfStatement","src":"8618:96:17","trueBody":{"id":3195,"nodeType":"Block","src":"8639:75:17","statements":[{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8657:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"8657:12:17"},{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"8687:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"8687:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8731:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3211,"nodeType":"IfStatement","src":"8727:96:17","trueBody":{"id":3210,"nodeType":"Block","src":"8748:75:17","statements":[{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8766:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3205,"nodeType":"ExpressionStatement","src":"8766:12:17"},{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"8796:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ExpressionStatement","src":"8796:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8840:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3226,"nodeType":"IfStatement","src":"8836:96:17","trueBody":{"id":3225,"nodeType":"Block","src":"8857:75:17","statements":[{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8875:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"8875:12:17"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"8905:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"8905:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8949:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"IfStatement","src":"8945:93:17","trueBody":{"id":3240,"nodeType":"Block","src":"8965:73:17","statements":[{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"8983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"8983:11:17"},{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9012:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3239,"nodeType":"ExpressionStatement","src":"9012:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"9055:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3256,"nodeType":"IfStatement","src":"9051:93:17","trueBody":{"id":3255,"nodeType":"Block","src":"9071:73:17","statements":[{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"9089:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3250,"nodeType":"ExpressionStatement","src":"9089:11:17"},{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9118:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3254,"nodeType":"ExpressionStatement","src":"9118:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"9161:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"9157:93:17","trueBody":{"id":3270,"nodeType":"Block","src":"9177:73:17","statements":[{"expression":{"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"9195:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ExpressionStatement","src":"9195:11:17"},{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9224:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3269,"nodeType":"ExpressionStatement","src":"9224:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"9267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3282,"nodeType":"IfStatement","src":"9263:64:17","trueBody":{"id":3281,"nodeType":"Block","src":"9283:44:17","statements":[{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9301:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3280,"nodeType":"ExpressionStatement","src":"9301:11:17"}]}}]},{"expression":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9353:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3162,"id":3285,"nodeType":"Return","src":"9346:13:17"}]},"documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"8265:113:17","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:17","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"8405:5:17","nodeType":"VariableDeclaration","scope":3287,"src":"8397:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:17"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"8435:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:17"},"scope":3615,"src":"8383:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3322,"nodeType":"Block","src":"9599:165:17","statements":[{"id":3321,"nodeType":"UncheckedBlock","src":"9609:149:17","statements":[{"assignments":[3299],"declarations":[{"constant":false,"id":3299,"mutability":"mutable","name":"result","nameLocation":"9641:6:17","nodeType":"VariableDeclaration","scope":3321,"src":"9633:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3298,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"arguments":[{"id":3301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"9655:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3287,3323],"referencedDeclaration":3287,"src":"9650:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"9682:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3305,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9692:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3306,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"9704:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2757_$","typeString":"type(enum Math.Rounding)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"9704:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"src":"9692:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"9724:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"9733:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:17","trueExpression":{"hexValue":"31","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3297,"id":3320,"nodeType":"Return","src":"9675:72:17"}]}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"9372:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:17","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"value","nameLocation":"9541:5:17","nodeType":"VariableDeclaration","scope":3323,"src":"9533:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:17","nodeType":"VariableDeclaration","scope":3323,"src":"9548:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"typeName":{"id":3292,"nodeType":"UserDefinedTypeName","pathNode":{"id":3291,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"9548:8:17"},"referencedDeclaration":2757,"src":"9548:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:17"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"9590:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:17"},"scope":3615,"src":"9519:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3451,"nodeType":"Block","src":"9951:828:17","statements":[{"assignments":[3332],"declarations":[{"constant":false,"id":3332,"mutability":"mutable","name":"result","nameLocation":"9969:6:17","nodeType":"VariableDeclaration","scope":3451,"src":"9961:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3334,"initialValue":{"hexValue":"30","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:17"},{"id":3448,"nodeType":"UncheckedBlock","src":"9989:761:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10017:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3351,"nodeType":"IfStatement","src":"10013:99:17","trueBody":{"id":3350,"nodeType":"Block","src":"10034:78:17","statements":[{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10052:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3345,"nodeType":"ExpressionStatement","src":"10052:15:17"},{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3346,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10085:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"10085:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10129:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3368,"nodeType":"IfStatement","src":"10125:99:17","trueBody":{"id":3367,"nodeType":"Block","src":"10146:78:17","statements":[{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10164:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3362,"nodeType":"ExpressionStatement","src":"10164:15:17"},{"expression":{"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10197:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3366,"nodeType":"ExpressionStatement","src":"10197:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10241:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3385,"nodeType":"IfStatement","src":"10237:99:17","trueBody":{"id":3384,"nodeType":"Block","src":"10258:78:17","statements":[{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10276:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3379,"nodeType":"ExpressionStatement","src":"10276:15:17"},{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10309:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"10309:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10353:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"nodeType":"IfStatement","src":"10349:96:17","trueBody":{"id":3401,"nodeType":"Block","src":"10369:76:17","statements":[{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ExpressionStatement","src":"10387:14:17"},{"expression":{"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10419:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ExpressionStatement","src":"10419:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10462:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"10458:96:17","trueBody":{"id":3418,"nodeType":"Block","src":"10478:76:17","statements":[{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10496:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"10496:14:17"},{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10528:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"10528:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10571:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3436,"nodeType":"IfStatement","src":"10567:96:17","trueBody":{"id":3435,"nodeType":"Block","src":"10587:76:17","statements":[{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10605:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"10605:14:17"},{"expression":{"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10637:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3434,"nodeType":"ExpressionStatement","src":"10637:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"10680:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3447,"nodeType":"IfStatement","src":"10676:64:17","trueBody":{"id":3446,"nodeType":"Block","src":"10696:44:17","statements":[{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10714:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"10714:11:17"}]}}]},{"expression":{"id":3449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"10766:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3330,"id":3450,"nodeType":"Return","src":"10759:13:17"}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"9770:114:17","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3452,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:17","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"value","nameLocation":"9912:5:17","nodeType":"VariableDeclaration","scope":3452,"src":"9904:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:17"},"returnParameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3452,"src":"9942:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:17"},"scope":3615,"src":"9889:890:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"11014:165:17","statements":[{"id":3486,"nodeType":"UncheckedBlock","src":"11024:149:17","statements":[{"assignments":[3464],"declarations":[{"constant":false,"id":3464,"mutability":"mutable","name":"result","nameLocation":"11056:6:17","nodeType":"VariableDeclaration","scope":3486,"src":"11048:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3468,"initialValue":{"arguments":[{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"11071:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3465,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3452,3488],"referencedDeclaration":3452,"src":"11065:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"11098:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3470,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"11108:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3471,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"11120:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2757_$","typeString":"type(enum Math.Rounding)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"11120:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"src":"11108:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"11139:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"11148:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:17","trueExpression":{"hexValue":"31","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3462,"id":3485,"nodeType":"Return","src":"11091:71:17"}]}]},"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"10785:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:17","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"value","nameLocation":"10956:5:17","nodeType":"VariableDeclaration","scope":3488,"src":"10948:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:17","nodeType":"VariableDeclaration","scope":3488,"src":"10963:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"typeName":{"id":3457,"nodeType":"UserDefinedTypeName","pathNode":{"id":3456,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"10963:8:17"},"referencedDeclaration":2757,"src":"10963:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:17"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"11005:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:17"},"scope":3615,"src":"10933:246:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"11493:600:17","statements":[{"assignments":[3497],"declarations":[{"constant":false,"id":3497,"mutability":"mutable","name":"result","nameLocation":"11511:6:17","nodeType":"VariableDeclaration","scope":3574,"src":"11503:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3499,"initialValue":{"hexValue":"30","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:17"},{"id":3571,"nodeType":"UncheckedBlock","src":"11531:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11559:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3514,"nodeType":"IfStatement","src":"11555:98:17","trueBody":{"id":3513,"nodeType":"Block","src":"11577:76:17","statements":[{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11595:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ExpressionStatement","src":"11595:13:17"},{"expression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11626:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3512,"nodeType":"ExpressionStatement","src":"11626:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11670:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3529,"nodeType":"IfStatement","src":"11666:95:17","trueBody":{"id":3528,"nodeType":"Block","src":"11687:74:17","statements":[{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11705:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"11705:12:17"},{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11735:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"11735:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11778:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3544,"nodeType":"IfStatement","src":"11774:95:17","trueBody":{"id":3543,"nodeType":"Block","src":"11795:74:17","statements":[{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11813:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3538,"nodeType":"ExpressionStatement","src":"11813:12:17"},{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11843:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"11843:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11886:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"11882:95:17","trueBody":{"id":3558,"nodeType":"Block","src":"11903:74:17","statements":[{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11921:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ExpressionStatement","src":"11921:12:17"},{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"11951:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3557,"nodeType":"ExpressionStatement","src":"11951:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11994:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3570,"nodeType":"IfStatement","src":"11990:64:17","trueBody":{"id":3569,"nodeType":"Block","src":"12010:44:17","statements":[{"expression":{"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"12028:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3568,"nodeType":"ExpressionStatement","src":"12028:11:17"}]}}]},{"expression":{"id":3572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"12080:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3495,"id":3573,"nodeType":"Return","src":"12073:13:17"}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"11185:240:17","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:17","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"value","nameLocation":"11454:5:17","nodeType":"VariableDeclaration","scope":3575,"src":"11446:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:17"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"11484:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:17"},"scope":3615,"src":"11430:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3613,"nodeType":"Block","src":"12329:173:17","statements":[{"id":3612,"nodeType":"UncheckedBlock","src":"12339:157:17","statements":[{"assignments":[3587],"declarations":[{"constant":false,"id":3587,"mutability":"mutable","name":"result","nameLocation":"12371:6:17","nodeType":"VariableDeclaration","scope":3612,"src":"12363:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3591,"initialValue":{"arguments":[{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3588,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3575,3614],"referencedDeclaration":3575,"src":"12380:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"12414:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"12424:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3594,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"12436:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2757_$","typeString":"type(enum Math.Rounding)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"12436:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"src":"12424:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"12457:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12471:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:17","trueExpression":{"hexValue":"31","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3585,"id":3611,"nodeType":"Return","src":"12407:78:17"}]}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"12099:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:17","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"value","nameLocation":"12271:5:17","nodeType":"VariableDeclaration","scope":3614,"src":"12263:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:17","nodeType":"VariableDeclaration","scope":3614,"src":"12278:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"},"typeName":{"id":3580,"nodeType":"UserDefinedTypeName","pathNode":{"id":3579,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2757,"src":"12278:8:17"},"referencedDeclaration":2757,"src":"12278:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2757","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:17"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3614,"src":"12320:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:17"},"scope":3615,"src":"12247:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3616,"src":"202:12302:17","usedErrors":[]}],"src":"103:12402:17"},"id":17},"contracts/test/SampleRecipient.sol":{"ast":{"absolutePath":"contracts/test/SampleRecipient.sol","exportedSymbols":{"Address":[2154],"BaseAccount":[136],"ECDSA":[2750],"ERC1967Upgrade":[1529],"IAccount":[381],"IAggregator":[415],"IBeacon":[1539],"IERC1822Proxiable":[1211],"IEntryPoint":[613],"IStakeManager":[718],"Initializable":[1708],"Math":[3615],"SampleRecipient":[3652],"SimpleAccount":[1201],"StorageSlot":[2214],"Strings":[2389],"UUPSUpgradeable":[1824],"UserOperation":[743],"UserOperationLib":[848],"ValidationData":[145],"_intersectTimeRange":[289],"_packValidationData":[326,364],"_parseValidationData":[204]},"id":3653,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3617,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"31:23:18"},{"absolutePath":"@account-abstraction/contracts/samples/SimpleAccount.sol","file":"@account-abstraction/contracts/samples/SimpleAccount.sol","id":3618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3653,"sourceUnit":1202,"src":"178:66:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SampleRecipient","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3652,"linearizedBaseContracts":[3652],"name":"SampleRecipient","nameLocation":"255:15:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3621,"mutability":"mutable","name":"wallet","nameLocation":"292:6:18","nodeType":"VariableDeclaration","scope":3652,"src":"278:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"},"typeName":{"id":3620,"nodeType":"UserDefinedTypeName","pathNode":{"id":3619,"name":"SimpleAccount","nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"278:13:18"},"referencedDeclaration":1201,"src":"278:13:18","typeDescriptions":{"typeIdentifier":"t_contract$_SimpleAccount_$1201","typeString":"contract SimpleAccount"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"603c3fe9b00ecddbd86daa6cbfe9a7f26505792913b8d1dec79052d86b5f79df","id":3629,"name":"Sender","nameLocation":"311:6:18","nodeType":"EventDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"indexed":false,"mutability":"mutable","name":"txOrigin","nameLocation":"326:8:18","nodeType":"VariableDeclaration","scope":3629,"src":"318:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3625,"indexed":false,"mutability":"mutable","name":"msgSender","nameLocation":"344:9:18","nodeType":"VariableDeclaration","scope":3629,"src":"336:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3624,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3627,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"362:7:18","nodeType":"VariableDeclaration","scope":3629,"src":"355:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3626,"name":"string","nodeType":"ElementaryTypeName","src":"355:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"317:53:18"},"src":"305:66:18"},{"body":{"id":3642,"nodeType":"Block","src":"426:60:18","statements":[{"eventCall":{"arguments":[{"expression":{"id":3635,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"448:2:18","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"448:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3637,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"459:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"459:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3639,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"471:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3634,"name":"Sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"441:6:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,string memory)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"441:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3641,"nodeType":"EmitStatement","src":"436:43:18"}]},"functionSelector":"d1f9cf0e","id":3643,"implemented":true,"kind":"function","modifiers":[],"name":"something","nameLocation":"386:9:18","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"message","nameLocation":"410:7:18","nodeType":"VariableDeclaration","scope":3643,"src":"396:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3630,"name":"string","nodeType":"ElementaryTypeName","src":"396:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"395:23:18"},"returnParameters":{"id":3633,"nodeType":"ParameterList","parameters":[],"src":"426:0:18"},"scope":3652,"src":"377:109:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3650,"nodeType":"Block","src":"553:39:18","statements":[{"expression":{"arguments":[{"hexValue":"7465737420726576657274","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"571:13:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_361f81e2902bbc1f0825a5286e2eb4da3daa90a399f773830c77d1088b247403","typeString":"literal_string \"test revert\""},"value":"test revert"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_361f81e2902bbc1f0825a5286e2eb4da3daa90a399f773830c77d1088b247403","typeString":"literal_string \"test revert\""}],"id":3646,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"563:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"563:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"563:22:18"}]},"functionSelector":"25d9185c","id":3651,"implemented":true,"kind":"function","modifiers":[],"name":"reverting","nameLocation":"534:9:18","nodeType":"FunctionDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[],"src":"543:2:18"},"returnParameters":{"id":3645,"nodeType":"ParameterList","parameters":[],"src":"553:0:18"},"scope":3652,"src":"525:67:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3653,"src":"246:348:18","usedErrors":[]}],"src":"31:564:18"},"id":18},"contracts/test/SingletonFactory.sol":{"ast":{"absolutePath":"contracts/test/SingletonFactory.sol","exportedSymbols":{"SingletonFactory":[3668]},"id":3669,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":3654,"literals":["solidity","^","0.8",".15"],"nodeType":"PragmaDirective","src":"36:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SingletonFactory","contractDependencies":[],"contractKind":"contract","documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"62:243:19","text":" @title Singleton Factory (EIP-2470)\n @notice Exposes CREATE2 (EIP-1014) to deploy bytecode on deterministic addresses based on initialization code and salt.\n @author Ricardo Guilherme Schmidt (Status Research & Development GmbH)"},"fullyImplemented":true,"id":3668,"linearizedBaseContracts":[3668],"name":"SingletonFactory","nameLocation":"315:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3666,"nodeType":"Block","src":"726:125:19","statements":[{"AST":{"nodeType":"YulBlock","src":"745:100:19","statements":[{"nodeType":"YulAssignment","src":"759:76:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"786:1:19","type":"","value":"0"},{"arguments":[{"name":"_initCode","nodeType":"YulIdentifier","src":"793:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"804:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"789:3:19"},"nodeType":"YulFunctionCall","src":"789:20:19"},{"arguments":[{"name":"_initCode","nodeType":"YulIdentifier","src":"817:9:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"811:5:19"},"nodeType":"YulFunctionCall","src":"811:16:19"},{"name":"_salt","nodeType":"YulIdentifier","src":"829:5:19"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"778:7:19"},"nodeType":"YulFunctionCall","src":"778:57:19"},"variableNames":[{"name":"createdContract","nodeType":"YulIdentifier","src":"759:15:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3658,"isOffset":false,"isSlot":false,"src":"793:9:19","valueSize":1},{"declaration":3658,"isOffset":false,"isSlot":false,"src":"817:9:19","valueSize":1},{"declaration":3660,"isOffset":false,"isSlot":false,"src":"829:5:19","valueSize":1},{"declaration":3663,"isOffset":false,"isSlot":false,"src":"759:15:19","valueSize":1}],"id":3665,"nodeType":"InlineAssembly","src":"736:109:19"}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"338:267:19","text":" @notice Deploys `_initCode` using `_salt` for defining the deterministic address.\n @param _initCode Initialization code.\n @param _salt Arbitrary value to modify resulting address.\n @return createdContract Created contract address."},"functionSelector":"4af63f02","id":3667,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"619:6:19","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"_initCode","nameLocation":"639:9:19","nodeType":"VariableDeclaration","scope":3667,"src":"626:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3657,"name":"bytes","nodeType":"ElementaryTypeName","src":"626:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"_salt","nameLocation":"658:5:19","nodeType":"VariableDeclaration","scope":3667,"src":"650:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"650:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"625:39:19"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"createdContract","nameLocation":"705:15:19","nodeType":"VariableDeclaration","scope":3667,"src":"689:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"689:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"688:33:19"},"scope":3668,"src":"610:241:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3669,"src":"306:547:19","usedErrors":[]}],"src":"36:890:19"},"id":19}},"contracts":{"@account-abstraction/contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","nonce()":"affed0e0","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"nonce()\":{\"notice\":\"return the account nonce. subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"}},\"notice\":\"Basic account implementation. this contract provides the basic logic for implementing the IAccount interface  - validateUserOp specific account implementation should inherit it and provide the account-specific logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x73bc87e62dd54bc3d59d562fcaa3559f94ba606639fa6b96edde7eb4ce2eecd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4df277a04368858dfd3860d242a7caae265eca4bfafa650a60704462de339802\",\"dweb:/ipfs/QmW42jjQkjuQFEJK4wruykViS4rANorZA6i9Kd4nCwCBtv\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db3b8a0b7eb626df0082f8a5fa85bfbade5cf26e91c2068c902702161bb1286564736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTCODESIZE DUP11 SIGNEXTEND PUSH31 0xB626DF0082F8A5FA85BFBADE5CF26E91C2068C902702161BB1286564736F6C PUSH4 0x4300080F STOP CALLER ","sourceMap":"1589:1887:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1589:1887:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db3b8a0b7eb626df0082f8a5fa85bfbade5cf26e91c2068c902702161bb1286564736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTCODESIZE DUP11 SIGNEXTEND PUSH31 0xB626DF0082F8A5FA85BFBADE5CF26E91C2068C902702161BB1286564736F6C PUSH4 0x4300080F STOP CALLER ","sourceMap":"1589:1887:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]}},\"version\":1}"}},"@account-abstraction/contracts/samples/SimpleAccount.sol":{"SimpleAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"SimpleAccountInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"dest","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"func","type":"bytes"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dest","type":"address[]"},{"internalType":"bytes[]","name":"func","type":"bytes[]"}],"name":"executeBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"anOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDepositTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_926":{"entryPoint":null,"id":926,"parameterSlots":1,"returnSlots":0},"@_disableInitializers_1689":{"entryPoint":86,"id":1689,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$613_fromMemory":{"entryPoint":280,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:922:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"114:209:20","statements":[{"body":{"nodeType":"YulBlock","src":"160:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"169:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"172:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"162:6:20"},"nodeType":"YulFunctionCall","src":"162:12:20"},"nodeType":"YulExpressionStatement","src":"162:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"135:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"144:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"131:3:20"},"nodeType":"YulFunctionCall","src":"131:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"156:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"127:3:20"},"nodeType":"YulFunctionCall","src":"127:32:20"},"nodeType":"YulIf","src":"124:52:20"},{"nodeType":"YulVariableDeclaration","src":"185:29:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"204:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"198:5:20"},"nodeType":"YulFunctionCall","src":"198:16:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"189:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"277:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"286:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"289:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"279:6:20"},"nodeType":"YulFunctionCall","src":"279:12:20"},"nodeType":"YulExpressionStatement","src":"279:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"236:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"247:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"262:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"267:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"258:3:20"},"nodeType":"YulFunctionCall","src":"258:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"254:3:20"},"nodeType":"YulFunctionCall","src":"254:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"243:3:20"},"nodeType":"YulFunctionCall","src":"243:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"233:2:20"},"nodeType":"YulFunctionCall","src":"233:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"226:6:20"},"nodeType":"YulFunctionCall","src":"226:50:20"},"nodeType":"YulIf","src":"223:70:20"},{"nodeType":"YulAssignment","src":"302:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"312:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"302:6:20"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$613_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"80:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"91:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"103:6:20","type":""}],"src":"14:309:20"},{"body":{"nodeType":"YulBlock","src":"502:229:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"519:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"530:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"512:6:20"},"nodeType":"YulFunctionCall","src":"512:21:20"},"nodeType":"YulExpressionStatement","src":"512:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:20"},"nodeType":"YulFunctionCall","src":"549:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"569:2:20","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"542:6:20"},"nodeType":"YulFunctionCall","src":"542:30:20"},"nodeType":"YulExpressionStatement","src":"542:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"592:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"603:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"588:3:20"},"nodeType":"YulFunctionCall","src":"588:18:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"608:34:20","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"581:6:20"},"nodeType":"YulFunctionCall","src":"581:62:20"},"nodeType":"YulExpressionStatement","src":"581:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"663:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"674:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"659:3:20"},"nodeType":"YulFunctionCall","src":"659:18:20"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"679:9:20","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"652:6:20"},"nodeType":"YulFunctionCall","src":"652:37:20"},"nodeType":"YulExpressionStatement","src":"652:37:20"},{"nodeType":"YulAssignment","src":"698:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"710:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"721:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"706:3:20"},"nodeType":"YulFunctionCall","src":"706:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"698:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"479:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"493:4:20","type":""}],"src":"328:403:20"},{"body":{"nodeType":"YulBlock","src":"833:87:20","statements":[{"nodeType":"YulAssignment","src":"843:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"855:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"866:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"851:3:20"},"nodeType":"YulFunctionCall","src":"851:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"843:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"885:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"900:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"908:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"896:3:20"},"nodeType":"YulFunctionCall","src":"896:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"878:6:20"},"nodeType":"YulFunctionCall","src":"878:36:20"},"nodeType":"YulExpressionStatement","src":"878:36:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"802:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"813:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"824:4:20","type":""}],"src":"736:184:20"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$613_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052306080523480156200001557600080fd5b5060405162001a5538038062001a55833981016040819052620000389162000118565b6001600160a01b03811660a0526200004f62000056565b506200014a565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000116576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012b57600080fd5b81516001600160a01b03811681146200014357600080fd5b9392505050565b60805160a05161189f620001b660003960008181610203015281816104a201528181610523015281816107800152818161092b01528181610ba90152610e5c015260008181610386015281816103c6015281816105b4015281816105f40152610687015261189f6000f3fe6080604052600436106100c65760003560e01c806352d1902d1161007f578063b0d691fe11610059578063b0d691fe146101f4578063b61d27f614610227578063c399ec8814610247578063c4d66de81461025c57600080fd5b806352d1902d146101825780638da5cb5b14610197578063affed0e0146101d657600080fd5b806318dfb3c7146100d25780633659cfe6146100f45780633a871cdd146101145780634a58db19146101475780634d44560d1461014f5780634f1ef2861461016f57600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed3660046113ad565b61027c565b005b34801561010057600080fd5b506100f261010f36600461142e565b61037c565b34801561012057600080fd5b5061013461012f36600461144b565b61045b565b6040519081526020015b60405180910390f35b6100f26104a0565b34801561015b57600080fd5b506100f261016a36600461149f565b610519565b6100f261017d3660046114e1565b6105aa565b34801561018e57600080fd5b5061013461067a565b3480156101a357600080fd5b506001546101be90600160601b90046001600160a01b031681565b6040516001600160a01b03909116815260200161013e565b3480156101e257600080fd5b506001546001600160601b0316610134565b34801561020057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101be565b34801561023357600080fd5b506100f26102423660046115a5565b61072d565b34801561025357600080fd5b5061013461077c565b34801561026857600080fd5b506100f261027736600461142e565b61080e565b610284610920565b8281146102ce5760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b83811015610375576103638585838181106102ee576102ee61162e565b9050602002016020810190610303919061142e565b60008585858181106103175761031761162e565b90506020028101906103299190611644565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109b692505050565b8061036d816116a1565b9150506102d1565b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103c45760405162461bcd60e51b81526004016102c5906116ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661040d600080516020611823833981519152546001600160a01b031690565b6001600160a01b0316146104335760405162461bcd60e51b81526004016102c590611706565b61043c81610a26565b6040805160008082526020820190925261045891839190610a2e565b50565b6000610465610b9e565b61046f8484610c16565b905061047e6040850185611644565b90506000036104905761049084610cf2565b61049982610d86565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561050557600080fd5b505af1158015610375573d6000803e3d6000fd5b610521610dd3565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f25760405162461bcd60e51b81526004016102c5906116ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661063b600080516020611823833981519152546001600160a01b031690565b6001600160a01b0316146106615760405162461bcd60e51b81526004016102c590611706565b61066a82610a26565b61067682826001610a2e565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461071a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102c5565b5060008051602061182383398151915290565b610735610920565b610776848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109b692505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108099190611752565b905090565b600054610100900460ff161580801561082e5750600054600160ff909116105b806108485750303b158015610848575060005460ff166001145b6108ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102c5565b6000805460ff1916600117905580156108ce576000805461ff0019166101001790555b6108d782610e2b565b8015610676576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806109685750600154600160601b90046001600160a01b031633145b6109b45760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e7460448201526064016102c5565b565b600080846001600160a01b031684846040516109d29190611797565b60006040518083038185875af1925050503d8060008114610a0f576040519150601f19603f3d011682016040523d82523d6000602084013e610a14565b606091505b50915091508161037557805160208201fd5b610458610dd3565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a6657610a6183610ea8565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ac0575060408051601f3d908101601f19168201909252610abd91810190611752565b60015b610b235760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102c5565b6000805160206118238339815191528114610b925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102c5565b50610a61838383610f44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109b45760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016102c5565b600080610c70836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610cc0610c83610140860186611644565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508593925050610f699050565b600154600160601b90046001600160a01b03908116911614610ce6576001915050610cec565b60009150505b92915050565b600180546020830135916001600160601b03909116906000610d13836117b3565b91906101000a8154816001600160601b0302191690836001600160601b031602179055506001600160601b0316146104585760405162461bcd60e51b81526020600482015260166024820152756163636f756e743a20696e76616c6964206e6f6e636560501b60448201526064016102c5565b801561045857604051600090339060001990849084818181858888f193505050503d8060008114610375576040519150601f19603f3d011682016040523d82523d6000602084013e610375565b600154600160601b90046001600160a01b0316331480610df257503330145b6109b45760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016102c5565b600180546001600160601b0316600160601b6001600160a01b038481168202929092179283905560405192048116917f0000000000000000000000000000000000000000000000000000000000000000909116907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de90600090a350565b6001600160a01b0381163b610f155760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102c5565b60008051602061182383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f4d83610f8d565b600082511180610f5a5750805b15610a61576107768383610fcd565b6000806000610f788585610ff2565b91509150610f8581611037565b509392505050565b610f9681610ea8565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610499838360405180606001604052806027815260200161184360279139611181565b60008082516041036110285760208301516040840151606085015160001a61101c878285856111f9565b94509450505050611030565b506000905060025b9250929050565b600081600481111561104b5761104b6117d9565b036110535750565b6001816004811115611067576110676117d9565b036110b45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102c5565b60028160048111156110c8576110c86117d9565b036111155760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102c5565b6003816004811115611129576111296117d9565b036104585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102c5565b6060600080856001600160a01b03168560405161119e9190611797565b600060405180830381855af49150503d80600081146111d9576040519150601f19603f3d011682016040523d82523d6000602084013e6111de565b606091505b50915091506111ef868383876112bd565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561123057506000905060036112b4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611284573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112ad576000600192509250506112b4565b9150600090505b94509492505050565b6060831561132c578251600003611325576001600160a01b0385163b6113255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102c5565b5081611336565b611336838361133e565b949350505050565b81511561134e5781518083602001fd5b8060405162461bcd60e51b81526004016102c591906117ef565b60008083601f84011261137a57600080fd5b50813567ffffffffffffffff81111561139257600080fd5b6020830191508360208260051b850101111561103057600080fd5b600080600080604085870312156113c357600080fd5b843567ffffffffffffffff808211156113db57600080fd5b6113e788838901611368565b9096509450602087013591508082111561140057600080fd5b5061140d87828801611368565b95989497509550505050565b6001600160a01b038116811461045857600080fd5b60006020828403121561144057600080fd5b813561049981611419565b60008060006060848603121561146057600080fd5b833567ffffffffffffffff81111561147757600080fd5b8401610160818703121561148a57600080fd5b95602085013595506040909401359392505050565b600080604083850312156114b257600080fd5b82356114bd81611419565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114f457600080fd5b82356114ff81611419565b9150602083013567ffffffffffffffff8082111561151c57600080fd5b818501915085601f83011261153057600080fd5b813581811115611542576115426114cb565b604051601f8201601f19908116603f0116810190838211818310171561156a5761156a6114cb565b8160405282815288602084870101111561158357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080606085870312156115bb57600080fd5b84356115c681611419565b935060208501359250604085013567ffffffffffffffff808211156115ea57600080fd5b818701915087601f8301126115fe57600080fd5b81358181111561160d57600080fd5b88602082850101111561161f57600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261165b57600080fd5b83018035915067ffffffffffffffff82111561167657600080fd5b60200191503681900382131561103057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116b3576116b361168b565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561176457600080fd5b5051919050565b60005b8381101561178657818101518382015260200161176e565b838111156107765750506000910152565b600082516117a981846020870161176b565b9190910192915050565b60006001600160601b038083168181036117cf576117cf61168b565b6001019392505050565b634e487b7160e01b600052602160045260246000fd5b602081526000825180602084015261180e81604085016020870161176b565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220276ecd89bef2845599b898082f6b1082bfd319f26cc666eb19944cac491027c864736f6c634300080f0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A55 CODESIZE SUB DUP1 PUSH3 0x1A55 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x118 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 MSTORE PUSH3 0x4F PUSH3 0x56 JUMP JUMPDEST POP PUSH3 0x14A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH3 0x116 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x189F PUSH3 0x1B6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x203 ADD MSTORE DUP2 DUP2 PUSH2 0x4A2 ADD MSTORE DUP2 DUP2 PUSH2 0x523 ADD MSTORE DUP2 DUP2 PUSH2 0x780 ADD MSTORE DUP2 DUP2 PUSH2 0x92B ADD MSTORE DUP2 DUP2 PUSH2 0xBA9 ADD MSTORE PUSH2 0xE5C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x386 ADD MSTORE DUP2 DUP2 PUSH2 0x3C6 ADD MSTORE DUP2 DUP2 PUSH2 0x5B4 ADD MSTORE DUP2 DUP2 PUSH2 0x5F4 ADD MSTORE PUSH2 0x687 ADD MSTORE PUSH2 0x189F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xB0D691FE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x67A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x134 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH2 0x284 PUSH2 0x920 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x77726F6E67206172726179206C656E67746873 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH2 0x363 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9B6 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x36D DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x43C DUP2 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x458 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x46F DUP5 DUP5 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP PUSH2 0x47E PUSH1 0x40 DUP6 ADD DUP6 PUSH2 0x1644 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x490 JUMPI PUSH2 0x490 DUP5 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0x499 DUP3 PUSH2 0xD86 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x521 PUSH2 0xDD3 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x66A DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x676 DUP3 DUP3 PUSH1 0x1 PUSH2 0xA2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x776 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9B6 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x82E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x848 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x848 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8D7 DUP3 PUSH2 0xE2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x968 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x375 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x458 PUSH2 0xDD3 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA61 DUP4 PUSH2 0xEA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAC0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xABD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST POP PUSH2 0xA61 DUP4 DUP4 DUP4 PUSH2 0xF44 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC70 DUP4 PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0xCC0 PUSH2 0xC83 PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x1644 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0xF69 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 PUSH2 0xD13 DUP4 PUSH2 0x17B3 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND EQ PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6163636F756E743A20696E76616C6964206E6F6E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 NOT SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xDF2 JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DIV DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xF5A JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA61 JUMPI PUSH2 0x776 DUP4 DUP4 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF78 DUP6 DUP6 PUSH2 0xFF2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF85 DUP2 PUSH2 0x1037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF96 DUP2 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x499 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1843 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1028 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x101C DUP8 DUP3 DUP6 DUP6 PUSH2 0x11F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1030 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x1053 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1067 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1129 JUMPI PUSH2 0x1129 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11EF DUP7 DUP4 DUP4 DUP8 PUSH2 0x12BD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1230 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1284 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12AD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x132C JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST POP DUP2 PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x1336 DUP4 DUP4 PUSH2 0x133E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x134E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E7 DUP9 DUP4 DUP10 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140D DUP8 DUP3 DUP9 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x499 DUP2 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14BD DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14FF DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1542 JUMPI PUSH2 0x1542 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x14CB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x15C6 DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x165B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x168B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1786 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x176E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x776 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x17A9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x176B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x17CF JUMPI PUSH2 0x17CF PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x180E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122027 PUSH15 0xCD89BEF2845599B898082F6B1082BF 0xD3 NOT CALLCODE PUSH13 0xC666EB19944CAC491027C86473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"591:4436:7:-:0;;;1088:4:12;1045:48;;1555:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1603:26:7;;;;1639:22;:20;:22::i;:::-;1555:113;591:4436;;5906:279:11;5974:13;;;;;;;5973:14;5965:66;;;;-1:-1:-1;;;5965:66:11;;530:2:20;5965:66:11;;;512:21:20;569:2;549:18;;;542:30;608:34;588:18;;;581:62;-1:-1:-1;;;659:18:20;;;652:37;706:19;;5965:66:11;;;;;;;;6045:12;;6060:15;6045:12;;;:30;6041:138;;;6091:12;:30;;-1:-1:-1;;6091:30:11;6106:15;6091:30;;;;;;6140:28;;878:36:20;;;6140:28:11;;866:2:20;851:18;6140:28:11;;;;;;;6041:138;5906:279::o;14:309:20:-;103:6;156:2;144:9;135:7;131:23;127:32;124:52;;;172:1;169;162:12;124:52;198:16;;-1:-1:-1;;;;;243:31:20;;233:42;;223:70;;289:1;286;279:12;223:70;312:5;14:309;-1:-1:-1;;;14:309:20:o;736:184::-;591:4436:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_912":{"entryPoint":null,"id":912,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_1200":{"entryPoint":2598,"id":1200,"parameterSlots":1,"returnSlots":0},"@_call_1136":{"entryPoint":2486,"id":1136,"parameterSlots":3,"returnSlots":0},"@_getImplementation_1243":{"entryPoint":null,"id":1243,"parameterSlots":0,"returnSlots":1},"@_initialize_1040":{"entryPoint":3627,"id":1040,"parameterSlots":1,"returnSlots":0},"@_onlyOwner_946":{"entryPoint":3539,"id":946,"parameterSlots":0,"returnSlots":0},"@_payPrefund_135":{"entryPoint":3462,"id":135,"parameterSlots":1,"returnSlots":0},"@_requireFromEntryPointOrOwner_1061":{"entryPoint":2336,"id":1061,"parameterSlots":0,"returnSlots":0},"@_requireFromEntryPoint_84":{"entryPoint":2974,"id":84,"parameterSlots":0,"returnSlots":0},"@_revert_2153":{"entryPoint":4926,"id":2153,"parameterSlots":2,"returnSlots":0},"@_setImplementation_1267":{"entryPoint":3752,"id":1267,"parameterSlots":1,"returnSlots":0},"@_throwError_2443":{"entryPoint":4151,"id":2443,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_1365":{"entryPoint":2606,"id":1365,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCall_1312":{"entryPoint":3908,"id":1312,"parameterSlots":3,"returnSlots":0},"@_upgradeTo_1282":{"entryPoint":3981,"id":1282,"parameterSlots":1,"returnSlots":0},"@_validateAndUpdateNonce_1079":{"entryPoint":3314,"id":1079,"parameterSlots":1,"returnSlots":0},"@_validateSignature_1110":{"entryPoint":3094,"id":1110,"parameterSlots":2,"returnSlots":1},"@addDeposit_1169":{"entryPoint":1184,"id":1169,"parameterSlots":0,"returnSlots":0},"@entryPoint_908":{"entryPoint":null,"id":908,"parameterSlots":0,"returnSlots":1},"@executeBatch_1012":{"entryPoint":636,"id":1012,"parameterSlots":4,"returnSlots":0},"@execute_966":{"entryPoint":1837,"id":966,"parameterSlots":4,"returnSlots":0},"@functionDelegateCall_2041":{"entryPoint":4045,"id":2041,"parameterSlots":2,"returnSlots":1},"@functionDelegateCall_2070":{"entryPoint":4481,"id":2070,"parameterSlots":3,"returnSlots":1},"@getAddressSlot_2180":{"entryPoint":null,"id":2180,"parameterSlots":1,"returnSlots":1},"@getBooleanSlot_2191":{"entryPoint":null,"id":2191,"parameterSlots":1,"returnSlots":1},"@getDeposit_1152":{"entryPoint":1916,"id":1152,"parameterSlots":0,"returnSlots":1},"@initialize_1025":{"entryPoint":2062,"id":1025,"parameterSlots":1,"returnSlots":0},"@isContract_1842":{"entryPoint":null,"id":1842,"parameterSlots":1,"returnSlots":1},"@nonce_897":{"entryPoint":null,"id":897,"parameterSlots":0,"returnSlots":1},"@owner_870":{"entryPoint":null,"id":870,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_1774":{"entryPoint":1658,"id":1774,"parameterSlots":0,"returnSlots":1},"@recover_2516":{"entryPoint":3945,"id":2516,"parameterSlots":2,"returnSlots":1},"@toEthSignedMessageHash_2707":{"entryPoint":null,"id":2707,"parameterSlots":1,"returnSlots":1},"@tryRecover_2489":{"entryPoint":4082,"id":2489,"parameterSlots":2,"returnSlots":2},"@tryRecover_2657":{"entryPoint":4601,"id":2657,"parameterSlots":4,"returnSlots":2},"@upgradeToAndCall_1817":{"entryPoint":1450,"id":1817,"parameterSlots":2,"returnSlots":0},"@upgradeTo_1796":{"entryPoint":892,"id":1796,"parameterSlots":1,"returnSlots":0},"@validateUserOp_67":{"entryPoint":1115,"id":67,"parameterSlots":3,"returnSlots":1},"@verifyCallResultFromTarget_2109":{"entryPoint":4797,"id":2109,"parameterSlots":4,"returnSlots":1},"@withdrawDepositTo_1187":{"entryPoint":1305,"id":1187,"parameterSlots":2,"returnSlots":0},"abi_decode_array_address_dyn_calldata":{"entryPoint":4968,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":5166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":5279,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":5345,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":5541,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":5037,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_UserOperation_$743_calldata_ptrt_bytes32t_uint256":{"entryPoint":5195,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$613__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_470b5eb05ad46a916385e8f3d185e571bb4498eea99276dfa63667e9faf43873__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":5700,"id":null,"parameterSlots":2,"returnSlots":2},"copy_memory_to_memory":{"entryPoint":5995,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":5793,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint96":{"entryPoint":6067,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5771,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6105,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5678,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5323,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15431:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"98:283:20","statements":[{"body":{"nodeType":"YulBlock","src":"147:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"149:6:20"},"nodeType":"YulFunctionCall","src":"149:12:20"},"nodeType":"YulExpressionStatement","src":"149:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"126:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"134:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"122:3:20"},"nodeType":"YulFunctionCall","src":"122:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"141:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"118:3:20"},"nodeType":"YulFunctionCall","src":"118:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"111:6:20"},"nodeType":"YulFunctionCall","src":"111:35:20"},"nodeType":"YulIf","src":"108:55:20"},{"nodeType":"YulAssignment","src":"172:30:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"195:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"182:12:20"},"nodeType":"YulFunctionCall","src":"182:20:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"172:6:20"}]},{"body":{"nodeType":"YulBlock","src":"245:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"257:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"247:6:20"},"nodeType":"YulFunctionCall","src":"247:12:20"},"nodeType":"YulExpressionStatement","src":"247:12:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"217:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"225:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"214:2:20"},"nodeType":"YulFunctionCall","src":"214:30:20"},"nodeType":"YulIf","src":"211:50:20"},{"nodeType":"YulAssignment","src":"270:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"286:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"294:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"282:3:20"},"nodeType":"YulFunctionCall","src":"282:17:20"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"270:8:20"}]},{"body":{"nodeType":"YulBlock","src":"359:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"368:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"371:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"361:6:20"},"nodeType":"YulFunctionCall","src":"361:12:20"},"nodeType":"YulExpressionStatement","src":"361:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"322:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:1:20","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"337:6:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:20"},"nodeType":"YulFunctionCall","src":"330:14:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"318:3:20"},"nodeType":"YulFunctionCall","src":"318:27:20"},{"kind":"number","nodeType":"YulLiteral","src":"347:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"314:3:20"},"nodeType":"YulFunctionCall","src":"314:38:20"},{"name":"end","nodeType":"YulIdentifier","src":"354:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"311:2:20"},"nodeType":"YulFunctionCall","src":"311:47:20"},"nodeType":"YulIf","src":"308:67:20"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"61:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"69:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"77:8:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"87:6:20","type":""}],"src":"14:367:20"},{"body":{"nodeType":"YulBlock","src":"554:616:20","statements":[{"body":{"nodeType":"YulBlock","src":"600:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"609:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"602:6:20"},"nodeType":"YulFunctionCall","src":"602:12:20"},"nodeType":"YulExpressionStatement","src":"602:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"575:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"584:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"571:3:20"},"nodeType":"YulFunctionCall","src":"571:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"596:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"567:3:20"},"nodeType":"YulFunctionCall","src":"567:32:20"},"nodeType":"YulIf","src":"564:52:20"},{"nodeType":"YulVariableDeclaration","src":"625:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"652:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"639:12:20"},"nodeType":"YulFunctionCall","src":"639:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"629:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"671:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"681:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"675:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"726:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"735:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"738:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"728:6:20"},"nodeType":"YulFunctionCall","src":"728:12:20"},"nodeType":"YulExpressionStatement","src":"728:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"714:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"722:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"711:2:20"},"nodeType":"YulFunctionCall","src":"711:14:20"},"nodeType":"YulIf","src":"708:34:20"},{"nodeType":"YulVariableDeclaration","src":"751:96:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"819:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"830:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"815:3:20"},"nodeType":"YulFunctionCall","src":"815:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"839:7:20"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"777:37:20"},"nodeType":"YulFunctionCall","src":"777:70:20"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"755:8:20","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"765:8:20","type":""}]},{"nodeType":"YulAssignment","src":"856:18:20","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"866:8:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"856:6:20"}]},{"nodeType":"YulAssignment","src":"883:18:20","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"893:8:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"883:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"910:48:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"943:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"954:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"939:3:20"},"nodeType":"YulFunctionCall","src":"939:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"926:12:20"},"nodeType":"YulFunctionCall","src":"926:32:20"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"914:8:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"987:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"996:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"989:6:20"},"nodeType":"YulFunctionCall","src":"989:12:20"},"nodeType":"YulExpressionStatement","src":"989:12:20"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"973:8:20"},{"name":"_1","nodeType":"YulIdentifier","src":"983:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"970:2:20"},"nodeType":"YulFunctionCall","src":"970:16:20"},"nodeType":"YulIf","src":"967:36:20"},{"nodeType":"YulVariableDeclaration","src":"1012:98:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1080:9:20"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1091:8:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1076:3:20"},"nodeType":"YulFunctionCall","src":"1076:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1102:7:20"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"1038:37:20"},"nodeType":"YulFunctionCall","src":"1038:72:20"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"1016:8:20","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"1026:8:20","type":""}]},{"nodeType":"YulAssignment","src":"1119:18:20","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"1129:8:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1119:6:20"}]},{"nodeType":"YulAssignment","src":"1146:18:20","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1156:8:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1146:6:20"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"496:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"507:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"519:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"527:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"535:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"543:6:20","type":""}],"src":"386:784:20"},{"body":{"nodeType":"YulBlock","src":"1220:86:20","statements":[{"body":{"nodeType":"YulBlock","src":"1284:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1293:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1296:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1286:6:20"},"nodeType":"YulFunctionCall","src":"1286:12:20"},"nodeType":"YulExpressionStatement","src":"1286:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1243:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1254:5:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1269:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1274:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1265:3:20"},"nodeType":"YulFunctionCall","src":"1265:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1278:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1261:3:20"},"nodeType":"YulFunctionCall","src":"1261:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1250:3:20"},"nodeType":"YulFunctionCall","src":"1250:31:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1240:2:20"},"nodeType":"YulFunctionCall","src":"1240:42:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1233:6:20"},"nodeType":"YulFunctionCall","src":"1233:50:20"},"nodeType":"YulIf","src":"1230:70:20"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1209:5:20","type":""}],"src":"1175:131:20"},{"body":{"nodeType":"YulBlock","src":"1381:177:20","statements":[{"body":{"nodeType":"YulBlock","src":"1427:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1436:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1439:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1429:6:20"},"nodeType":"YulFunctionCall","src":"1429:12:20"},"nodeType":"YulExpressionStatement","src":"1429:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1402:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1411:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1398:3:20"},"nodeType":"YulFunctionCall","src":"1398:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1423:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1394:3:20"},"nodeType":"YulFunctionCall","src":"1394:32:20"},"nodeType":"YulIf","src":"1391:52:20"},{"nodeType":"YulVariableDeclaration","src":"1452:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1465:12:20"},"nodeType":"YulFunctionCall","src":"1465:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1456:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1522:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1497:24:20"},"nodeType":"YulFunctionCall","src":"1497:31:20"},"nodeType":"YulExpressionStatement","src":"1497:31:20"},{"nodeType":"YulAssignment","src":"1537:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"1547:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1537:6:20"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1347:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1358:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1370:6:20","type":""}],"src":"1311:247:20"},{"body":{"nodeType":"YulBlock","src":"1699:392:20","statements":[{"body":{"nodeType":"YulBlock","src":"1745:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1754:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1757:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1747:6:20"},"nodeType":"YulFunctionCall","src":"1747:12:20"},"nodeType":"YulExpressionStatement","src":"1747:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1720:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1729:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1716:3:20"},"nodeType":"YulFunctionCall","src":"1716:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"1741:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1712:3:20"},"nodeType":"YulFunctionCall","src":"1712:32:20"},"nodeType":"YulIf","src":"1709:52:20"},{"nodeType":"YulVariableDeclaration","src":"1770:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1797:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1784:12:20"},"nodeType":"YulFunctionCall","src":"1784:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1774:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1850:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1862:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1852:6:20"},"nodeType":"YulFunctionCall","src":"1852:12:20"},"nodeType":"YulExpressionStatement","src":"1852:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"1830:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1819:2:20"},"nodeType":"YulFunctionCall","src":"1819:30:20"},"nodeType":"YulIf","src":"1816:50:20"},{"nodeType":"YulVariableDeclaration","src":"1875:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1889:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"1900:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:20"},"nodeType":"YulFunctionCall","src":"1885:22:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1879:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1946:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1955:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1958:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1948:6:20"},"nodeType":"YulFunctionCall","src":"1948:12:20"},"nodeType":"YulExpressionStatement","src":"1948:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1927:7:20"},{"name":"_1","nodeType":"YulIdentifier","src":"1936:2:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1923:3:20"},"nodeType":"YulFunctionCall","src":"1923:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"1941:3:20","type":"","value":"352"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1919:3:20"},"nodeType":"YulFunctionCall","src":"1919:26:20"},"nodeType":"YulIf","src":"1916:46:20"},{"nodeType":"YulAssignment","src":"1971:12:20","value":{"name":"_1","nodeType":"YulIdentifier","src":"1981:2:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:20"}]},{"nodeType":"YulAssignment","src":"1992:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2030:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:20"},"nodeType":"YulFunctionCall","src":"2015:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2002:12:20"},"nodeType":"YulFunctionCall","src":"2002:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1992:6:20"}]},{"nodeType":"YulAssignment","src":"2043:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2081:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2066:3:20"},"nodeType":"YulFunctionCall","src":"2066:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2053:12:20"},"nodeType":"YulFunctionCall","src":"2053:32:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2043:6:20"}]}]},"name":"abi_decode_tuple_t_struct$_UserOperation_$743_calldata_ptrt_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1649:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1660:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1672:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1680:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1688:6:20","type":""}],"src":"1563:528:20"},{"body":{"nodeType":"YulBlock","src":"2197:76:20","statements":[{"nodeType":"YulAssignment","src":"2207:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2219:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2230:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2215:3:20"},"nodeType":"YulFunctionCall","src":"2215:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2207:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2249:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"2260:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2242:6:20"},"nodeType":"YulFunctionCall","src":"2242:25:20"},"nodeType":"YulExpressionStatement","src":"2242:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2166:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2177:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2188:4:20","type":""}],"src":"2096:177:20"},{"body":{"nodeType":"YulBlock","src":"2373:228:20","statements":[{"body":{"nodeType":"YulBlock","src":"2419:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2428:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2431:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2421:6:20"},"nodeType":"YulFunctionCall","src":"2421:12:20"},"nodeType":"YulExpressionStatement","src":"2421:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2394:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2403:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2390:3:20"},"nodeType":"YulFunctionCall","src":"2390:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2415:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2386:3:20"},"nodeType":"YulFunctionCall","src":"2386:32:20"},"nodeType":"YulIf","src":"2383:52:20"},{"nodeType":"YulVariableDeclaration","src":"2444:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2470:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2457:12:20"},"nodeType":"YulFunctionCall","src":"2457:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2448:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2514:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2489:24:20"},"nodeType":"YulFunctionCall","src":"2489:31:20"},"nodeType":"YulExpressionStatement","src":"2489:31:20"},{"nodeType":"YulAssignment","src":"2529:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2539:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2529:6:20"}]},{"nodeType":"YulAssignment","src":"2553:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2580:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2591:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2576:3:20"},"nodeType":"YulFunctionCall","src":"2576:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2563:12:20"},"nodeType":"YulFunctionCall","src":"2563:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2553:6:20"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2331:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2342:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2354:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2362:6:20","type":""}],"src":"2278:323:20"},{"body":{"nodeType":"YulBlock","src":"2638:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2655:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2662:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2667:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2658:3:20"},"nodeType":"YulFunctionCall","src":"2658:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2648:6:20"},"nodeType":"YulFunctionCall","src":"2648:31:20"},"nodeType":"YulExpressionStatement","src":"2648:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2695:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2688:6:20"},"nodeType":"YulFunctionCall","src":"2688:15:20"},"nodeType":"YulExpressionStatement","src":"2688:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2722:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2712:6:20"},"nodeType":"YulFunctionCall","src":"2712:15:20"},"nodeType":"YulExpressionStatement","src":"2712:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2606:127:20"},{"body":{"nodeType":"YulBlock","src":"2834:960:20","statements":[{"body":{"nodeType":"YulBlock","src":"2880:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2889:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2892:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2882:6:20"},"nodeType":"YulFunctionCall","src":"2882:12:20"},"nodeType":"YulExpressionStatement","src":"2882:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2855:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2864:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2851:3:20"},"nodeType":"YulFunctionCall","src":"2851:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2876:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2847:3:20"},"nodeType":"YulFunctionCall","src":"2847:32:20"},"nodeType":"YulIf","src":"2844:52:20"},{"nodeType":"YulVariableDeclaration","src":"2905:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2931:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2918:12:20"},"nodeType":"YulFunctionCall","src":"2918:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2909:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2975:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2950:24:20"},"nodeType":"YulFunctionCall","src":"2950:31:20"},"nodeType":"YulExpressionStatement","src":"2950:31:20"},{"nodeType":"YulAssignment","src":"2990:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"3000:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2990:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"3014:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3045:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3056:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:20"},"nodeType":"YulFunctionCall","src":"3041:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3028:12:20"},"nodeType":"YulFunctionCall","src":"3028:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3018:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3069:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"3079:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3073:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3124:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3133:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3136:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3126:6:20"},"nodeType":"YulFunctionCall","src":"3126:12:20"},"nodeType":"YulExpressionStatement","src":"3126:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3112:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3120:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3109:2:20"},"nodeType":"YulFunctionCall","src":"3109:14:20"},"nodeType":"YulIf","src":"3106:34:20"},{"nodeType":"YulVariableDeclaration","src":"3149:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3163:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"3174:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3159:3:20"},"nodeType":"YulFunctionCall","src":"3159:22:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3153:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3229:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3238:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3231:6:20"},"nodeType":"YulFunctionCall","src":"3231:12:20"},"nodeType":"YulExpressionStatement","src":"3231:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3208:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"3212:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:20"},"nodeType":"YulFunctionCall","src":"3204:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3219:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3200:3:20"},"nodeType":"YulFunctionCall","src":"3200:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:20"},"nodeType":"YulFunctionCall","src":"3193:35:20"},"nodeType":"YulIf","src":"3190:55:20"},{"nodeType":"YulVariableDeclaration","src":"3254:26:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3277:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3264:12:20"},"nodeType":"YulFunctionCall","src":"3264:16:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3258:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3303:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3305:16:20"},"nodeType":"YulFunctionCall","src":"3305:18:20"},"nodeType":"YulExpressionStatement","src":"3305:18:20"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3295:2:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3299:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3292:2:20"},"nodeType":"YulFunctionCall","src":"3292:10:20"},"nodeType":"YulIf","src":"3289:36:20"},{"nodeType":"YulVariableDeclaration","src":"3334:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3348:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3344:3:20"},"nodeType":"YulFunctionCall","src":"3344:7:20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3338:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3360:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3374:5:20"},"nodeType":"YulFunctionCall","src":"3374:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3364:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3392:71:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3414:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"3438:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"3442:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3434:3:20"},"nodeType":"YulFunctionCall","src":"3434:13:20"},{"name":"_4","nodeType":"YulIdentifier","src":"3449:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3430:3:20"},"nodeType":"YulFunctionCall","src":"3430:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"3454:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3426:3:20"},"nodeType":"YulFunctionCall","src":"3426:31:20"},{"name":"_4","nodeType":"YulIdentifier","src":"3459:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3422:3:20"},"nodeType":"YulFunctionCall","src":"3422:40:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3410:3:20"},"nodeType":"YulFunctionCall","src":"3410:53:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3396:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"3522:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3524:16:20"},"nodeType":"YulFunctionCall","src":"3524:18:20"},"nodeType":"YulExpressionStatement","src":"3524:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3481:10:20"},{"name":"_1","nodeType":"YulIdentifier","src":"3493:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3478:2:20"},"nodeType":"YulFunctionCall","src":"3478:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3501:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3513:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3498:2:20"},"nodeType":"YulFunctionCall","src":"3498:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3475:2:20"},"nodeType":"YulFunctionCall","src":"3475:46:20"},"nodeType":"YulIf","src":"3472:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3564:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:20"},"nodeType":"YulFunctionCall","src":"3553:22:20"},"nodeType":"YulExpressionStatement","src":"3553:22:20"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3591:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"3599:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3584:6:20"},"nodeType":"YulFunctionCall","src":"3584:18:20"},"nodeType":"YulExpressionStatement","src":"3584:18:20"},{"body":{"nodeType":"YulBlock","src":"3648:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3657:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3660:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3650:6:20"},"nodeType":"YulFunctionCall","src":"3650:12:20"},"nodeType":"YulExpressionStatement","src":"3650:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3625:2:20"},{"name":"_3","nodeType":"YulIdentifier","src":"3629:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:20"},"nodeType":"YulFunctionCall","src":"3621:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"3634:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3617:3:20"},"nodeType":"YulFunctionCall","src":"3617:20:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3639:7:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3614:2:20"},"nodeType":"YulFunctionCall","src":"3614:33:20"},"nodeType":"YulIf","src":"3611:53:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3690:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3698:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:20"},"nodeType":"YulFunctionCall","src":"3686:15:20"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3707:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3703:3:20"},"nodeType":"YulFunctionCall","src":"3703:11:20"},{"name":"_3","nodeType":"YulIdentifier","src":"3716:2:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3673:12:20"},"nodeType":"YulFunctionCall","src":"3673:46:20"},"nodeType":"YulExpressionStatement","src":"3673:46:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3743:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"3751:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3739:3:20"},"nodeType":"YulFunctionCall","src":"3739:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"3756:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3735:3:20"},"nodeType":"YulFunctionCall","src":"3735:24:20"},{"kind":"number","nodeType":"YulLiteral","src":"3761:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3728:6:20"},"nodeType":"YulFunctionCall","src":"3728:35:20"},"nodeType":"YulExpressionStatement","src":"3728:35:20"},{"nodeType":"YulAssignment","src":"3772:16:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3782:6:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3772:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2792:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2803:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2815:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2823:6:20","type":""}],"src":"2738:1056:20"},{"body":{"nodeType":"YulBlock","src":"3900:76:20","statements":[{"nodeType":"YulAssignment","src":"3910:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3922:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3933:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3918:3:20"},"nodeType":"YulFunctionCall","src":"3918:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3910:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3952:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"3963:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3945:6:20"},"nodeType":"YulFunctionCall","src":"3945:25:20"},"nodeType":"YulExpressionStatement","src":"3945:25:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3869:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3880:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3891:4:20","type":""}],"src":"3799:177:20"},{"body":{"nodeType":"YulBlock","src":"4082:102:20","statements":[{"nodeType":"YulAssignment","src":"4092:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4104:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4115:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4100:3:20"},"nodeType":"YulFunctionCall","src":"4100:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4092:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4134:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4149:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4165:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4170:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4161:3:20"},"nodeType":"YulFunctionCall","src":"4161:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"4174:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4157:3:20"},"nodeType":"YulFunctionCall","src":"4157:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4145:3:20"},"nodeType":"YulFunctionCall","src":"4145:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4127:6:20"},"nodeType":"YulFunctionCall","src":"4127:51:20"},"nodeType":"YulExpressionStatement","src":"4127:51:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4051:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4062:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4073:4:20","type":""}],"src":"3981:203:20"},{"body":{"nodeType":"YulBlock","src":"4309:102:20","statements":[{"nodeType":"YulAssignment","src":"4319:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4331:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4327:3:20"},"nodeType":"YulFunctionCall","src":"4327:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4319:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4361:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4376:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4392:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4397:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4388:3:20"},"nodeType":"YulFunctionCall","src":"4388:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"4401:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4384:3:20"},"nodeType":"YulFunctionCall","src":"4384:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4372:3:20"},"nodeType":"YulFunctionCall","src":"4372:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4354:6:20"},"nodeType":"YulFunctionCall","src":"4354:51:20"},"nodeType":"YulExpressionStatement","src":"4354:51:20"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$613__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4278:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4289:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4300:4:20","type":""}],"src":"4189:222:20"},{"body":{"nodeType":"YulBlock","src":"4539:671:20","statements":[{"body":{"nodeType":"YulBlock","src":"4585:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4594:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4597:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4587:6:20"},"nodeType":"YulFunctionCall","src":"4587:12:20"},"nodeType":"YulExpressionStatement","src":"4587:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4560:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4556:3:20"},"nodeType":"YulFunctionCall","src":"4556:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4581:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4552:3:20"},"nodeType":"YulFunctionCall","src":"4552:32:20"},"nodeType":"YulIf","src":"4549:52:20"},{"nodeType":"YulVariableDeclaration","src":"4610:36:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4636:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4623:12:20"},"nodeType":"YulFunctionCall","src":"4623:23:20"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4614:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4680:5:20"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4655:24:20"},"nodeType":"YulFunctionCall","src":"4655:31:20"},"nodeType":"YulExpressionStatement","src":"4655:31:20"},{"nodeType":"YulAssignment","src":"4695:15:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4705:5:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4695:6:20"}]},{"nodeType":"YulAssignment","src":"4719:42:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4757:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:20"},"nodeType":"YulFunctionCall","src":"4742:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4729:12:20"},"nodeType":"YulFunctionCall","src":"4729:32:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4719:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"4770:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4801:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4812:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4797:3:20"},"nodeType":"YulFunctionCall","src":"4797:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4784:12:20"},"nodeType":"YulFunctionCall","src":"4784:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4774:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4825:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4835:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4829:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4880:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4889:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4892:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4882:6:20"},"nodeType":"YulFunctionCall","src":"4882:12:20"},"nodeType":"YulExpressionStatement","src":"4882:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4868:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"4876:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4865:2:20"},"nodeType":"YulFunctionCall","src":"4865:14:20"},"nodeType":"YulIf","src":"4862:34:20"},{"nodeType":"YulVariableDeclaration","src":"4905:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4919:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4930:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4915:3:20"},"nodeType":"YulFunctionCall","src":"4915:22:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4909:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"4985:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4994:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4997:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4987:6:20"},"nodeType":"YulFunctionCall","src":"4987:12:20"},"nodeType":"YulExpressionStatement","src":"4987:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4964:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"4968:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4960:3:20"},"nodeType":"YulFunctionCall","src":"4960:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4975:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4956:3:20"},"nodeType":"YulFunctionCall","src":"4956:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4949:6:20"},"nodeType":"YulFunctionCall","src":"4949:35:20"},"nodeType":"YulIf","src":"4946:55:20"},{"nodeType":"YulVariableDeclaration","src":"5010:30:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5037:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5024:12:20"},"nodeType":"YulFunctionCall","src":"5024:16:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5014:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5067:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5076:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5079:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5069:6:20"},"nodeType":"YulFunctionCall","src":"5069:12:20"},"nodeType":"YulExpressionStatement","src":"5069:12:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5055:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"5063:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5052:2:20"},"nodeType":"YulFunctionCall","src":"5052:14:20"},"nodeType":"YulIf","src":"5049:34:20"},{"body":{"nodeType":"YulBlock","src":"5133:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5142:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5145:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5135:6:20"},"nodeType":"YulFunctionCall","src":"5135:12:20"},"nodeType":"YulExpressionStatement","src":"5135:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5106:2:20"},{"name":"length","nodeType":"YulIdentifier","src":"5110:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5102:3:20"},"nodeType":"YulFunctionCall","src":"5102:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"5119:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5098:3:20"},"nodeType":"YulFunctionCall","src":"5098:24:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5124:7:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5095:2:20"},"nodeType":"YulFunctionCall","src":"5095:37:20"},"nodeType":"YulIf","src":"5092:57:20"},{"nodeType":"YulAssignment","src":"5158:21:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5172:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"5176:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5168:3:20"},"nodeType":"YulFunctionCall","src":"5168:11:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5158:6:20"}]},{"nodeType":"YulAssignment","src":"5188:16:20","value":{"name":"length","nodeType":"YulIdentifier","src":"5198:6:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5188:6:20"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4481:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4492:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4512:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4520:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4528:6:20","type":""}],"src":"4416:794:20"},{"body":{"nodeType":"YulBlock","src":"5389:169:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5406:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5417:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5399:6:20"},"nodeType":"YulFunctionCall","src":"5399:21:20"},"nodeType":"YulExpressionStatement","src":"5399:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5440:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5451:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5436:3:20"},"nodeType":"YulFunctionCall","src":"5436:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"5456:2:20","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5429:6:20"},"nodeType":"YulFunctionCall","src":"5429:30:20"},"nodeType":"YulExpressionStatement","src":"5429:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5490:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:20"},"nodeType":"YulFunctionCall","src":"5475:18:20"},{"hexValue":"77726f6e67206172726179206c656e67746873","kind":"string","nodeType":"YulLiteral","src":"5495:21:20","type":"","value":"wrong array lengths"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5468:6:20"},"nodeType":"YulFunctionCall","src":"5468:49:20"},"nodeType":"YulExpressionStatement","src":"5468:49:20"},{"nodeType":"YulAssignment","src":"5526:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5549:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:20"},"nodeType":"YulFunctionCall","src":"5534:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5526:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5366:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5380:4:20","type":""}],"src":"5215:343:20"},{"body":{"nodeType":"YulBlock","src":"5595:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5612:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5619:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5624:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5615:3:20"},"nodeType":"YulFunctionCall","src":"5615:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5605:6:20"},"nodeType":"YulFunctionCall","src":"5605:31:20"},"nodeType":"YulExpressionStatement","src":"5605:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5652:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5655:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5645:6:20"},"nodeType":"YulFunctionCall","src":"5645:15:20"},"nodeType":"YulExpressionStatement","src":"5645:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5676:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5679:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5669:6:20"},"nodeType":"YulFunctionCall","src":"5669:15:20"},"nodeType":"YulExpressionStatement","src":"5669:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5563:127:20"},{"body":{"nodeType":"YulBlock","src":"5789:427:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5799:51:20","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"5838:11:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5825:12:20"},"nodeType":"YulFunctionCall","src":"5825:25:20"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"5803:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"5939:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5948:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5951:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5941:6:20"},"nodeType":"YulFunctionCall","src":"5941:12:20"},"nodeType":"YulExpressionStatement","src":"5941:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"5873:18:20"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5901:12:20"},"nodeType":"YulFunctionCall","src":"5901:14:20"},{"name":"base_ref","nodeType":"YulIdentifier","src":"5917:8:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5897:3:20"},"nodeType":"YulFunctionCall","src":"5897:29:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5932:2:20","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5928:3:20"},"nodeType":"YulFunctionCall","src":"5928:7:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5893:3:20"},"nodeType":"YulFunctionCall","src":"5893:43:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5869:3:20"},"nodeType":"YulFunctionCall","src":"5869:68:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5862:6:20"},"nodeType":"YulFunctionCall","src":"5862:76:20"},"nodeType":"YulIf","src":"5859:96:20"},{"nodeType":"YulVariableDeclaration","src":"5964:47:20","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"5982:8:20"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"5992:18:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5978:3:20"},"nodeType":"YulFunctionCall","src":"5978:33:20"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"5968:6:20","type":""}]},{"nodeType":"YulAssignment","src":"6020:30:20","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6043:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6030:12:20"},"nodeType":"YulFunctionCall","src":"6030:20:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6020:6:20"}]},{"body":{"nodeType":"YulBlock","src":"6093:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6102:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6105:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6095:6:20"},"nodeType":"YulFunctionCall","src":"6095:12:20"},"nodeType":"YulExpressionStatement","src":"6095:12:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6065:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6073:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6062:2:20"},"nodeType":"YulFunctionCall","src":"6062:30:20"},"nodeType":"YulIf","src":"6059:50:20"},{"nodeType":"YulAssignment","src":"6118:25:20","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6130:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6138:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6126:3:20"},"nodeType":"YulFunctionCall","src":"6126:17:20"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"6118:4:20"}]},{"body":{"nodeType":"YulBlock","src":"6194:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6203:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6206:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6196:6:20"},"nodeType":"YulFunctionCall","src":"6196:12:20"},"nodeType":"YulExpressionStatement","src":"6196:12:20"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"6159:4:20"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6169:12:20"},"nodeType":"YulFunctionCall","src":"6169:14:20"},{"name":"length","nodeType":"YulIdentifier","src":"6185:6:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6165:3:20"},"nodeType":"YulFunctionCall","src":"6165:27:20"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"6155:3:20"},"nodeType":"YulFunctionCall","src":"6155:38:20"},"nodeType":"YulIf","src":"6152:58:20"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"5746:8:20","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"5756:11:20","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"5772:4:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"5778:6:20","type":""}],"src":"5695:521:20"},{"body":{"nodeType":"YulBlock","src":"6253:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6270:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6277:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6282:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6273:3:20"},"nodeType":"YulFunctionCall","src":"6273:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6263:6:20"},"nodeType":"YulFunctionCall","src":"6263:31:20"},"nodeType":"YulExpressionStatement","src":"6263:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6310:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6313:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6303:6:20"},"nodeType":"YulFunctionCall","src":"6303:15:20"},"nodeType":"YulExpressionStatement","src":"6303:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6334:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6337:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6327:6:20"},"nodeType":"YulFunctionCall","src":"6327:15:20"},"nodeType":"YulExpressionStatement","src":"6327:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6221:127:20"},{"body":{"nodeType":"YulBlock","src":"6400:88:20","statements":[{"body":{"nodeType":"YulBlock","src":"6431:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6433:16:20"},"nodeType":"YulFunctionCall","src":"6433:18:20"},"nodeType":"YulExpressionStatement","src":"6433:18:20"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6416:5:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6427:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6423:3:20"},"nodeType":"YulFunctionCall","src":"6423:6:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6413:2:20"},"nodeType":"YulFunctionCall","src":"6413:17:20"},"nodeType":"YulIf","src":"6410:43:20"},{"nodeType":"YulAssignment","src":"6462:20:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6473:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6480:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6469:3:20"},"nodeType":"YulFunctionCall","src":"6469:13:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6462:3:20"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6382:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6392:3:20","type":""}],"src":"6353:135:20"},{"body":{"nodeType":"YulBlock","src":"6667:234:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6684:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6695:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6677:6:20"},"nodeType":"YulFunctionCall","src":"6677:21:20"},"nodeType":"YulExpressionStatement","src":"6677:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6718:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6729:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6714:3:20"},"nodeType":"YulFunctionCall","src":"6714:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"6734:2:20","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6707:6:20"},"nodeType":"YulFunctionCall","src":"6707:30:20"},"nodeType":"YulExpressionStatement","src":"6707:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6757:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6768:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6753:3:20"},"nodeType":"YulFunctionCall","src":"6753:18:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"6773:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6746:6:20"},"nodeType":"YulFunctionCall","src":"6746:62:20"},"nodeType":"YulExpressionStatement","src":"6746:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6828:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6839:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6824:3:20"},"nodeType":"YulFunctionCall","src":"6824:18:20"},{"hexValue":"64656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"6844:14:20","type":"","value":"delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6817:6:20"},"nodeType":"YulFunctionCall","src":"6817:42:20"},"nodeType":"YulExpressionStatement","src":"6817:42:20"},{"nodeType":"YulAssignment","src":"6868:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6880:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"6891:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6876:3:20"},"nodeType":"YulFunctionCall","src":"6876:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6868:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6644:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6658:4:20","type":""}],"src":"6493:408:20"},{"body":{"nodeType":"YulBlock","src":"7080:234:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7097:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7108:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7090:6:20"},"nodeType":"YulFunctionCall","src":"7090:21:20"},"nodeType":"YulExpressionStatement","src":"7090:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7131:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7142:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7127:3:20"},"nodeType":"YulFunctionCall","src":"7127:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"7147:2:20","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7120:6:20"},"nodeType":"YulFunctionCall","src":"7120:30:20"},"nodeType":"YulExpressionStatement","src":"7120:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7170:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7181:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7166:3:20"},"nodeType":"YulFunctionCall","src":"7166:18:20"},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820","kind":"string","nodeType":"YulLiteral","src":"7186:34:20","type":"","value":"Function must be called through "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7159:6:20"},"nodeType":"YulFunctionCall","src":"7159:62:20"},"nodeType":"YulExpressionStatement","src":"7159:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7241:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7252:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7237:3:20"},"nodeType":"YulFunctionCall","src":"7237:18:20"},{"hexValue":"6163746976652070726f7879","kind":"string","nodeType":"YulLiteral","src":"7257:14:20","type":"","value":"active proxy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7230:6:20"},"nodeType":"YulFunctionCall","src":"7230:42:20"},"nodeType":"YulExpressionStatement","src":"7230:42:20"},{"nodeType":"YulAssignment","src":"7281:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7293:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7304:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7289:3:20"},"nodeType":"YulFunctionCall","src":"7289:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7281:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7057:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7071:4:20","type":""}],"src":"6906:408:20"},{"body":{"nodeType":"YulBlock","src":"7464:145:20","statements":[{"nodeType":"YulAssignment","src":"7474:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7486:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7497:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7482:3:20"},"nodeType":"YulFunctionCall","src":"7482:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7474:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7516:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7531:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7547:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7552:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7543:3:20"},"nodeType":"YulFunctionCall","src":"7543:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"7556:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7539:3:20"},"nodeType":"YulFunctionCall","src":"7539:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7527:3:20"},"nodeType":"YulFunctionCall","src":"7527:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7509:6:20"},"nodeType":"YulFunctionCall","src":"7509:51:20"},"nodeType":"YulExpressionStatement","src":"7509:51:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7591:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:20"},"nodeType":"YulFunctionCall","src":"7576:18:20"},{"name":"value1","nodeType":"YulIdentifier","src":"7596:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7569:6:20"},"nodeType":"YulFunctionCall","src":"7569:34:20"},"nodeType":"YulExpressionStatement","src":"7569:34:20"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7425:9:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7436:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7444:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7455:4:20","type":""}],"src":"7319:290:20"},{"body":{"nodeType":"YulBlock","src":"7788:246:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7805:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7798:6:20"},"nodeType":"YulFunctionCall","src":"7798:21:20"},"nodeType":"YulExpressionStatement","src":"7798:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7839:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7850:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7835:3:20"},"nodeType":"YulFunctionCall","src":"7835:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"7855:2:20","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7828:6:20"},"nodeType":"YulFunctionCall","src":"7828:30:20"},"nodeType":"YulExpressionStatement","src":"7828:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7878:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7889:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7874:3:20"},"nodeType":"YulFunctionCall","src":"7874:18:20"},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c","kind":"string","nodeType":"YulLiteral","src":"7894:34:20","type":"","value":"UUPSUpgradeable: must not be cal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7867:6:20"},"nodeType":"YulFunctionCall","src":"7867:62:20"},"nodeType":"YulExpressionStatement","src":"7867:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7949:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7960:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7945:3:20"},"nodeType":"YulFunctionCall","src":"7945:18:20"},{"hexValue":"6c6564207468726f7567682064656c656761746563616c6c","kind":"string","nodeType":"YulLiteral","src":"7965:26:20","type":"","value":"led through delegatecall"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7938:6:20"},"nodeType":"YulFunctionCall","src":"7938:54:20"},"nodeType":"YulExpressionStatement","src":"7938:54:20"},{"nodeType":"YulAssignment","src":"8001:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8013:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8024:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8009:3:20"},"nodeType":"YulFunctionCall","src":"8009:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8001:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7765:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7779:4:20","type":""}],"src":"7614:420:20"},{"body":{"nodeType":"YulBlock","src":"8120:103:20","statements":[{"body":{"nodeType":"YulBlock","src":"8166:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8175:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8178:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8168:6:20"},"nodeType":"YulFunctionCall","src":"8168:12:20"},"nodeType":"YulExpressionStatement","src":"8168:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8141:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8150:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8137:3:20"},"nodeType":"YulFunctionCall","src":"8137:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"8162:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8133:3:20"},"nodeType":"YulFunctionCall","src":"8133:32:20"},"nodeType":"YulIf","src":"8130:52:20"},{"nodeType":"YulAssignment","src":"8191:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8207:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8201:5:20"},"nodeType":"YulFunctionCall","src":"8201:16:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8191:6:20"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8086:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8097:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8109:6:20","type":""}],"src":"8039:184:20"},{"body":{"nodeType":"YulBlock","src":"8402:236:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8412:6:20"},"nodeType":"YulFunctionCall","src":"8412:21:20"},"nodeType":"YulExpressionStatement","src":"8412:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8453:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8464:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8449:3:20"},"nodeType":"YulFunctionCall","src":"8449:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"8469:2:20","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8442:6:20"},"nodeType":"YulFunctionCall","src":"8442:30:20"},"nodeType":"YulExpressionStatement","src":"8442:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8492:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8503:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8488:3:20"},"nodeType":"YulFunctionCall","src":"8488:18:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"8508:34:20","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8481:6:20"},"nodeType":"YulFunctionCall","src":"8481:62:20"},"nodeType":"YulExpressionStatement","src":"8481:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8563:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8574:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8559:3:20"},"nodeType":"YulFunctionCall","src":"8559:18:20"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"8579:16:20","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8552:6:20"},"nodeType":"YulFunctionCall","src":"8552:44:20"},"nodeType":"YulExpressionStatement","src":"8552:44:20"},{"nodeType":"YulAssignment","src":"8605:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8617:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8628:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8613:3:20"},"nodeType":"YulFunctionCall","src":"8613:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8605:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8379:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8393:4:20","type":""}],"src":"8228:410:20"},{"body":{"nodeType":"YulBlock","src":"8750:87:20","statements":[{"nodeType":"YulAssignment","src":"8760:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8772:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8783:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8768:3:20"},"nodeType":"YulFunctionCall","src":"8768:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8802:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8817:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8825:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8813:3:20"},"nodeType":"YulFunctionCall","src":"8813:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8795:6:20"},"nodeType":"YulFunctionCall","src":"8795:36:20"},"nodeType":"YulExpressionStatement","src":"8795:36:20"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8719:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8730:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8741:4:20","type":""}],"src":"8643:194:20"},{"body":{"nodeType":"YulBlock","src":"9016:182:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9033:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9044:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9026:6:20"},"nodeType":"YulFunctionCall","src":"9026:21:20"},"nodeType":"YulExpressionStatement","src":"9026:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9067:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9078:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9063:3:20"},"nodeType":"YulFunctionCall","src":"9063:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"9083:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9056:6:20"},"nodeType":"YulFunctionCall","src":"9056:30:20"},"nodeType":"YulExpressionStatement","src":"9056:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9106:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9117:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9102:3:20"},"nodeType":"YulFunctionCall","src":"9102:18:20"},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"9122:34:20","type":"","value":"account: not Owner or EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9095:6:20"},"nodeType":"YulFunctionCall","src":"9095:62:20"},"nodeType":"YulExpressionStatement","src":"9095:62:20"},{"nodeType":"YulAssignment","src":"9166:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9178:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9189:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9174:3:20"},"nodeType":"YulFunctionCall","src":"9174:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9166:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8993:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9007:4:20","type":""}],"src":"8842:356:20"},{"body":{"nodeType":"YulBlock","src":"9256:205:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9266:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"9275:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9270:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9335:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9360:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"9365:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9356:3:20"},"nodeType":"YulFunctionCall","src":"9356:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9379:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"9384:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9375:3:20"},"nodeType":"YulFunctionCall","src":"9375:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9369:5:20"},"nodeType":"YulFunctionCall","src":"9369:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9349:6:20"},"nodeType":"YulFunctionCall","src":"9349:39:20"},"nodeType":"YulExpressionStatement","src":"9349:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9296:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"9299:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9293:2:20"},"nodeType":"YulFunctionCall","src":"9293:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9307:19:20","statements":[{"nodeType":"YulAssignment","src":"9309:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9318:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"9321:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9314:3:20"},"nodeType":"YulFunctionCall","src":"9314:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9309:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"9289:3:20","statements":[]},"src":"9285:113:20"},{"body":{"nodeType":"YulBlock","src":"9424:31:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9437:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9442:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9433:3:20"},"nodeType":"YulFunctionCall","src":"9433:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"9451:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9426:6:20"},"nodeType":"YulFunctionCall","src":"9426:27:20"},"nodeType":"YulExpressionStatement","src":"9426:27:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9413:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"9416:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9410:2:20"},"nodeType":"YulFunctionCall","src":"9410:13:20"},"nodeType":"YulIf","src":"9407:48:20"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9234:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9239:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"9244:6:20","type":""}],"src":"9203:258:20"},{"body":{"nodeType":"YulBlock","src":"9603:137:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9613:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9633:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9627:5:20"},"nodeType":"YulFunctionCall","src":"9627:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9617:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9675:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9683:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9671:3:20"},"nodeType":"YulFunctionCall","src":"9671:17:20"},{"name":"pos","nodeType":"YulIdentifier","src":"9690:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9695:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"9649:21:20"},"nodeType":"YulFunctionCall","src":"9649:53:20"},"nodeType":"YulExpressionStatement","src":"9649:53:20"},{"nodeType":"YulAssignment","src":"9711:23:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9722:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"9727:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9718:3:20"},"nodeType":"YulFunctionCall","src":"9718:16:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9711:3:20"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9579:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9584:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9595:3:20","type":""}],"src":"9466:274:20"},{"body":{"nodeType":"YulBlock","src":"9826:103:20","statements":[{"body":{"nodeType":"YulBlock","src":"9872:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9881:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9884:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9874:6:20"},"nodeType":"YulFunctionCall","src":"9874:12:20"},"nodeType":"YulExpressionStatement","src":"9874:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9847:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9856:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9843:3:20"},"nodeType":"YulFunctionCall","src":"9843:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"9868:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9839:3:20"},"nodeType":"YulFunctionCall","src":"9839:32:20"},"nodeType":"YulIf","src":"9836:52:20"},{"nodeType":"YulAssignment","src":"9897:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9913:9:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9907:5:20"},"nodeType":"YulFunctionCall","src":"9907:16:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9897:6:20"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9792:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9803:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9815:6:20","type":""}],"src":"9745:184:20"},{"body":{"nodeType":"YulBlock","src":"10108:236:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10125:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10136:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10118:6:20"},"nodeType":"YulFunctionCall","src":"10118:21:20"},"nodeType":"YulExpressionStatement","src":"10118:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10159:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10170:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10155:3:20"},"nodeType":"YulFunctionCall","src":"10155:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"10175:2:20","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10148:6:20"},"nodeType":"YulFunctionCall","src":"10148:30:20"},"nodeType":"YulExpressionStatement","src":"10148:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10198:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10209:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10194:3:20"},"nodeType":"YulFunctionCall","src":"10194:18:20"},{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e74617469","kind":"string","nodeType":"YulLiteral","src":"10214:34:20","type":"","value":"ERC1967Upgrade: new implementati"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10187:6:20"},"nodeType":"YulFunctionCall","src":"10187:62:20"},"nodeType":"YulExpressionStatement","src":"10187:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10269:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10280:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10265:3:20"},"nodeType":"YulFunctionCall","src":"10265:18:20"},{"hexValue":"6f6e206973206e6f742055555053","kind":"string","nodeType":"YulLiteral","src":"10285:16:20","type":"","value":"on is not UUPS"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10258:6:20"},"nodeType":"YulFunctionCall","src":"10258:44:20"},"nodeType":"YulExpressionStatement","src":"10258:44:20"},{"nodeType":"YulAssignment","src":"10311:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10323:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10334:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10319:3:20"},"nodeType":"YulFunctionCall","src":"10319:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10311:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10085:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10099:4:20","type":""}],"src":"9934:410:20"},{"body":{"nodeType":"YulBlock","src":"10523:231:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10540:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10551:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10533:6:20"},"nodeType":"YulFunctionCall","src":"10533:21:20"},"nodeType":"YulExpressionStatement","src":"10533:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10574:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10585:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10570:3:20"},"nodeType":"YulFunctionCall","src":"10570:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"10590:2:20","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10563:6:20"},"nodeType":"YulFunctionCall","src":"10563:30:20"},"nodeType":"YulExpressionStatement","src":"10563:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10613:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10624:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10609:3:20"},"nodeType":"YulFunctionCall","src":"10609:18:20"},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f78","kind":"string","nodeType":"YulLiteral","src":"10629:34:20","type":"","value":"ERC1967Upgrade: unsupported prox"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10602:6:20"},"nodeType":"YulFunctionCall","src":"10602:62:20"},"nodeType":"YulExpressionStatement","src":"10602:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10684:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10695:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10680:3:20"},"nodeType":"YulFunctionCall","src":"10680:18:20"},{"hexValue":"6961626c6555554944","kind":"string","nodeType":"YulLiteral","src":"10700:11:20","type":"","value":"iableUUID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10673:6:20"},"nodeType":"YulFunctionCall","src":"10673:39:20"},"nodeType":"YulExpressionStatement","src":"10673:39:20"},{"nodeType":"YulAssignment","src":"10721:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10744:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10729:3:20"},"nodeType":"YulFunctionCall","src":"10729:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10721:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10500:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10514:4:20","type":""}],"src":"10349:405:20"},{"body":{"nodeType":"YulBlock","src":"10933:178:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10943:6:20"},"nodeType":"YulFunctionCall","src":"10943:21:20"},"nodeType":"YulExpressionStatement","src":"10943:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10984:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10995:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:20"},"nodeType":"YulFunctionCall","src":"10980:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"11000:2:20","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10973:6:20"},"nodeType":"YulFunctionCall","src":"10973:30:20"},"nodeType":"YulExpressionStatement","src":"10973:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11023:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11034:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11019:3:20"},"nodeType":"YulFunctionCall","src":"11019:18:20"},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","kind":"string","nodeType":"YulLiteral","src":"11039:30:20","type":"","value":"account: not from EntryPoint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11012:6:20"},"nodeType":"YulFunctionCall","src":"11012:58:20"},"nodeType":"YulExpressionStatement","src":"11012:58:20"},{"nodeType":"YulAssignment","src":"11079:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11091:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11102:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:20"},"nodeType":"YulFunctionCall","src":"11087:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11079:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10910:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10924:4:20","type":""}],"src":"10759:352:20"},{"body":{"nodeType":"YulBlock","src":"11162:171:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11172:36:20","value":{"kind":"number","nodeType":"YulLiteral","src":"11182:26:20","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11176:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11217:29:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11236:5:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11243:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11232:3:20"},"nodeType":"YulFunctionCall","src":"11232:14:20"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"11221:7:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11274:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11276:16:20"},"nodeType":"YulFunctionCall","src":"11276:18:20"},"nodeType":"YulExpressionStatement","src":"11276:18:20"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11261:7:20"},{"name":"_1","nodeType":"YulIdentifier","src":"11270:2:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11258:2:20"},"nodeType":"YulFunctionCall","src":"11258:15:20"},"nodeType":"YulIf","src":"11255:41:20"},{"nodeType":"YulAssignment","src":"11305:22:20","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"11316:7:20"},{"kind":"number","nodeType":"YulLiteral","src":"11325:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11312:3:20"},"nodeType":"YulFunctionCall","src":"11312:15:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11305:3:20"}]}]},"name":"increment_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11144:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11154:3:20","type":""}],"src":"11116:217:20"},{"body":{"nodeType":"YulBlock","src":"11512:172:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11529:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11540:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11522:6:20"},"nodeType":"YulFunctionCall","src":"11522:21:20"},"nodeType":"YulExpressionStatement","src":"11522:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11563:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11574:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11559:3:20"},"nodeType":"YulFunctionCall","src":"11559:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"11579:2:20","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11552:6:20"},"nodeType":"YulFunctionCall","src":"11552:30:20"},"nodeType":"YulExpressionStatement","src":"11552:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11602:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11613:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11598:3:20"},"nodeType":"YulFunctionCall","src":"11598:18:20"},{"hexValue":"6163636f756e743a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"11618:24:20","type":"","value":"account: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11591:6:20"},"nodeType":"YulFunctionCall","src":"11591:52:20"},"nodeType":"YulExpressionStatement","src":"11591:52:20"},{"nodeType":"YulAssignment","src":"11652:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11664:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11675:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11660:3:20"},"nodeType":"YulFunctionCall","src":"11660:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11652:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_470b5eb05ad46a916385e8f3d185e571bb4498eea99276dfa63667e9faf43873__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11489:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11503:4:20","type":""}],"src":"11338:346:20"},{"body":{"nodeType":"YulBlock","src":"11880:14:20","statements":[{"nodeType":"YulAssignment","src":"11882:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"11889:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11882:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11864:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11872:3:20","type":""}],"src":"11689:205:20"},{"body":{"nodeType":"YulBlock","src":"12073:160:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12090:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12101:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12083:6:20"},"nodeType":"YulFunctionCall","src":"12083:21:20"},"nodeType":"YulExpressionStatement","src":"12083:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:20"},"nodeType":"YulFunctionCall","src":"12120:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"12140:2:20","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12113:6:20"},"nodeType":"YulFunctionCall","src":"12113:30:20"},"nodeType":"YulExpressionStatement","src":"12113:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12163:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12174:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12159:3:20"},"nodeType":"YulFunctionCall","src":"12159:18:20"},{"hexValue":"6f6e6c79206f776e6572","kind":"string","nodeType":"YulLiteral","src":"12179:12:20","type":"","value":"only owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12152:6:20"},"nodeType":"YulFunctionCall","src":"12152:40:20"},"nodeType":"YulExpressionStatement","src":"12152:40:20"},{"nodeType":"YulAssignment","src":"12201:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12213:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12224:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12209:3:20"},"nodeType":"YulFunctionCall","src":"12209:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12201:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12050:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12064:4:20","type":""}],"src":"11899:334:20"},{"body":{"nodeType":"YulBlock","src":"12412:235:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12429:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12440:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12422:6:20"},"nodeType":"YulFunctionCall","src":"12422:21:20"},"nodeType":"YulExpressionStatement","src":"12422:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12463:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12474:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12459:3:20"},"nodeType":"YulFunctionCall","src":"12459:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"12479:2:20","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12452:6:20"},"nodeType":"YulFunctionCall","src":"12452:30:20"},"nodeType":"YulExpressionStatement","src":"12452:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12513:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12498:3:20"},"nodeType":"YulFunctionCall","src":"12498:18:20"},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e","kind":"string","nodeType":"YulLiteral","src":"12518:34:20","type":"","value":"ERC1967: new implementation is n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12491:6:20"},"nodeType":"YulFunctionCall","src":"12491:62:20"},"nodeType":"YulExpressionStatement","src":"12491:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12573:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12584:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12569:3:20"},"nodeType":"YulFunctionCall","src":"12569:18:20"},{"hexValue":"6f74206120636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"12589:15:20","type":"","value":"ot a contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12562:6:20"},"nodeType":"YulFunctionCall","src":"12562:43:20"},"nodeType":"YulExpressionStatement","src":"12562:43:20"},{"nodeType":"YulAssignment","src":"12614:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12626:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12637:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12622:3:20"},"nodeType":"YulFunctionCall","src":"12622:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12614:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12389:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12403:4:20","type":""}],"src":"12238:409:20"},{"body":{"nodeType":"YulBlock","src":"12872:160:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12889:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12894:66:20","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12882:6:20"},"nodeType":"YulFunctionCall","src":"12882:79:20"},"nodeType":"YulExpressionStatement","src":"12882:79:20"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12981:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12986:2:20","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12977:3:20"},"nodeType":"YulFunctionCall","src":"12977:12:20"},{"name":"value0","nodeType":"YulIdentifier","src":"12991:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12970:6:20"},"nodeType":"YulFunctionCall","src":"12970:28:20"},"nodeType":"YulExpressionStatement","src":"12970:28:20"},{"nodeType":"YulAssignment","src":"13007:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13018:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13023:2:20","type":"","value":"60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13014:3:20"},"nodeType":"YulFunctionCall","src":"13014:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13007:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12848:3:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12853:6:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12864:3:20","type":""}],"src":"12652:380:20"},{"body":{"nodeType":"YulBlock","src":"13069:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13086:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13093:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13098:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13089:3:20"},"nodeType":"YulFunctionCall","src":"13089:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13079:6:20"},"nodeType":"YulFunctionCall","src":"13079:31:20"},"nodeType":"YulExpressionStatement","src":"13079:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13126:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13129:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13119:6:20"},"nodeType":"YulFunctionCall","src":"13119:15:20"},"nodeType":"YulExpressionStatement","src":"13119:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13150:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13153:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13143:6:20"},"nodeType":"YulFunctionCall","src":"13143:15:20"},"nodeType":"YulExpressionStatement","src":"13143:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"13037:127:20"},{"body":{"nodeType":"YulBlock","src":"13343:174:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13360:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13371:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13353:6:20"},"nodeType":"YulFunctionCall","src":"13353:21:20"},"nodeType":"YulExpressionStatement","src":"13353:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13394:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13405:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13390:3:20"},"nodeType":"YulFunctionCall","src":"13390:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:20","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13383:6:20"},"nodeType":"YulFunctionCall","src":"13383:30:20"},"nodeType":"YulExpressionStatement","src":"13383:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13433:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13444:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13429:3:20"},"nodeType":"YulFunctionCall","src":"13429:18:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"13449:26:20","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13422:6:20"},"nodeType":"YulFunctionCall","src":"13422:54:20"},"nodeType":"YulExpressionStatement","src":"13422:54:20"},{"nodeType":"YulAssignment","src":"13485:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13497:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13508:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13493:3:20"},"nodeType":"YulFunctionCall","src":"13493:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13485:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13320:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13334:4:20","type":""}],"src":"13169:348:20"},{"body":{"nodeType":"YulBlock","src":"13696:181:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13713:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13724:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13706:6:20"},"nodeType":"YulFunctionCall","src":"13706:21:20"},"nodeType":"YulExpressionStatement","src":"13706:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13747:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13758:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13743:3:20"},"nodeType":"YulFunctionCall","src":"13743:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"13763:2:20","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13736:6:20"},"nodeType":"YulFunctionCall","src":"13736:30:20"},"nodeType":"YulExpressionStatement","src":"13736:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13782:3:20"},"nodeType":"YulFunctionCall","src":"13782:18:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"13802:33:20","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13775:6:20"},"nodeType":"YulFunctionCall","src":"13775:61:20"},"nodeType":"YulExpressionStatement","src":"13775:61:20"},{"nodeType":"YulAssignment","src":"13845:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13857:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13868:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13853:3:20"},"nodeType":"YulFunctionCall","src":"13853:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13845:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13673:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13687:4:20","type":""}],"src":"13522:355:20"},{"body":{"nodeType":"YulBlock","src":"14056:224:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14084:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14066:6:20"},"nodeType":"YulFunctionCall","src":"14066:21:20"},"nodeType":"YulExpressionStatement","src":"14066:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14107:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14118:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14103:3:20"},"nodeType":"YulFunctionCall","src":"14103:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"14123:2:20","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14096:6:20"},"nodeType":"YulFunctionCall","src":"14096:30:20"},"nodeType":"YulExpressionStatement","src":"14096:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14146:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14157:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14142:3:20"},"nodeType":"YulFunctionCall","src":"14142:18:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"14162:34:20","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14135:6:20"},"nodeType":"YulFunctionCall","src":"14135:62:20"},"nodeType":"YulExpressionStatement","src":"14135:62:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14217:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14228:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14213:3:20"},"nodeType":"YulFunctionCall","src":"14213:18:20"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"14233:4:20","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14206:6:20"},"nodeType":"YulFunctionCall","src":"14206:32:20"},"nodeType":"YulExpressionStatement","src":"14206:32:20"},{"nodeType":"YulAssignment","src":"14247:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14259:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14270:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14255:3:20"},"nodeType":"YulFunctionCall","src":"14255:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14247:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14033:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14047:4:20","type":""}],"src":"13882:398:20"},{"body":{"nodeType":"YulBlock","src":"14466:217:20","statements":[{"nodeType":"YulAssignment","src":"14476:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14488:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14499:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14484:3:20"},"nodeType":"YulFunctionCall","src":"14484:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14476:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14519:9:20"},{"name":"value0","nodeType":"YulIdentifier","src":"14530:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14512:6:20"},"nodeType":"YulFunctionCall","src":"14512:25:20"},"nodeType":"YulExpressionStatement","src":"14512:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14557:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14568:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14553:3:20"},"nodeType":"YulFunctionCall","src":"14553:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14577:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"14585:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14573:3:20"},"nodeType":"YulFunctionCall","src":"14573:17:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14546:6:20"},"nodeType":"YulFunctionCall","src":"14546:45:20"},"nodeType":"YulExpressionStatement","src":"14546:45:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14611:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14622:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14607:3:20"},"nodeType":"YulFunctionCall","src":"14607:18:20"},{"name":"value2","nodeType":"YulIdentifier","src":"14627:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14600:6:20"},"nodeType":"YulFunctionCall","src":"14600:34:20"},"nodeType":"YulExpressionStatement","src":"14600:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14654:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14665:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14650:3:20"},"nodeType":"YulFunctionCall","src":"14650:18:20"},{"name":"value3","nodeType":"YulIdentifier","src":"14670:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14643:6:20"},"nodeType":"YulFunctionCall","src":"14643:34:20"},"nodeType":"YulExpressionStatement","src":"14643:34:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14411:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14422:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14430:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14438:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14446:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14457:4:20","type":""}],"src":"14285:398:20"},{"body":{"nodeType":"YulBlock","src":"14862:179:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14879:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14890:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14872:6:20"},"nodeType":"YulFunctionCall","src":"14872:21:20"},"nodeType":"YulExpressionStatement","src":"14872:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14913:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14924:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14909:3:20"},"nodeType":"YulFunctionCall","src":"14909:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"14929:2:20","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14902:6:20"},"nodeType":"YulFunctionCall","src":"14902:30:20"},"nodeType":"YulExpressionStatement","src":"14902:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14952:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"14963:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14948:3:20"},"nodeType":"YulFunctionCall","src":"14948:18:20"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"14968:31:20","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14941:6:20"},"nodeType":"YulFunctionCall","src":"14941:59:20"},"nodeType":"YulExpressionStatement","src":"14941:59:20"},{"nodeType":"YulAssignment","src":"15009:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15021:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15032:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15017:3:20"},"nodeType":"YulFunctionCall","src":"15017:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15009:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14839:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:20","type":""}],"src":"14688:353:20"},{"body":{"nodeType":"YulBlock","src":"15167:262:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15184:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15195:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15177:6:20"},"nodeType":"YulFunctionCall","src":"15177:21:20"},"nodeType":"YulExpressionStatement","src":"15177:21:20"},{"nodeType":"YulVariableDeclaration","src":"15207:27:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15227:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15221:5:20"},"nodeType":"YulFunctionCall","src":"15221:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15211:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15254:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15265:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15250:3:20"},"nodeType":"YulFunctionCall","src":"15250:18:20"},{"name":"length","nodeType":"YulIdentifier","src":"15270:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15243:6:20"},"nodeType":"YulFunctionCall","src":"15243:34:20"},"nodeType":"YulExpressionStatement","src":"15243:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15312:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15320:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15308:3:20"},"nodeType":"YulFunctionCall","src":"15308:15:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15329:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"15340:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15325:3:20"},"nodeType":"YulFunctionCall","src":"15325:18:20"},{"name":"length","nodeType":"YulIdentifier","src":"15345:6:20"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15286:21:20"},"nodeType":"YulFunctionCall","src":"15286:66:20"},"nodeType":"YulExpressionStatement","src":"15286:66:20"},{"nodeType":"YulAssignment","src":"15361:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15377:9:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15396:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"15404:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15392:3:20"},"nodeType":"YulFunctionCall","src":"15392:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15413:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15409:3:20"},"nodeType":"YulFunctionCall","src":"15409:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15388:3:20"},"nodeType":"YulFunctionCall","src":"15388:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15373:3:20"},"nodeType":"YulFunctionCall","src":"15373:45:20"},{"kind":"number","nodeType":"YulLiteral","src":"15420:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15369:3:20"},"nodeType":"YulFunctionCall","src":"15369:54:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15361:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15136:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15147:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15158:4:20","type":""}],"src":"15046:383:20"}]},"contents":"{\n    { }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_struct$_UserOperation_$743_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 352) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$613__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_tuple_t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"wrong array lengths\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"account: not Owner or EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"account: not from EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint96(value) -> ret\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_470b5eb05ad46a916385e8f3d185e571bb4498eea99276dfa63667e9faf43873__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"account: invalid nonce\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"only owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"873":[{"length":32,"start":515},{"length":32,"start":1186},{"length":32,"start":1315},{"length":32,"start":1920},{"length":32,"start":2347},{"length":32,"start":2985},{"length":32,"start":3676}],"1724":[{"length":32,"start":902},{"length":32,"start":966},{"length":32,"start":1460},{"length":32,"start":1524},{"length":32,"start":1671}]},"linkReferences":{},"object":"6080604052600436106100c65760003560e01c806352d1902d1161007f578063b0d691fe11610059578063b0d691fe146101f4578063b61d27f614610227578063c399ec8814610247578063c4d66de81461025c57600080fd5b806352d1902d146101825780638da5cb5b14610197578063affed0e0146101d657600080fd5b806318dfb3c7146100d25780633659cfe6146100f45780633a871cdd146101145780634a58db19146101475780634d44560d1461014f5780634f1ef2861461016f57600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed3660046113ad565b61027c565b005b34801561010057600080fd5b506100f261010f36600461142e565b61037c565b34801561012057600080fd5b5061013461012f36600461144b565b61045b565b6040519081526020015b60405180910390f35b6100f26104a0565b34801561015b57600080fd5b506100f261016a36600461149f565b610519565b6100f261017d3660046114e1565b6105aa565b34801561018e57600080fd5b5061013461067a565b3480156101a357600080fd5b506001546101be90600160601b90046001600160a01b031681565b6040516001600160a01b03909116815260200161013e565b3480156101e257600080fd5b506001546001600160601b0316610134565b34801561020057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101be565b34801561023357600080fd5b506100f26102423660046115a5565b61072d565b34801561025357600080fd5b5061013461077c565b34801561026857600080fd5b506100f261027736600461142e565b61080e565b610284610920565b8281146102ce5760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b83811015610375576103638585838181106102ee576102ee61162e565b9050602002016020810190610303919061142e565b60008585858181106103175761031761162e565b90506020028101906103299190611644565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109b692505050565b8061036d816116a1565b9150506102d1565b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103c45760405162461bcd60e51b81526004016102c5906116ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661040d600080516020611823833981519152546001600160a01b031690565b6001600160a01b0316146104335760405162461bcd60e51b81526004016102c590611706565b61043c81610a26565b6040805160008082526020820190925261045891839190610a2e565b50565b6000610465610b9e565b61046f8484610c16565b905061047e6040850185611644565b90506000036104905761049084610cf2565b61049982610d86565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561050557600080fd5b505af1158015610375573d6000803e3d6000fd5b610521610dd3565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f25760405162461bcd60e51b81526004016102c5906116ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661063b600080516020611823833981519152546001600160a01b031690565b6001600160a01b0316146106615760405162461bcd60e51b81526004016102c590611706565b61066a82610a26565b61067682826001610a2e565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461071a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102c5565b5060008051602061182383398151915290565b610735610920565b610776848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109b692505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108099190611752565b905090565b600054610100900460ff161580801561082e5750600054600160ff909116105b806108485750303b158015610848575060005460ff166001145b6108ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102c5565b6000805460ff1916600117905580156108ce576000805461ff0019166101001790555b6108d782610e2b565b8015610676576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806109685750600154600160601b90046001600160a01b031633145b6109b45760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e7460448201526064016102c5565b565b600080846001600160a01b031684846040516109d29190611797565b60006040518083038185875af1925050503d8060008114610a0f576040519150601f19603f3d011682016040523d82523d6000602084013e610a14565b606091505b50915091508161037557805160208201fd5b610458610dd3565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a6657610a6183610ea8565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ac0575060408051601f3d908101601f19168201909252610abd91810190611752565b60015b610b235760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102c5565b6000805160206118238339815191528114610b925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102c5565b50610a61838383610f44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109b45760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016102c5565b600080610c70836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610cc0610c83610140860186611644565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508593925050610f699050565b600154600160601b90046001600160a01b03908116911614610ce6576001915050610cec565b60009150505b92915050565b600180546020830135916001600160601b03909116906000610d13836117b3565b91906101000a8154816001600160601b0302191690836001600160601b031602179055506001600160601b0316146104585760405162461bcd60e51b81526020600482015260166024820152756163636f756e743a20696e76616c6964206e6f6e636560501b60448201526064016102c5565b801561045857604051600090339060001990849084818181858888f193505050503d8060008114610375576040519150601f19603f3d011682016040523d82523d6000602084013e610375565b600154600160601b90046001600160a01b0316331480610df257503330145b6109b45760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016102c5565b600180546001600160601b0316600160601b6001600160a01b038481168202929092179283905560405192048116917f0000000000000000000000000000000000000000000000000000000000000000909116907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de90600090a350565b6001600160a01b0381163b610f155760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102c5565b60008051602061182383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f4d83610f8d565b600082511180610f5a5750805b15610a61576107768383610fcd565b6000806000610f788585610ff2565b91509150610f8581611037565b509392505050565b610f9681610ea8565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610499838360405180606001604052806027815260200161184360279139611181565b60008082516041036110285760208301516040840151606085015160001a61101c878285856111f9565b94509450505050611030565b506000905060025b9250929050565b600081600481111561104b5761104b6117d9565b036110535750565b6001816004811115611067576110676117d9565b036110b45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102c5565b60028160048111156110c8576110c86117d9565b036111155760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102c5565b6003816004811115611129576111296117d9565b036104585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102c5565b6060600080856001600160a01b03168560405161119e9190611797565b600060405180830381855af49150503d80600081146111d9576040519150601f19603f3d011682016040523d82523d6000602084013e6111de565b606091505b50915091506111ef868383876112bd565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561123057506000905060036112b4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611284573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112ad576000600192509250506112b4565b9150600090505b94509492505050565b6060831561132c578251600003611325576001600160a01b0385163b6113255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102c5565b5081611336565b611336838361133e565b949350505050565b81511561134e5781518083602001fd5b8060405162461bcd60e51b81526004016102c591906117ef565b60008083601f84011261137a57600080fd5b50813567ffffffffffffffff81111561139257600080fd5b6020830191508360208260051b850101111561103057600080fd5b600080600080604085870312156113c357600080fd5b843567ffffffffffffffff808211156113db57600080fd5b6113e788838901611368565b9096509450602087013591508082111561140057600080fd5b5061140d87828801611368565b95989497509550505050565b6001600160a01b038116811461045857600080fd5b60006020828403121561144057600080fd5b813561049981611419565b60008060006060848603121561146057600080fd5b833567ffffffffffffffff81111561147757600080fd5b8401610160818703121561148a57600080fd5b95602085013595506040909401359392505050565b600080604083850312156114b257600080fd5b82356114bd81611419565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156114f457600080fd5b82356114ff81611419565b9150602083013567ffffffffffffffff8082111561151c57600080fd5b818501915085601f83011261153057600080fd5b813581811115611542576115426114cb565b604051601f8201601f19908116603f0116810190838211818310171561156a5761156a6114cb565b8160405282815288602084870101111561158357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080606085870312156115bb57600080fd5b84356115c681611419565b935060208501359250604085013567ffffffffffffffff808211156115ea57600080fd5b818701915087601f8301126115fe57600080fd5b81358181111561160d57600080fd5b88602082850101111561161f57600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261165b57600080fd5b83018035915067ffffffffffffffff82111561167657600080fd5b60200191503681900382131561103057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116b3576116b361168b565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561176457600080fd5b5051919050565b60005b8381101561178657818101518382015260200161176e565b838111156107765750506000910152565b600082516117a981846020870161176b565b9190910192915050565b60006001600160601b038083168181036117cf576117cf61168b565b6001019392505050565b634e487b7160e01b600052602160045260246000fd5b602081526000825180602084015261180e81604085016020870161176b565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220276ecd89bef2845599b898082f6b1082bfd319f26cc666eb19944cac491027c864736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xB0D691FE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18DFB3C7 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3A871CDD EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x4D44560D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xCD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x144B JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x67A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1BE SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x134 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x1BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF2 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH2 0x284 PUSH2 0x920 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x77726F6E67206172726179206C656E67746873 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH2 0x363 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x2EE JUMPI PUSH2 0x2EE PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x317 JUMPI PUSH2 0x317 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9B6 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x36D DUP2 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x43C DUP2 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x458 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xA2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465 PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x46F DUP5 DUP5 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP PUSH2 0x47E PUSH1 0x40 DUP6 ADD DUP6 PUSH2 0x1644 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x490 JUMPI PUSH2 0x490 DUP5 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0x499 DUP3 PUSH2 0xD86 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x521 PUSH2 0xDD3 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x16BA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x66A DUP3 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x676 DUP3 DUP3 PUSH1 0x1 PUSH2 0xA2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x735 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x776 DUP5 DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x9B6 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x82E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x848 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x848 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8D7 DUP3 PUSH2 0xE2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x968 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F74204F776E6572206F7220456E747279506F696E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D2 SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x375 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH2 0x458 PUSH2 0xDD3 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA61 DUP4 PUSH2 0xEA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAC0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xABD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST POP PUSH2 0xA61 DUP4 DUP4 DUP4 PUSH2 0xF44 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC70 DUP4 PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0xCC0 PUSH2 0xC83 PUSH2 0x140 DUP7 ADD DUP7 PUSH2 0x1644 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0xF69 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 PUSH2 0xD13 DUP4 PUSH2 0x17B3 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND EQ PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6163636F756E743A20696E76616C6964206E6F6E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 NOT SWAP1 DUP5 SWAP1 DUP5 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xDF2 JUMPI POP CALLER ADDRESS EQ JUMPDEST PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MUL SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DIV DUP2 AND SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH32 0x47E55C76E7A6F1FD8996A1DA8008C1EA29699CCA35E7BCD057F2DEC313B6E5DE SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1823 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xF4D DUP4 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xF5A JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA61 JUMPI PUSH2 0x776 DUP4 DUP4 PUSH2 0xFCD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF78 DUP6 DUP6 PUSH2 0xFF2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF85 DUP2 PUSH2 0x1037 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF96 DUP2 PUSH2 0xEA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x499 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1843 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1028 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x101C DUP8 DUP3 DUP6 DUP6 PUSH2 0x11F9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x1030 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104B PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x1053 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1067 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x10B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10C8 JUMPI PUSH2 0x10C8 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1129 JUMPI PUSH2 0x1129 PUSH2 0x17D9 JUMP JUMPDEST SUB PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11EF DUP7 DUP4 DUP4 DUP8 PUSH2 0x12BD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1230 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1284 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12AD JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x132C JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1325 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C5 JUMP JUMPDEST POP DUP2 PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x1336 DUP4 DUP4 PUSH2 0x133E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x134E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E7 DUP9 DUP4 DUP10 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140D DUP8 DUP3 DUP9 ADD PUSH2 0x1368 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x499 DUP2 PUSH2 0x1419 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x160 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x148A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14BD DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14FF DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x151C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1542 JUMPI PUSH2 0x1542 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x156A JUMPI PUSH2 0x156A PUSH2 0x14CB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x15C6 DUP2 PUSH2 0x1419 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x165B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1030 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x168B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1786 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x176E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x776 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x17A9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x176B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x17CF JUMPI PUSH2 0x17CF PUSH2 0x168B JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x180E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x176B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122027 PUSH15 0xCD89BEF2845599B898082F6B1082BF 0xD3 NOT CALLCODE PUSH13 0xC666EB19944CAC491027C86473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"591:4436:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:297;;;;;;;;;;-1:-1:-1;2227:297:7;;;;;:::i;:::-;;:::i;:::-;;3073:197:12;;;;;;;;;;-1:-1:-1;3073:197:12;;;;;:::i;:::-;;:::i;1446:413:0:-;;;;;;;;;;-1:-1:-1;1446:413:0;;;;;:::i;:::-;;:::i;:::-;;;2242:25:20;;;2230:2;2215:18;1446:413:0;;;;;;;;4464:110:7;;;:::i;4726:158::-;;;;;;;;;;-1:-1:-1;4726:158:7;;;;;:::i;:::-;;:::i;3519:222:12:-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;958:20:7:-;;;;;;;;;;-1:-1:-1;958:20:7;;;;-1:-1:-1;;;958:20:7;;-1:-1:-1;;;;;958:20:7;;;;;;-1:-1:-1;;;;;4145:32:20;;;4127:51;;4115:2;4100:18;958:20:7;3981:203:20;1224:94:7;;;;;;;;;;-1:-1:-1;1305:6:7;;-1:-1:-1;;;;;1305:6:7;1224:94;;1356:108;;;;;;;;;;-1:-1:-1;1446:11:7;1356:108;;2005:158;;;;;;;;;;-1:-1:-1;2005:158:7;;;;;:::i;:::-;;:::i;4268:113::-;;;;;;;;;;;;;:::i;2808:101::-;;;;;;;;;;-1:-1:-1;2808:101:7;;;;;:::i;:::-;;:::i;2227:297::-;2316:31;:29;:31::i;:::-;2365:26;;;2357:58;;;;-1:-1:-1;;;2357:58:7;;5417:2:20;2357:58:7;;;5399:21:20;5456:2;5436:18;;;5429:30;-1:-1:-1;;;5475:18:20;;;5468:49;5534:18;;2357:58:7;;;;;;;;;2430:9;2425:93;2445:15;;;2425:93;;;2481:26;2487:4;;2492:1;2487:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2496:1;2499:4;;2504:1;2499:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2481:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2481:5:7;;-1:-1:-1;;;2481:26:7:i;:::-;2462:3;;;;:::i;:::-;;;;2425:93;;;;2227:297;;;;:::o;3073:197:12:-;-1:-1:-1;;;;;1654:6:12;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:12;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:12;:20;-1:-1:-1;;;;;;;;;;;1380:54:9;-1:-1:-1;;;;;1380:54:9;;1301:140;1727:20:12;-1:-1:-1;;;;;1727:30:12;;1719:87;;;;-1:-1:-1;;;1719:87:12;;;;;;;:::i;:::-;3156:36:::1;3174:17;3156;:36::i;:::-;3243:12;::::0;;3253:1:::1;3243:12:::0;;;::::1;::::0;::::1;::::0;;;3202:61:::1;::::0;3224:17;;3243:12;3202:21:::1;:61::i;:::-;3073:197:::0;:::o;1446:413:0:-;1589:22;1623:24;:22;:24::i;:::-;1674:38;1693:6;1701:10;1674:18;:38::i;:::-;1657:55;-1:-1:-1;1726:15:0;;;;:6;:15;:::i;:::-;:22;;1752:1;1726:27;1722:89;;1769:31;1793:6;1769:23;:31::i;:::-;1820:32;1832:19;1820:11;:32::i;:::-;1446:413;;;;;:::o;4464:110:7:-;1446:11;4511:56;;-1:-1:-1;;;4511:56:7;;4561:4;4511:56;;;4127:51:20;-1:-1:-1;;;;;4511:22:7;;;;;;;4542:9;;4100:18:20;;4511:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4726:158;1156:12;:10;:12::i;:::-;1446:11;4829:48:::1;::::0;-1:-1:-1;;;4829:48:7;;-1:-1:-1;;;;;7527:32:20;;;4829:48:7::1;::::0;::::1;7509:51:20::0;7576:18;;;7569:34;;;4829:23:7;;;::::1;::::0;::::1;::::0;7482:18:20;;4829:48:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4726:158:::0;;:::o;3519:222:12:-;-1:-1:-1;;;;;1654:6:12;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:12;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:12;:20;-1:-1:-1;;;;;;;;;;;1380:54:9;-1:-1:-1;;;;;1380:54:9;;1301:140;1727:20:12;-1:-1:-1;;;;;1727:30:12;;1719:87;;;;-1:-1:-1;;;1719:87:12;;;;;;;:::i;:::-;3636:36:::1;3654:17;3636;:36::i;:::-;3682:52;3704:17;3723:4;3729;3682:21;:52::i;:::-;3519:222:::0;;:::o;2762:131::-;2840:7;2080:4;-1:-1:-1;;;;;2089:6:12;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:12;;7816:2:20;2064:92:12;;;7798:21:20;7855:2;7835:18;;;7828:30;7894:34;7874:18;;;7867:62;7965:26;7945:18;;;7938:54;8009:19;;2064:92:12;7614:420:20;2064:92:12;-1:-1:-1;;;;;;;;;;;;2762:131:12;:::o;2005:158:7:-;2091:31;:29;:31::i;:::-;2132:24;2138:4;2144:5;2151:4;;2132:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2132:5:7;;-1:-1:-1;;;2132:24:7:i;:::-;2005:158;;;;:::o;4268:113::-;4311:7;1446:11;4337:37;;-1:-1:-1;;;4337:37:7;;4368:4;4337:37;;;4127:51:20;-1:-1:-1;;;;;4337:22:7;;;;;;;4100:18:20;;4337:37:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4330:44;;4268:113;:::o;2808:101::-;3257:19:11;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:11;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:11;1465:19:13;:23;;;3365:55:11;;-1:-1:-1;3403:12:11;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:11;;8430:2:20;3303:190:11;;;8412:21:20;8469:2;8449:18;;;8442:30;8508:34;8488:18;;;8481:62;-1:-1:-1;;;8559:18:20;;;8552:44;8613:19;;3303:190:11;8228:410:20;3303:190:11;3503:12;:16;;-1:-1:-1;;3503:16:11;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:11;;;;;3529:65;2882:20:7::1;2894:7;2882:11;:20::i;:::-;3618:14:11::0;3614:99;;;3664:5;3648:21;;-1:-1:-1;;3648:21:11;;;3688:14;;-1:-1:-1;8795:36:20;;3688:14:11;;8783:2:20;8768:18;3688:14:11;;;;;;;3247:472;2808:101:7;:::o;3133:175::-;3206:10;-1:-1:-1;;;;;1446:11:7;3206:35;;;:58;;-1:-1:-1;3259:5:7;;-1:-1:-1;;;3259:5:7;;-1:-1:-1;;;;;3259:5:7;3245:10;:19;3206:58;3198:103;;;;-1:-1:-1;;;3198:103:7;;9044:2:20;3198:103:7;;;9026:21:20;;;9063:18;;;9056:30;9122:34;9102:18;;;9095:62;9174:18;;3198:103:7;8842:356:20;3198:103:7;3133:175::o;3904:287::-;3989:12;4003:19;4026:6;-1:-1:-1;;;;;4026:11:7;4046:5;4053:4;4026:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3988:70;;;;4073:7;4068:117;;4153:6;4147:13;4142:2;4134:6;4130:15;4123:38;4890:135;5006:12;:10;:12::i;2650:952:9:-;689:66;3096:48;;;3092:504;;;3160:37;3179:17;3160:18;:37::i;:::-;2650:952;;;:::o;3092:504::-;3250:17;-1:-1:-1;;;;;3232:50:9;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3232:52:9;;;;;;;;-1:-1:-1;;3232:52:9;;;;;;;;;;;;:::i;:::-;;;3228:291;;3448:56;;-1:-1:-1;;;3448:56:9;;10136:2:20;3448:56:9;;;10118:21:20;10175:2;10155:18;;;10148:30;10214:34;10194:18;;;10187:62;-1:-1:-1;;;10265:18:20;;;10258:44;10319:19;;3448:56:9;9934:410:20;3228:291:9;-1:-1:-1;;;;;;;;;;;3334:28:9;;3326:82;;;;-1:-1:-1;;;3326:82:9;;10551:2:20;3326:82:9;;;10533:21:20;10590:2;10570:18;;;10563:30;10629:34;10609:18;;;10602:62;-1:-1:-1;;;10680:18:20;;;10673:39;10729:19;;3326:82:9;10349:405:20;3326:82:9;3285:138;3532:53;3550:17;3569:4;3575:9;3532:17;:53::i;1940:149:0:-;2014:10;-1:-1:-1;;;;;1446:11:7;2014:35:0;;2006:76;;;;-1:-1:-1;;;2006:76:0;;10961:2:20;2006:76:0;;;10943:21:20;11000:2;10980:18;;;10973:30;11039;11019:18;;;11012:58;11087:18;;2006:76:0;10759:352:20;3576:322:7;3694:22;3728:12;3743:35;:10;7455:58:16;;12894:66:20;7455:58:16;;;12882:79:20;12977:12;;;12970:28;;;7325:7:16;;13014:12:20;;7455:58:16;;;;;;;;;;;;7445:69;;;;;;7438:76;;7256:265;;;;3743:35:7;3728:50;-1:-1:-1;3801:30:7;3814:16;;;;:6;:16;:::i;:::-;3801:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3801:4:7;;:30;-1:-1:-1;;3801:12:7;:30;-1:-1:-1;3801:30:7:i;:::-;3792:5;;-1:-1:-1;;;3792:5:7;;-1:-1:-1;;;;;3792:5:7;;;:39;;;3788:85;;785:1:0;3845:28:7;;;;;3788:85;3890:1;3883:8;;;3576:322;;;;;:::o;3363:158::-;3463:6;:8;;3475:12;;;;;-1:-1:-1;;;;;3463:8:7;;;;:6;:8;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;3463:8:7;;;;;-1:-1:-1;;;;;3463:8:7;;;;;;-1:-1:-1;;;;;3463:24:7;;3455:59;;;;-1:-1:-1;;;3455:59:7;;11540:2:20;3455:59:7;;;11522:21:20;11579:2;11559:18;;;11552:30;-1:-1:-1;;;11598:18:20;;;11591:52;11660:18;;3455:59:7;11338:346:20;4046:337:0;4127:24;;4123:254;;4185:82;;4168:12;;4193:10;;-1:-1:-1;;4245:17:0;4218:19;;4168:12;4185:82;4168:12;4185:82;4218:19;4193:10;4245:17;4185:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1674:233:7;1849:5;;-1:-1:-1;;;1849:5:7;;-1:-1:-1;;;;;1849:5:7;1835:10;:19;;:50;;-1:-1:-1;1858:10:7;1880:4;1858:27;1835:50;1827:73;;;;-1:-1:-1;;;1827:73:7;;12101:2:20;1827:73:7;;;12083:21:20;12140:2;12120:18;;;12113:30;-1:-1:-1;;;12159:18:20;;;12152:40;12209:18;;1827:73:7;11899:334:20;2915:146:7;2980:5;:15;;-1:-1:-1;;;;;2980:15:7;-1:-1:-1;;;;;;;;2980:15:7;;;;;;;;;;;;;3010:44;;3048:5;;;;;3035:11;3010:44;;;;;;-1:-1:-1;;3010:44:7;2915:146;:::o;1532:259:9:-;-1:-1:-1;;;;;1465:19:13;;;1605:95:9;;;;-1:-1:-1;;;1605:95:9;;12440:2:20;1605:95:9;;;12422:21:20;12479:2;12459:18;;;12452:30;12518:34;12498:18;;;12491:62;-1:-1:-1;;;12569:18:20;;;12562:43;12622:19;;1605:95:9;12238:409:20;1605:95:9;-1:-1:-1;;;;;;;;;;;1710:74:9;;-1:-1:-1;;;;;;1710:74:9;-1:-1:-1;;;;;1710:74:9;;;;;;;;;;1532:259::o;2183:295::-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;3661:227:16:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:16;3661:227;-1:-1:-1;;;3661:227:16:o;1897:152:9:-;1963:37;1982:17;1963:18;:37::i;:::-;2015:27;;-1:-1:-1;;;;;2015:27:9;;;;;;;;1897:152;:::o;6469:198:13:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;2145:730:16:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:16;;-1:-1:-1;2822:35:16;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:16;;13371:2:20;788:34:16;;;13353:21:20;13410:2;13390:18;;;13383:30;13449:26;13429:18;;;13422:54;13493:18;;788:34:16;13169:348:20;730:345:16;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:16;;13724:2:20;903:41:16;;;13706:21:20;13763:2;13743:18;;;13736:30;13802:33;13782:18;;;13775:61;13853:18;;903:41:16;13522:355:20;839:236:16;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:16;;14084:2:20;1020:44:16;;;14066:21:20;14123:2;14103:18;;;14096:30;14162:34;14142:18;;;14135:62;-1:-1:-1;;;14213:18:20;;;14206:32;14255:19;;1020:44:16;13882:398:20;6853:325:13;6994:12;7019;7033:23;7060:6;-1:-1:-1;;;;;7060:19:13;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;:69::i;:::-;7095:76;6853:325;-1:-1:-1;;;;;;6853:325:13:o;5069:1494:16:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:16;;-1:-1:-1;6221:30:16;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;14512:25:20;;;14585:4;14573:17;;14553:18;;;14546:45;;;;14607:18;;;14600:34;;;14650:18;;;14643:34;;;6374:24:16;;14484:19:20;;6374:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:16;;-1:-1:-1;;6374:24:16;;;-1:-1:-1;;;;;;;6412:20:16;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:16;;-1:-1:-1;5069:1494:16;;;;;;;;:::o;7466:628:13:-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:13;;;7908:60;;;;-1:-1:-1;;;7908:60:13;;14890:2:20;7908:60:13;;;14872:21:20;14929:2;14909:18;;;14902:30;14968:31;14948:18;;;14941:59;15017:18;;7908:60:13;14688:353:20;7908:60:13;-1:-1:-1;8003:10:13;7996:17;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;:::o;8616:540::-;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:13;;;;;;;;:::i;14:367:20:-;77:8;87:6;141:3;134:4;126:6;122:17;118:27;108:55;;159:1;156;149:12;108:55;-1:-1:-1;182:20:20;;225:18;214:30;;211:50;;;257:1;254;247:12;211:50;294:4;286:6;282:17;270:29;;354:3;347:4;337:6;334:1;330:14;322:6;318:27;314:38;311:47;308:67;;;371:1;368;361:12;386:784;519:6;527;535;543;596:2;584:9;575:7;571:23;567:32;564:52;;;612:1;609;602:12;564:52;652:9;639:23;681:18;722:2;714:6;711:14;708:34;;;738:1;735;728:12;708:34;777:70;839:7;830:6;819:9;815:22;777:70;:::i;:::-;866:8;;-1:-1:-1;751:96:20;-1:-1:-1;954:2:20;939:18;;926:32;;-1:-1:-1;970:16:20;;;967:36;;;999:1;996;989:12;967:36;;1038:72;1102:7;1091:8;1080:9;1076:24;1038:72;:::i;:::-;386:784;;;;-1:-1:-1;1129:8:20;-1:-1:-1;;;;386:784:20:o;1175:131::-;-1:-1:-1;;;;;1250:31:20;;1240:42;;1230:70;;1296:1;1293;1286:12;1311:247;1370:6;1423:2;1411:9;1402:7;1398:23;1394:32;1391:52;;;1439:1;1436;1429:12;1391:52;1478:9;1465:23;1497:31;1522:5;1497:31;:::i;1563:528::-;1672:6;1680;1688;1741:2;1729:9;1720:7;1716:23;1712:32;1709:52;;;1757:1;1754;1747:12;1709:52;1797:9;1784:23;1830:18;1822:6;1819:30;1816:50;;;1862:1;1859;1852:12;1816:50;1885:22;;1941:3;1923:16;;;1919:26;1916:46;;;1958:1;1955;1948:12;1916:46;1981:2;2030;2015:18;;2002:32;;-1:-1:-1;2081:2:20;2066:18;;;2053:32;;1563:528;-1:-1:-1;;;1563:528:20:o;2278:323::-;2354:6;2362;2415:2;2403:9;2394:7;2390:23;2386:32;2383:52;;;2431:1;2428;2421:12;2383:52;2470:9;2457:23;2489:31;2514:5;2489:31;:::i;:::-;2539:5;2591:2;2576:18;;;;2563:32;;-1:-1:-1;;;2278:323:20:o;2606:127::-;2667:10;2662:3;2658:20;2655:1;2648:31;2698:4;2695:1;2688:15;2722:4;2719:1;2712:15;2738:1056;2815:6;2823;2876:2;2864:9;2855:7;2851:23;2847:32;2844:52;;;2892:1;2889;2882:12;2844:52;2931:9;2918:23;2950:31;2975:5;2950:31;:::i;:::-;3000:5;-1:-1:-1;3056:2:20;3041:18;;3028:32;3079:18;3109:14;;;3106:34;;;3136:1;3133;3126:12;3106:34;3174:6;3163:9;3159:22;3149:32;;3219:7;3212:4;3208:2;3204:13;3200:27;3190:55;;3241:1;3238;3231:12;3190:55;3277:2;3264:16;3299:2;3295;3292:10;3289:36;;;3305:18;;:::i;:::-;3380:2;3374:9;3348:2;3434:13;;-1:-1:-1;;3430:22:20;;;3454:2;3426:31;3422:40;3410:53;;;3478:18;;;3498:22;;;3475:46;3472:72;;;3524:18;;:::i;:::-;3564:10;3560:2;3553:22;3599:2;3591:6;3584:18;3639:7;3634:2;3629;3625;3621:11;3617:20;3614:33;3611:53;;;3660:1;3657;3650:12;3611:53;3716:2;3711;3707;3703:11;3698:2;3690:6;3686:15;3673:46;3761:1;3756:2;3751;3743:6;3739:15;3735:24;3728:35;3782:6;3772:16;;;;;;;2738:1056;;;;;:::o;4416:794::-;4504:6;4512;4520;4528;4581:2;4569:9;4560:7;4556:23;4552:32;4549:52;;;4597:1;4594;4587:12;4549:52;4636:9;4623:23;4655:31;4680:5;4655:31;:::i;:::-;4705:5;-1:-1:-1;4757:2:20;4742:18;;4729:32;;-1:-1:-1;4812:2:20;4797:18;;4784:32;4835:18;4865:14;;;4862:34;;;4892:1;4889;4882:12;4862:34;4930:6;4919:9;4915:22;4905:32;;4975:7;4968:4;4964:2;4960:13;4956:27;4946:55;;4997:1;4994;4987:12;4946:55;5037:2;5024:16;5063:2;5055:6;5052:14;5049:34;;;5079:1;5076;5069:12;5049:34;5124:7;5119:2;5110:6;5106:2;5102:15;5098:24;5095:37;5092:57;;;5145:1;5142;5135:12;5092:57;4416:794;;;;-1:-1:-1;;5176:2:20;5168:11;;-1:-1:-1;;;4416:794:20:o;5563:127::-;5624:10;5619:3;5615:20;5612:1;5605:31;5655:4;5652:1;5645:15;5679:4;5676:1;5669:15;5695:521;5772:4;5778:6;5838:11;5825:25;5932:2;5928:7;5917:8;5901:14;5897:29;5893:43;5873:18;5869:68;5859:96;;5951:1;5948;5941:12;5859:96;5978:33;;6030:20;;;-1:-1:-1;6073:18:20;6062:30;;6059:50;;;6105:1;6102;6095:12;6059:50;6138:4;6126:17;;-1:-1:-1;6169:14:20;6165:27;;;6155:38;;6152:58;;;6206:1;6203;6196:12;6221:127;6282:10;6277:3;6273:20;6270:1;6263:31;6313:4;6310:1;6303:15;6337:4;6334:1;6327:15;6353:135;6392:3;6413:17;;;6410:43;;6433:18;;:::i;:::-;-1:-1:-1;6480:1:20;6469:13;;6353:135::o;6493:408::-;6695:2;6677:21;;;6734:2;6714:18;;;6707:30;6773:34;6768:2;6753:18;;6746:62;-1:-1:-1;;;6839:2:20;6824:18;;6817:42;6891:3;6876:19;;6493:408::o;6906:::-;7108:2;7090:21;;;7147:2;7127:18;;;7120:30;7186:34;7181:2;7166:18;;7159:62;-1:-1:-1;;;7252:2:20;7237:18;;7230:42;7304:3;7289:19;;6906:408::o;8039:184::-;8109:6;8162:2;8150:9;8141:7;8137:23;8133:32;8130:52;;;8178:1;8175;8168:12;8130:52;-1:-1:-1;8201:16:20;;8039:184;-1:-1:-1;8039:184:20:o;9203:258::-;9275:1;9285:113;9299:6;9296:1;9293:13;9285:113;;;9375:11;;;9369:18;9356:11;;;9349:39;9321:2;9314:10;9285:113;;;9416:6;9413:1;9410:13;9407:48;;;-1:-1:-1;;9451:1:20;9433:16;;9426:27;9203:258::o;9466:274::-;9595:3;9633:6;9627:13;9649:53;9695:6;9690:3;9683:4;9675:6;9671:17;9649:53;:::i;:::-;9718:16;;;;;9466:274;-1:-1:-1;;9466:274:20:o;11116:217::-;11154:3;-1:-1:-1;;;;;11243:2:20;11236:5;11232:14;11270:2;11261:7;11258:15;11255:41;;11276:18;;:::i;:::-;11325:1;11312:15;;11116:217;-1:-1:-1;;;11116:217:20:o;13037:127::-;13098:10;13093:3;13089:20;13086:1;13079:31;13129:4;13126:1;13119:15;13153:4;13150:1;13143:15;15046:383;15195:2;15184:9;15177:21;15158:4;15227:6;15221:13;15270:6;15265:2;15254:9;15250:18;15243:34;15286:66;15345:6;15340:2;15329:9;15325:18;15320:2;15312:6;15308:15;15286:66;:::i;:::-;15413:2;15392:15;-1:-1:-1;;15388:29:20;15373:45;;;;15420:2;15369:54;;15046:383;-1:-1:-1;;15046:383:20:o"},"methodIdentifiers":{"addDeposit()":"4a58db19","entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch(address[],bytes[])":"18dfb3c7","getDeposit()":"c399ec88","initialize(address)":"c4d66de8","nonce()":"affed0e0","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd","withdrawDepositTo(address,uint256)":"4d44560d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SimpleAccountInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"return the entryPoint used by this account. subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a transaction (called directly from owner, or by entryPoint)\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"execute a sequence of transactions\"},\"getDeposit()\":{\"notice\":\"check current account deposit in the entryPoint\"},\"nonce()\":{\"notice\":\"return the account nonce. subclass should return a nonce value that is used both by _validateAndUpdateNonce, and by the external provider (to read the current nonce)\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce. subclass doesn't need to override this method. Instead, it should override the specific internal validation methods.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"withdraw value from the account's deposit\"}},\"notice\":\"minimal account.  this is sample minimal account.  has execute, eth handling methods  has a single signer that can send requests through the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/samples/SimpleAccount.sol\":\"SimpleAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x73bc87e62dd54bc3d59d562fcaa3559f94ba606639fa6b96edde7eb4ce2eecd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4df277a04368858dfd3860d242a7caae265eca4bfafa650a60704462de339802\",\"dweb:/ipfs/QmW42jjQkjuQFEJK4wruykViS4rANorZA6i9Kd4nCwCBtv\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]},\"@account-abstraction/contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0xe5dcfefea777062e5304402deb17437cac36f3d7a443cd2a38560321749728b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a84a08e6b596bd7d2564817287ac735555d823be87ff2f2a1f0f07d94b86f49d\",\"dweb:/ipfs/QmUnVfSnWBfnAbLuMvpbNMb5SpVa2Ri6vs4Wx6sKBwk2PD\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad9dc47b06b495b38a0c788874f2241090fe92bd3a1d9ae1a46dcdf3ca3f2ba64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD9 0xDC SELFBALANCE 0xB0 PUSH12 0x495B38A0C788874F2241090F 0xE9 0x2B 0xD3 LOG1 0xD9 0xAE BYTE CHAINID 0xDC 0xDF EXTCODECOPY LOG3 CALLCODE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:8964:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad9dc47b06b495b38a0c788874f2241090fe92bd3a1d9ae1a46dcdf3ca3f2ba64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD9 0xDC SELFBALANCE 0xB0 PUSH12 0x495B38A0C788874F2241090F 0xE9 0x2B 0xD3 LOG1 0xD9 0xAE BYTE CHAINID 0xDC 0xDF EXTCODECOPY LOG3 CALLCODE 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:8964:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a19a196f730cd85cc8564cecf9986f049e77b4f84de305d82fe36978cc6cb6564736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x19A196F730CD85CC8564CE 0xCF SWAP10 DUP7 CREATE 0x49 0xE7 PUSH28 0x4F84DE305D82FE36978CC6CB6564736F6C634300080F003300000000 ","sourceMap":"1279:1391:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1391:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a19a196f730cd85cc8564cecf9986f049e77b4f84de305d82fe36978cc6cb6564736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x19A196F730CD85CC8564CE 0xCF SWAP10 DUP7 CREATE 0x49 0xE7 PUSH28 0x4F84DE305D82FE36978CC6CB6564736F6C634300080F003300000000 ","sourceMap":"1279:1391:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200890619f5610514fba99c95bbc7e318f6bd156bedab4da5d815eb64ae1c8d8ec64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PUSH2 0x9F56 LT MLOAD 0x4F 0xBA SWAP10 0xC9 JUMPDEST 0xBC PUSH31 0x318F6BD156BEDAB4DA5D815EB64AE1C8D8EC64736F6C634300080F00330000 ","sourceMap":"188:2065:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200890619f5610514fba99c95bbc7e318f6bd156bedab4da5d815eb64ae1c8d8ec64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PUSH2 0x9F56 LT MLOAD 0x4F 0xBA SWAP10 0xC9 JUMPDEST 0xBC PUSH31 0x318F6BD156BEDAB4DA5D815EB64AE1C8D8EC64736F6C634300080F00330000 ","sourceMap":"188:2065:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbcf4b39ee038cb419d22472ce25db4a00c95d9597fb3e75e730437c000edc3b64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xCF 0x4B CODECOPY 0xEE SUB DUP13 0xB4 NOT 0xD2 0x24 PUSH19 0xCE25DB4A00C95D9597FB3E75E730437C000EDC EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:8168:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8168:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbcf4b39ee038cb419d22472ce25db4a00c95d9597fb3e75e730437c000edc3b64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xCF 0x4B CODECOPY 0xEE SUB DUP13 0xB4 NOT 0xD2 0x24 PUSH19 0xCE25DB4A00C95D9597FB3E75E730437C000EDC EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:8168:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ccc108fbd1f9f201af754a4bcf054697366d6807bf9ee85b51e92c00e5ca92c64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xCC LT DUP16 0xBD 0x1F SWAP16 KECCAK256 BYTE 0xF7 SLOAD LOG4 0xBC CREATE SLOAD PUSH10 0x7366D6807BF9EE85B51E SWAP3 0xC0 0xE 0x5C 0xA9 0x2C PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"202:12302:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ccc108fbd1f9f201af754a4bcf054697366d6807bf9ee85b51e92c00e5ca92c64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xCC LT DUP16 0xBD 0x1F SWAP16 KECCAK256 BYTE 0xF7 SLOAD LOG4 0xBC CREATE SLOAD PUSH10 0x7366D6807BF9EE85B51E SWAP3 0xC0 0xE 0x5C 0xA9 0x2C PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"202:12302:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"contracts/test/SampleRecipient.sol":{"SampleRecipient":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"txOrigin","type":"address"},{"indexed":false,"internalType":"address","name":"msgSender","type":"address"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"Sender","type":"event"},{"inputs":[],"name":"reverting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"message","type":"string"}],"name":"something","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061023e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806325d9185c1461003b578063d1f9cf0e14610045575b600080fd5b610043610058565b005b6100436100533660046100e6565b610092565b60405162461bcd60e51b815260206004820152600b60248201526a1d195cdd081c995d995c9d60aa1b604482015260640160405180910390fd5b7f603c3fe9b00ecddbd86daa6cbfe9a7f26505792913b8d1dec79052d86b5f79df3233836040516100c593929190610197565b60405180910390a150565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100f857600080fd5b813567ffffffffffffffff8082111561011057600080fd5b818401915084601f83011261012457600080fd5b813581811115610136576101366100d0565b604051601f8201601f19908116603f0116810190838211818310171561015e5761015e6100d0565b8160405282815287602084870101111561017757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060018060a01b038086168352602081861681850152606060408501528451915081606085015260005b828110156101de578581018201518582016080015281016101c2565b828111156101f0576000608084870101525b5050601f01601f19169190910160800194935050505056fea2646970667358221220cb70f47d0bbefcd3adce04ac4794365cb93301ea83c7c2a045d96b822a0da7f064736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25D9185C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD1F9CF0E EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1D195CDD081C995D995C9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x603C3FE9B00ECDDBD86DAA6CBFE9A7F26505792913B8D1DEC79052D86B5F79DF ORIGIN CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x136 JUMPI PUSH2 0x136 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15E JUMPI PUSH2 0x15E PUSH2 0xD0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP7 AND DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP5 MLOAD SWAP2 POP DUP2 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DE JUMPI DUP6 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP2 ADD PUSH2 0x1C2 JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 PUSH1 0x80 DUP5 DUP8 ADD ADD MSTORE JUMPDEST POP POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x80 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH17 0xF47D0BBEFCD3ADCE04AC4794365CB93301 0xEA DUP4 0xC7 0xC2 LOG0 GASLIMIT 0xD9 PUSH12 0x822A0DA7F064736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"246:348:18:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@reverting_3651":{"entryPoint":88,"id":3651,"parameterSlots":0,"returnSlots":0},"@something_3643":{"entryPoint":146,"id":3643,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed":{"entryPoint":407,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_361f81e2902bbc1f0825a5286e2eb4da3daa90a399f773830c77d1088b247403__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":208,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2213:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:20"},"nodeType":"YulFunctionCall","src":"66:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:20"},"nodeType":"YulFunctionCall","src":"56:31:20"},"nodeType":"YulExpressionStatement","src":"56:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:20"},"nodeType":"YulFunctionCall","src":"96:15:20"},"nodeType":"YulExpressionStatement","src":"96:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:20"},"nodeType":"YulFunctionCall","src":"120:15:20"},"nodeType":"YulExpressionStatement","src":"120:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:20"},{"body":{"nodeType":"YulBlock","src":"226:842:20","statements":[{"body":{"nodeType":"YulBlock","src":"272:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"281:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"284:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"274:6:20"},"nodeType":"YulFunctionCall","src":"274:12:20"},"nodeType":"YulExpressionStatement","src":"274:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"247:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"256:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"243:3:20"},"nodeType":"YulFunctionCall","src":"243:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"268:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"239:3:20"},"nodeType":"YulFunctionCall","src":"239:32:20"},"nodeType":"YulIf","src":"236:52:20"},{"nodeType":"YulVariableDeclaration","src":"297:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"324:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"311:12:20"},"nodeType":"YulFunctionCall","src":"311:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"301:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"343:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"353:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"347:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"398:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"407:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"410:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"400:6:20"},"nodeType":"YulFunctionCall","src":"400:12:20"},"nodeType":"YulExpressionStatement","src":"400:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"386:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"394:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"383:2:20"},"nodeType":"YulFunctionCall","src":"383:14:20"},"nodeType":"YulIf","src":"380:34:20"},{"nodeType":"YulVariableDeclaration","src":"423:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"437:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"448:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"433:3:20"},"nodeType":"YulFunctionCall","src":"433:22:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"427:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"503:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"512:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"515:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"505:6:20"},"nodeType":"YulFunctionCall","src":"505:12:20"},"nodeType":"YulExpressionStatement","src":"505:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"482:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"486:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"478:3:20"},"nodeType":"YulFunctionCall","src":"478:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"493:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"474:3:20"},"nodeType":"YulFunctionCall","src":"474:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"467:6:20"},"nodeType":"YulFunctionCall","src":"467:35:20"},"nodeType":"YulIf","src":"464:55:20"},{"nodeType":"YulVariableDeclaration","src":"528:26:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"551:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"538:12:20"},"nodeType":"YulFunctionCall","src":"538:16:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"532:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"577:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"579:16:20"},"nodeType":"YulFunctionCall","src":"579:18:20"},"nodeType":"YulExpressionStatement","src":"579:18:20"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"569:2:20"},{"name":"_1","nodeType":"YulIdentifier","src":"573:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"566:2:20"},"nodeType":"YulFunctionCall","src":"566:10:20"},"nodeType":"YulIf","src":"563:36:20"},{"nodeType":"YulVariableDeclaration","src":"608:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"622:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"618:3:20"},"nodeType":"YulFunctionCall","src":"618:7:20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"612:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"634:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"654:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"648:5:20"},"nodeType":"YulFunctionCall","src":"648:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"638:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"666:71:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"688:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"712:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"716:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:20"},"nodeType":"YulFunctionCall","src":"708:13:20"},{"name":"_4","nodeType":"YulIdentifier","src":"723:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"704:3:20"},"nodeType":"YulFunctionCall","src":"704:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"728:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:20"},"nodeType":"YulFunctionCall","src":"700:31:20"},{"name":"_4","nodeType":"YulIdentifier","src":"733:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"696:3:20"},"nodeType":"YulFunctionCall","src":"696:40:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"684:3:20"},"nodeType":"YulFunctionCall","src":"684:53:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"670:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"796:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"798:16:20"},"nodeType":"YulFunctionCall","src":"798:18:20"},"nodeType":"YulExpressionStatement","src":"798:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"755:10:20"},{"name":"_1","nodeType":"YulIdentifier","src":"767:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"752:2:20"},"nodeType":"YulFunctionCall","src":"752:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"775:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"787:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"772:2:20"},"nodeType":"YulFunctionCall","src":"772:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"749:2:20"},"nodeType":"YulFunctionCall","src":"749:46:20"},"nodeType":"YulIf","src":"746:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"834:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"838:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"827:6:20"},"nodeType":"YulFunctionCall","src":"827:22:20"},"nodeType":"YulExpressionStatement","src":"827:22:20"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"865:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"873:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"858:6:20"},"nodeType":"YulFunctionCall","src":"858:18:20"},"nodeType":"YulExpressionStatement","src":"858:18:20"},{"body":{"nodeType":"YulBlock","src":"922:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"931:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"934:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"924:6:20"},"nodeType":"YulFunctionCall","src":"924:12:20"},"nodeType":"YulExpressionStatement","src":"924:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"899:2:20"},{"name":"_3","nodeType":"YulIdentifier","src":"903:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"895:3:20"},"nodeType":"YulFunctionCall","src":"895:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"908:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:20"},"nodeType":"YulFunctionCall","src":"891:20:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"913:7:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"888:2:20"},"nodeType":"YulFunctionCall","src":"888:33:20"},"nodeType":"YulIf","src":"885:53:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"964:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"972:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"960:3:20"},"nodeType":"YulFunctionCall","src":"960:15:20"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"981:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"977:3:20"},"nodeType":"YulFunctionCall","src":"977:11:20"},{"name":"_3","nodeType":"YulIdentifier","src":"990:2:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"947:12:20"},"nodeType":"YulFunctionCall","src":"947:46:20"},"nodeType":"YulExpressionStatement","src":"947:46:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1017:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"1025:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1013:3:20"},"nodeType":"YulFunctionCall","src":"1013:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"1030:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1009:3:20"},"nodeType":"YulFunctionCall","src":"1009:24:20"},{"kind":"number","nodeType":"YulLiteral","src":"1035:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1002:6:20"},"nodeType":"YulFunctionCall","src":"1002:35:20"},"nodeType":"YulExpressionStatement","src":"1002:35:20"},{"nodeType":"YulAssignment","src":"1046:16:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1056:6:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:20"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"192:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"203:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"215:6:20","type":""}],"src":"146:922:20"},{"body":{"nodeType":"YulBlock","src":"1247:161:20","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1264:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1275:2:20","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1257:6:20"},"nodeType":"YulFunctionCall","src":"1257:21:20"},"nodeType":"YulExpressionStatement","src":"1257:21:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1298:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1309:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1294:3:20"},"nodeType":"YulFunctionCall","src":"1294:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"1314:2:20","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1287:6:20"},"nodeType":"YulFunctionCall","src":"1287:30:20"},"nodeType":"YulExpressionStatement","src":"1287:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1337:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1348:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1333:3:20"},"nodeType":"YulFunctionCall","src":"1333:18:20"},{"hexValue":"7465737420726576657274","kind":"string","nodeType":"YulLiteral","src":"1353:13:20","type":"","value":"test revert"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1326:6:20"},"nodeType":"YulFunctionCall","src":"1326:41:20"},"nodeType":"YulExpressionStatement","src":"1326:41:20"},{"nodeType":"YulAssignment","src":"1376:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1388:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1399:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1384:3:20"},"nodeType":"YulFunctionCall","src":"1384:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1376:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_361f81e2902bbc1f0825a5286e2eb4da3daa90a399f773830c77d1088b247403__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1224:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1238:4:20","type":""}],"src":"1073:335:20"},{"body":{"nodeType":"YulBlock","src":"1590:621:20","statements":[{"nodeType":"YulVariableDeclaration","src":"1600:29:20","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1618:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1623:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1614:3:20"},"nodeType":"YulFunctionCall","src":"1614:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1627:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1610:3:20"},"nodeType":"YulFunctionCall","src":"1610:19:20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1604:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1645:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1660:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"1668:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1656:3:20"},"nodeType":"YulFunctionCall","src":"1656:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:20"},"nodeType":"YulFunctionCall","src":"1638:34:20"},"nodeType":"YulExpressionStatement","src":"1638:34:20"},{"nodeType":"YulVariableDeclaration","src":"1681:12:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:2:20","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1685:2:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:20"},{"name":"_2","nodeType":"YulIdentifier","src":"1724:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1709:3:20"},"nodeType":"YulFunctionCall","src":"1709:18:20"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1733:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"1741:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1729:3:20"},"nodeType":"YulFunctionCall","src":"1729:15:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1702:6:20"},"nodeType":"YulFunctionCall","src":"1702:43:20"},"nodeType":"YulExpressionStatement","src":"1702:43:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1765:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1776:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1761:3:20"},"nodeType":"YulFunctionCall","src":"1761:18:20"},{"kind":"number","nodeType":"YulLiteral","src":"1781:2:20","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1754:6:20"},"nodeType":"YulFunctionCall","src":"1754:30:20"},"nodeType":"YulExpressionStatement","src":"1754:30:20"},{"nodeType":"YulVariableDeclaration","src":"1793:27:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1813:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1807:5:20"},"nodeType":"YulFunctionCall","src":"1807:13:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1797:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1840:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1851:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1836:3:20"},"nodeType":"YulFunctionCall","src":"1836:18:20"},{"name":"length","nodeType":"YulIdentifier","src":"1856:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1829:6:20"},"nodeType":"YulFunctionCall","src":"1829:34:20"},"nodeType":"YulExpressionStatement","src":"1829:34:20"},{"nodeType":"YulVariableDeclaration","src":"1872:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"1881:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1876:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"1941:91:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:20"},{"name":"i","nodeType":"YulIdentifier","src":"1981:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:20"},"nodeType":"YulFunctionCall","src":"1966:17:20"},{"kind":"number","nodeType":"YulLiteral","src":"1985:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1962:3:20"},"nodeType":"YulFunctionCall","src":"1962:27:20"},{"arguments":[{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2005:6:20"},{"name":"i","nodeType":"YulIdentifier","src":"2013:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2001:3:20"},"nodeType":"YulFunctionCall","src":"2001:14:20"},{"name":"_2","nodeType":"YulIdentifier","src":"2017:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1997:3:20"},"nodeType":"YulFunctionCall","src":"1997:23:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1991:5:20"},"nodeType":"YulFunctionCall","src":"1991:30:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1955:6:20"},"nodeType":"YulFunctionCall","src":"1955:67:20"},"nodeType":"YulExpressionStatement","src":"1955:67:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1902:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"1905:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1899:2:20"},"nodeType":"YulFunctionCall","src":"1899:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1913:19:20","statements":[{"nodeType":"YulAssignment","src":"1915:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1924:1:20"},{"name":"_2","nodeType":"YulIdentifier","src":"1927:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1920:3:20"},"nodeType":"YulFunctionCall","src":"1920:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1915:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"1895:3:20","statements":[]},"src":"1891:141:20"},{"body":{"nodeType":"YulBlock","src":"2066:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2095:9:20"},{"name":"length","nodeType":"YulIdentifier","src":"2106:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2091:3:20"},"nodeType":"YulFunctionCall","src":"2091:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"2115:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:20"},"nodeType":"YulFunctionCall","src":"2087:32:20"},{"kind":"number","nodeType":"YulLiteral","src":"2121:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2080:6:20"},"nodeType":"YulFunctionCall","src":"2080:43:20"},"nodeType":"YulExpressionStatement","src":"2080:43:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2047:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"2050:6:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2044:2:20"},"nodeType":"YulFunctionCall","src":"2044:13:20"},"nodeType":"YulIf","src":"2041:92:20"},{"nodeType":"YulAssignment","src":"2142:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2177:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"2185:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2173:3:20"},"nodeType":"YulFunctionCall","src":"2173:15:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2194:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2190:3:20"},"nodeType":"YulFunctionCall","src":"2190:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2169:3:20"},"nodeType":"YulFunctionCall","src":"2169:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:20"},"nodeType":"YulFunctionCall","src":"2154:45:20"},{"kind":"number","nodeType":"YulLiteral","src":"2201:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2150:3:20"},"nodeType":"YulFunctionCall","src":"2150:55:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2142:4:20"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1543:9:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1554:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1562:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1570:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1581:4:20","type":""}],"src":"1413:798:20"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_361f81e2902bbc1f0825a5286e2eb4da3daa90a399f773830c77d1088b247403__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"test revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, _1))\n        mstore(add(headStart, 64), 96)\n        let length := mload(value2)\n        mstore(add(headStart, 96), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _2) }\n        {\n            mstore(add(add(headStart, i), 128), mload(add(add(value2, i), _2)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 128), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 128)\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c806325d9185c1461003b578063d1f9cf0e14610045575b600080fd5b610043610058565b005b6100436100533660046100e6565b610092565b60405162461bcd60e51b815260206004820152600b60248201526a1d195cdd081c995d995c9d60aa1b604482015260640160405180910390fd5b7f603c3fe9b00ecddbd86daa6cbfe9a7f26505792913b8d1dec79052d86b5f79df3233836040516100c593929190610197565b60405180910390a150565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100f857600080fd5b813567ffffffffffffffff8082111561011057600080fd5b818401915084601f83011261012457600080fd5b813581811115610136576101366100d0565b604051601f8201601f19908116603f0116810190838211818310171561015e5761015e6100d0565b8160405282815287602084870101111561017757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060018060a01b038086168352602081861681850152606060408501528451915081606085015260005b828110156101de578581018201518582016080015281016101c2565b828111156101f0576000608084870101525b5050601f01601f19169190910160800194935050505056fea2646970667358221220cb70f47d0bbefcd3adce04ac4794365cb93301ea83c7c2a045d96b822a0da7f064736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25D9185C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD1F9CF0E EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43 PUSH2 0x53 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1D195CDD081C995D995C9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x603C3FE9B00ECDDBD86DAA6CBFE9A7F26505792913B8D1DEC79052D86B5F79DF ORIGIN CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x136 JUMPI PUSH2 0x136 PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15E JUMPI PUSH2 0x15E PUSH2 0xD0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP7 AND DUP2 DUP6 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE DUP5 MLOAD SWAP2 POP DUP2 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DE JUMPI DUP6 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP2 ADD PUSH2 0x1C2 JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 PUSH1 0x80 DUP5 DUP8 ADD ADD MSTORE JUMPDEST POP POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x80 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH17 0xF47D0BBEFCD3ADCE04AC4794365CB93301 0xEA DUP4 0xC7 0xC2 LOG0 GASLIMIT 0xD9 PUSH12 0x822A0DA7F064736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"246:348:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:67;;;:::i;:::-;;377:109;;;;;;:::i;:::-;;:::i;525:67::-;563:22;;-1:-1:-1;;;563:22:18;;1275:2:20;563:22:18;;;1257:21:20;1314:2;1294:18;;;1287:30;-1:-1:-1;;;1333:18:20;;;1326:41;1384:18;;563:22:18;;;;;;;377:109;441:38;448:9;459:10;471:7;441:38;;;;;;;;:::i;:::-;;;;;;;;377:109;:::o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:922;215:6;268:2;256:9;247:7;243:23;239:32;236:52;;;284:1;281;274:12;236:52;324:9;311:23;353:18;394:2;386:6;383:14;380:34;;;410:1;407;400:12;380:34;448:6;437:9;433:22;423:32;;493:7;486:4;482:2;478:13;474:27;464:55;;515:1;512;505:12;464:55;551:2;538:16;573:2;569;566:10;563:36;;;579:18;;:::i;:::-;654:2;648:9;622:2;708:13;;-1:-1:-1;;704:22:20;;;728:2;700:31;696:40;684:53;;;752:18;;;772:22;;;749:46;746:72;;;798:18;;:::i;:::-;838:10;834:2;827:22;873:2;865:6;858:18;913:7;908:2;903;899;895:11;891:20;888:33;885:53;;;934:1;931;924:12;885:53;990:2;985;981;977:11;972:2;964:6;960:15;947:46;1035:1;1013:15;;;1030:2;1009:24;1002:35;;;;-1:-1:-1;1017:6:20;146:922;-1:-1:-1;;;;;146:922:20:o;1413:798::-;1581:4;1627:1;1623;1618:3;1614:11;1610:19;1668:2;1660:6;1656:15;1645:9;1638:34;1691:2;1741;1733:6;1729:15;1724:2;1713:9;1709:18;1702:43;1781:2;1776;1765:9;1761:18;1754:30;1813:6;1807:13;1793:27;;1856:6;1851:2;1840:9;1836:18;1829:34;1881:1;1891:141;1905:6;1902:1;1899:13;1891:141;;;2001:14;;;1997:23;;1991:30;1966:17;;;1985:3;1962:27;1955:67;1920:10;;1891:141;;;2050:6;2047:1;2044:13;2041:92;;;2121:1;2115:3;2106:6;2095:9;2091:22;2087:32;2080:43;2041:92;-1:-1:-1;;2194:2:20;2173:15;-1:-1:-1;;2169:29:20;2154:45;;;;2201:3;2150:55;;1413:798;-1:-1:-1;;;;1413:798:20:o"},"methodIdentifiers":{"reverting()":"25d9185c","something(string)":"d1f9cf0e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Sender\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"reverting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"something\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SampleRecipient.sol\":\"SampleRecipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x73bc87e62dd54bc3d59d562fcaa3559f94ba606639fa6b96edde7eb4ce2eecd5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4df277a04368858dfd3860d242a7caae265eca4bfafa650a60704462de339802\",\"dweb:/ipfs/QmW42jjQkjuQFEJK4wruykViS4rANorZA6i9Kd4nCwCBtv\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x4bad395ba0b408c87d0a30a76f8fd5a9915e3a531daeee23ccea0671574597a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c737b70ddf5a0e25633dc2e4db8f377943898d5f143d48b9c2aeffbe00e5b303\",\"dweb:/ipfs/QmWEVD6a372RDKyXQUXNWAohA7BGqNehBJnGi56HAmNFpm\"]},\"@account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xd0c4a53a5b0d7faa81baba9fee2233c8a6c0d2a2661238e1a02062335316a0cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c5ed2b96415dc1a0c37adc71644aed6f07bb0e8b6216a2412ba580d9e485c28b\",\"dweb:/ipfs/QmUkGMFRXWA8TZxVjH9EmdaSE8mw7ZigYURZ9k1EXKe9Bk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xf67381bb53c148ce587a74acdf576cc05d641a952180d801ac982898de30810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://95a3d90bcacb354a4d00e7294954248f0b85dd957b5a1e85d665095e88956c06\",\"dweb:/ipfs/QmUeLoiGPi4RqCJ1pZRGThiEhPvtkbquzHvLuyXtQU2wZg\"]},\"@account-abstraction/contracts/samples/SimpleAccount.sol\":{\"keccak256\":\"0xe5dcfefea777062e5304402deb17437cac36f3d7a443cd2a38560321749728b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a84a08e6b596bd7d2564817287ac735555d823be87ff2f2a1f0f07d94b86f49d\",\"dweb:/ipfs/QmUnVfSnWBfnAbLuMvpbNMb5SpVa2Ri6vs4Wx6sKBwk2PD\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/test/SampleRecipient.sol\":{\"keccak256\":\"0x98baebb5c185c6b36b37067097d282037a809e84c9509f7438fa00bec8e02462\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb28081b8175f02093f1c0b5b2793a39998f7876aea6c7cd2a0b8d5d98aeb0b\",\"dweb:/ipfs/QmTzXsQD9Yca9Xa9WMgvYfgn2YePmyTRk9AhKVj1F4f2mu\"]}},\"version\":1}"}},"contracts/test/SingletonFactory.sol":{"SingletonFactory":{"abi":[{"inputs":[{"internalType":"bytes","name":"_initCode","type":"bytes"},{"internalType":"bytes32","name":"_salt","type":"bytes32"}],"name":"deploy","outputs":[{"internalType":"address payable","name":"createdContract","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610173806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634af63f0214610030575b600080fd5b61004361003e366004610088565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b6000818351602085016000f59392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561009b57600080fd5b823567ffffffffffffffff808211156100b357600080fd5b818501915085601f8301126100c757600080fd5b8135818111156100d9576100d9610072565b604051601f8201601f19908116603f0116810190838211818310171561010157610101610072565b8160405282815288602084870101111561011a57600080fd5b82602086016020830137600060209382018401529896909101359650505050505056fea2646970667358221220942f273f033772d703ba03c258b70c24fa13dd7248a7d6289b6f626bb6a62c5d64736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AF63F02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH1 0x0 CREATE2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD9 JUMPI PUSH2 0xD9 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x101 JUMPI PUSH2 0x101 PUSH2 0x72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x2F 0x27 EXTCODEHASH SUB CALLDATACOPY PUSH19 0xD703BA03C258B70C24FA13DD7248A7D6289B6F PUSH3 0x6BB6A6 0x2C 0x5D PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"306:547:19:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@deploy_3667":{"entryPoint":95,"id":3667,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_bytes32":{"entryPoint":136,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1371:20","statements":[{"nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:20","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:20","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:20"},"nodeType":"YulFunctionCall","src":"66:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:20"},"nodeType":"YulFunctionCall","src":"56:31:20"},"nodeType":"YulExpressionStatement","src":"56:31:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:20"},"nodeType":"YulFunctionCall","src":"96:15:20"},"nodeType":"YulExpressionStatement","src":"96:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:20"},"nodeType":"YulFunctionCall","src":"120:15:20"},"nodeType":"YulExpressionStatement","src":"120:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:20"},{"body":{"nodeType":"YulBlock","src":"242:903:20","statements":[{"body":{"nodeType":"YulBlock","src":"288:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"297:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"300:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"290:6:20"},"nodeType":"YulFunctionCall","src":"290:12:20"},"nodeType":"YulExpressionStatement","src":"290:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"263:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"272:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"259:3:20"},"nodeType":"YulFunctionCall","src":"259:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"284:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"255:3:20"},"nodeType":"YulFunctionCall","src":"255:32:20"},"nodeType":"YulIf","src":"252:52:20"},{"nodeType":"YulVariableDeclaration","src":"313:37:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"340:9:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"327:12:20"},"nodeType":"YulFunctionCall","src":"327:23:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"317:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"359:28:20","value":{"kind":"number","nodeType":"YulLiteral","src":"369:18:20","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"363:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"414:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"423:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"416:6:20"},"nodeType":"YulFunctionCall","src":"416:12:20"},"nodeType":"YulExpressionStatement","src":"416:12:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"402:6:20"},{"name":"_1","nodeType":"YulIdentifier","src":"410:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"399:2:20"},"nodeType":"YulFunctionCall","src":"399:14:20"},"nodeType":"YulIf","src":"396:34:20"},{"nodeType":"YulVariableDeclaration","src":"439:32:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"453:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"464:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:20"},"nodeType":"YulFunctionCall","src":"449:22:20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"443:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"519:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"528:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"531:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"521:6:20"},"nodeType":"YulFunctionCall","src":"521:12:20"},"nodeType":"YulExpressionStatement","src":"521:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"498:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:20"},"nodeType":"YulFunctionCall","src":"494:13:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"509:7:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"490:3:20"},"nodeType":"YulFunctionCall","src":"490:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"483:6:20"},"nodeType":"YulFunctionCall","src":"483:35:20"},"nodeType":"YulIf","src":"480:55:20"},{"nodeType":"YulVariableDeclaration","src":"544:26:20","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"567:2:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"554:12:20"},"nodeType":"YulFunctionCall","src":"554:16:20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"548:2:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"593:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"595:16:20"},"nodeType":"YulFunctionCall","src":"595:18:20"},"nodeType":"YulExpressionStatement","src":"595:18:20"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"585:2:20"},{"name":"_1","nodeType":"YulIdentifier","src":"589:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"582:2:20"},"nodeType":"YulFunctionCall","src":"582:10:20"},"nodeType":"YulIf","src":"579:36:20"},{"nodeType":"YulVariableDeclaration","src":"624:17:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"634:3:20"},"nodeType":"YulFunctionCall","src":"634:7:20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"628:2:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"650:23:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"670:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"664:5:20"},"nodeType":"YulFunctionCall","src":"664:9:20"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"654:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"682:71:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"704:6:20"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"728:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"732:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"724:3:20"},"nodeType":"YulFunctionCall","src":"724:13:20"},{"name":"_4","nodeType":"YulIdentifier","src":"739:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"720:3:20"},"nodeType":"YulFunctionCall","src":"720:22:20"},{"kind":"number","nodeType":"YulLiteral","src":"744:2:20","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:20"},"nodeType":"YulFunctionCall","src":"716:31:20"},{"name":"_4","nodeType":"YulIdentifier","src":"749:2:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"712:3:20"},"nodeType":"YulFunctionCall","src":"712:40:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:20"},"nodeType":"YulFunctionCall","src":"700:53:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"686:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"812:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"814:16:20"},"nodeType":"YulFunctionCall","src":"814:18:20"},"nodeType":"YulExpressionStatement","src":"814:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"771:10:20"},{"name":"_1","nodeType":"YulIdentifier","src":"783:2:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"768:2:20"},"nodeType":"YulFunctionCall","src":"768:18:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"791:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"803:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"788:2:20"},"nodeType":"YulFunctionCall","src":"788:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"765:2:20"},"nodeType":"YulFunctionCall","src":"765:46:20"},"nodeType":"YulIf","src":"762:72:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"850:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"854:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"843:6:20"},"nodeType":"YulFunctionCall","src":"843:22:20"},"nodeType":"YulExpressionStatement","src":"843:22:20"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"881:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"889:2:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"874:6:20"},"nodeType":"YulFunctionCall","src":"874:18:20"},"nodeType":"YulExpressionStatement","src":"874:18:20"},{"body":{"nodeType":"YulBlock","src":"940:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"949:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"952:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"942:6:20"},"nodeType":"YulFunctionCall","src":"942:12:20"},"nodeType":"YulExpressionStatement","src":"942:12:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"915:2:20"},{"name":"_3","nodeType":"YulIdentifier","src":"919:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"911:3:20"},"nodeType":"YulFunctionCall","src":"911:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"924:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"907:3:20"},"nodeType":"YulFunctionCall","src":"907:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"931:7:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"904:2:20"},"nodeType":"YulFunctionCall","src":"904:35:20"},"nodeType":"YulIf","src":"901:55:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"982:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"990:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"978:3:20"},"nodeType":"YulFunctionCall","src":"978:17:20"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1001:2:20"},{"kind":"number","nodeType":"YulLiteral","src":"1005:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"997:3:20"},"nodeType":"YulFunctionCall","src":"997:13:20"},{"name":"_3","nodeType":"YulIdentifier","src":"1012:2:20"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"965:12:20"},"nodeType":"YulFunctionCall","src":"965:50:20"},"nodeType":"YulExpressionStatement","src":"965:50:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1039:6:20"},{"name":"_3","nodeType":"YulIdentifier","src":"1047:2:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1035:3:20"},"nodeType":"YulFunctionCall","src":"1035:15:20"},{"kind":"number","nodeType":"YulLiteral","src":"1052:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1031:3:20"},"nodeType":"YulFunctionCall","src":"1031:26:20"},{"kind":"number","nodeType":"YulLiteral","src":"1059:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1024:6:20"},"nodeType":"YulFunctionCall","src":"1024:37:20"},"nodeType":"YulExpressionStatement","src":"1024:37:20"},{"nodeType":"YulAssignment","src":"1070:16:20","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1080:6:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1070:6:20"}]},{"nodeType":"YulAssignment","src":"1095:44:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1122:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1133:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1118:3:20"},"nodeType":"YulFunctionCall","src":"1118:20:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1105:12:20"},"nodeType":"YulFunctionCall","src":"1105:34:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1095:6:20"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"200:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"211:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"223:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"231:6:20","type":""}],"src":"146:999:20"},{"body":{"nodeType":"YulBlock","src":"1267:102:20","statements":[{"nodeType":"YulAssignment","src":"1277:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1300:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1285:3:20"},"nodeType":"YulFunctionCall","src":"1285:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1277:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:20"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1334:6:20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1350:3:20","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1355:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1346:3:20"},"nodeType":"YulFunctionCall","src":"1346:11:20"},{"kind":"number","nodeType":"YulLiteral","src":"1359:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1342:3:20"},"nodeType":"YulFunctionCall","src":"1342:19:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1330:3:20"},"nodeType":"YulFunctionCall","src":"1330:32:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:20"},"nodeType":"YulFunctionCall","src":"1312:51:20"},"nodeType":"YulExpressionStatement","src":"1312:51:20"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1236:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1247:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1258:4:20","type":""}],"src":"1150:219:20"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_2, 0x20), _3)\n        mstore(add(add(memPtr, _3), 0x20), 0)\n        value0 := memPtr\n        value1 := calldataload(add(headStart, 0x20))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c80634af63f0214610030575b600080fd5b61004361003e366004610088565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b6000818351602085016000f59392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561009b57600080fd5b823567ffffffffffffffff808211156100b357600080fd5b818501915085601f8301126100c757600080fd5b8135818111156100d9576100d9610072565b604051601f8201601f19908116603f0116810190838211818310171561010157610101610072565b8160405282815288602084870101111561011a57600080fd5b82602086016020830137600060209382018401529896909101359650505050505056fea2646970667358221220942f273f033772d703ba03c258b70c24fa13dd7248a7d6289b6f626bb6a62c5d64736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AF63F02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH1 0x0 CREATE2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD9 JUMPI PUSH2 0xD9 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x101 JUMPI PUSH2 0x101 PUSH2 0x72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x2F 0x27 EXTCODEHASH SUB CALLDATACOPY PUSH19 0xD703BA03C258B70C24FA13DD7248A7D6289B6F PUSH3 0x6BB6A6 0x2C 0x5D PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"306:547:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:241;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1330:32:20;;;1312:51;;1300:2;1285:18;610:241:19;;;;;;;;689:31;829:5;817:9;811:16;804:4;793:9;789:20;786:1;778:57;759:76;610:241;-1:-1:-1;;;610:241:19:o;14:127:20:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:999;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;340:9;327:23;369:18;410:2;402:6;399:14;396:34;;;426:1;423;416:12;396:34;464:6;453:9;449:22;439:32;;509:7;502:4;498:2;494:13;490:27;480:55;;531:1;528;521:12;480:55;567:2;554:16;589:2;585;582:10;579:36;;;595:18;;:::i;:::-;670:2;664:9;638:2;724:13;;-1:-1:-1;;720:22:20;;;744:2;716:31;712:40;700:53;;;768:18;;;788:22;;;765:46;762:72;;;814:18;;:::i;:::-;854:10;850:2;843:22;889:2;881:6;874:18;931:7;924:4;919:2;915;911:11;907:22;904:35;901:55;;;952:1;949;942:12;901:55;1012:2;1005:4;1001:2;997:13;990:4;982:6;978:17;965:50;1059:1;1052:4;1035:15;;;1031:26;;1024:37;1035:15;1118:20;;;;1105:34;;-1:-1:-1;;;;;;146:999:20:o"},"methodIdentifiers":{"deploy(bytes,bytes32)":"4af63f02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"createdContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ricardo Guilherme Schmidt (Status Research & Development GmbH)\",\"kind\":\"dev\",\"methods\":{\"deploy(bytes,bytes32)\":{\"params\":{\"_initCode\":\"Initialization code.\",\"_salt\":\"Arbitrary value to modify resulting address.\"},\"returns\":{\"createdContract\":\"Created contract address.\"}}},\"title\":\"Singleton Factory (EIP-2470)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(bytes,bytes32)\":{\"notice\":\"Deploys `_initCode` using `_salt` for defining the deterministic address.\"}},\"notice\":\"Exposes CREATE2 (EIP-1014) to deploy bytecode on deterministic addresses based on initialization code and salt.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/SingletonFactory.sol\":\"SingletonFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/SingletonFactory.sol\":{\"keccak256\":\"0x35349846a035b6d520c9dd4bf147e72725df861a0df7f2db85a9a97868d76bf9\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://96868f93e815f69c3abb6cc716fac1cf7d39e5295c87e1efbd77d4a62f4b3b6e\",\"dweb:/ipfs/QmWVqWVdEjBjv3qbMvWBcEyfLQooxHED6icDGKzkFi9dda\"]}},\"version\":1}"}}}}}